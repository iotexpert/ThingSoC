ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	cydelayFreqHz
  18              		.data
  19              		.align	2
  20              		.type	cydelayFreqHz, %object
  21              		.size	cydelayFreqHz, 4
  22              	cydelayFreqHz:
  23 0000 006CDC02 		.word	48000000
  24              		.global	cydelayFreqKhz
  25              		.align	2
  26              		.type	cydelayFreqKhz, %object
  27              		.size	cydelayFreqKhz, 4
  28              	cydelayFreqKhz:
  29 0004 80BB0000 		.word	48000
  30              		.global	cydelayFreqMhz
  31              		.type	cydelayFreqMhz, %object
  32              		.size	cydelayFreqMhz, 1
  33              	cydelayFreqMhz:
  34 0008 30       		.byte	48
  35              		.global	cydelay32kMs
  36 0009 000000   		.align	2
  37              		.type	cydelay32kMs, %object
  38              		.size	cydelay32kMs, 4
  39              	cydelay32kMs:
  40 000c 0000C05D 		.word	1572864000
  41              		.bss
  42              		.align	2
  43              	CySysTickCallbacks:
  44 0000 00000000 		.space	20
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	CySysTickInitVar
  46              		.align	2
  47              		.type	CySysTickInitVar, %object
  48              		.size	CySysTickInitVar, 4
  49              	CySysTickInitVar:
  50 0014 00000000 		.space	4
  51              		.global	cyImoFreqMhz2Reg
  52              		.section	.rodata
  53              		.align	2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 2


  54              		.type	cyImoFreqMhz2Reg, %object
  55              		.size	cyImoFreqMhz2Reg, 46
  56              	cyImoFreqMhz2Reg:
  57 0000 03       		.byte	3
  58 0001 04       		.byte	4
  59 0002 05       		.byte	5
  60 0003 06       		.byte	6
  61 0004 07       		.byte	7
  62 0005 08       		.byte	8
  63 0006 09       		.byte	9
  64 0007 0A       		.byte	10
  65 0008 0B       		.byte	11
  66 0009 0C       		.byte	12
  67 000a 0E       		.byte	14
  68 000b 0F       		.byte	15
  69 000c 10       		.byte	16
  70 000d 11       		.byte	17
  71 000e 12       		.byte	18
  72 000f 13       		.byte	19
  73 0010 14       		.byte	20
  74 0011 15       		.byte	21
  75 0012 16       		.byte	22
  76 0013 17       		.byte	23
  77 0014 18       		.byte	24
  78 0015 19       		.byte	25
  79 0016 1B       		.byte	27
  80 0017 1C       		.byte	28
  81 0018 1D       		.byte	29
  82 0019 1E       		.byte	30
  83 001a 1F       		.byte	31
  84 001b 20       		.byte	32
  85 001c 21       		.byte	33
  86 001d 22       		.byte	34
  87 001e 23       		.byte	35
  88 001f 25       		.byte	37
  89 0020 26       		.byte	38
  90 0021 27       		.byte	39
  91 0022 28       		.byte	40
  92 0023 29       		.byte	41
  93 0024 2A       		.byte	42
  94 0025 2B       		.byte	43
  95 0026 2E       		.byte	46
  96 0027 2F       		.byte	47
  97 0028 30       		.byte	48
  98 0029 31       		.byte	49
  99 002a 32       		.byte	50
 100 002b 33       		.byte	51
 101 002c 34       		.byte	52
 102 002d 35       		.byte	53
 103              		.global	cyImoFreqMhz2DpllOffset
 104 002e 0000     		.align	2
 105              		.type	cyImoFreqMhz2DpllOffset, %object
 106              		.size	cyImoFreqMhz2DpllOffset, 23
 107              	cyImoFreqMhz2DpllOffset:
 108 0030 EE       		.byte	-18
 109 0031 DB       		.byte	-37
 110 0032 C9       		.byte	-55
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 3


 111 0033 B9       		.byte	-71
 112 0034 AA       		.byte	-86
 113 0035 9B       		.byte	-101
 114 0036 8E       		.byte	-114
 115 0037 82       		.byte	-126
 116 0038 76       		.byte	118
 117 0039 6B       		.byte	107
 118 003a 60       		.byte	96
 119 003b 56       		.byte	86
 120 003c 4D       		.byte	77
 121 003d 44       		.byte	68
 122 003e 3B       		.byte	59
 123 003f 33       		.byte	51
 124 0040 2C       		.byte	44
 125 0041 24       		.byte	36
 126 0042 1D       		.byte	29
 127 0043 17       		.byte	23
 128 0044 10       		.byte	16
 129 0045 0A       		.byte	10
 130 0046 04       		.byte	4
 131              		.global	CySysClkImoTrim4
 132 0047 00       		.bss
 133              		.align	2
 134              		.type	CySysClkImoTrim4, %object
 135              		.size	CySysClkImoTrim4, 4
 136              	CySysClkImoTrim4:
 137 0018 00000000 		.space	4
 138              		.global	CySysClkPumpConfig
 139              		.data
 140              		.align	2
 141              		.type	CySysClkPumpConfig, %object
 142              		.size	CySysClkPumpConfig, 4
 143              	CySysClkPumpConfig:
 144 0010 01000000 		.word	1
 145              		.section	.text.CySysClkImoStart,"ax",%progbits
 146              		.align	2
 147              		.global	CySysClkImoStart
 148              		.code	16
 149              		.thumb_func
 150              		.type	CySysClkImoStart, %function
 151              	CySysClkImoStart:
 152              	.LFB1:
 153              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 4


  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 5


  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 154              		.loc 1 108 0
 155              		.cfi_startproc
 156 0000 80B5     		push	{r7, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 00AF     		add	r7, sp, #0
 161              		.cfi_def_cfa_register 7
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 162              		.loc 1 109 0
 163 0004 054B     		ldr	r3, .L2
 164 0006 054A     		ldr	r2, .L2
 165 0008 1268     		ldr	r2, [r2]
 166 000a 8021     		mov	r1, #128
 167 000c 0906     		lsl	r1, r1, #24
 168 000e 0A43     		orr	r2, r1
 169 0010 1A60     		str	r2, [r3]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 6


 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 170              		.loc 1 120 0
 171 0012 FFF7FEFF 		bl	CySysClkImoEnableUsbLock
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 172              		.loc 1 124 0
 173 0016 BD46     		mov	sp, r7
 174              		@ sp needed
 175 0018 80BD     		pop	{r7, pc}
 176              	.L3:
 177 001a C046     		.align	2
 178              	.L2:
 179 001c 08010B40 		.word	1074462984
 180              		.cfi_endproc
 181              	.LFE1:
 182              		.size	CySysClkImoStart, .-CySysClkImoStart
 183              		.section	.text.CySysClkImoStop,"ax",%progbits
 184              		.align	2
 185              		.global	CySysClkImoStop
 186              		.code	16
 187              		.thumb_func
 188              		.type	CySysClkImoStop, %function
 189              	CySysClkImoStop:
 190              	.LFB2:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 191              		.loc 1 140 0
 192              		.cfi_startproc
 193 0000 80B5     		push	{r7, lr}
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 00AF     		add	r7, sp, #0
 198              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 7


 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 199              		.loc 1 142 0
 200 0004 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 201              		.loc 1 146 0
 202 0008 FFF7FEFF 		bl	CySysClkImoDisableUsbLock
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 203              		.loc 1 149 0
 204 000c 034B     		ldr	r3, .L5
 205 000e 034A     		ldr	r2, .L5
 206 0010 1268     		ldr	r2, [r2]
 207 0012 5200     		lsl	r2, r2, #1
 208 0014 5208     		lsr	r2, r2, #1
 209 0016 1A60     		str	r2, [r3]
 150:Generated_Source\PSoC4/CyLib.c **** }
 210              		.loc 1 150 0
 211 0018 BD46     		mov	sp, r7
 212              		@ sp needed
 213 001a 80BD     		pop	{r7, pc}
 214              	.L6:
 215              		.align	2
 216              	.L5:
 217 001c 08010B40 		.word	1074462984
 218              		.cfi_endproc
 219              	.LFE2:
 220              		.size	CySysClkImoStop, .-CySysClkImoStop
 221              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 222              		.align	2
 223              		.global	CySysClkImoEnableWcoLock
 224              		.code	16
 225              		.thumb_func
 226              		.type	CySysClkImoEnableWcoLock, %function
 227              	CySysClkImoEnableWcoLock:
 228              	.LFB3:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 8


 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 229              		.loc 1 176 0
 230              		.cfi_startproc
 231 0000 90B5     		push	{r4, r7, lr}
 232              		.cfi_def_cfa_offset 12
 233              		.cfi_offset 4, -12
 234              		.cfi_offset 7, -8
 235              		.cfi_offset 14, -4
 236 0002 87B0     		sub	sp, sp, #28
 237              		.cfi_def_cfa_offset 40
 238 0004 00AF     		add	r7, sp, #0
 239              		.cfi_def_cfa_register 7
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 240              		.loc 1 184 0
 241 0006 0023     		mov	r3, #0
 242 0008 BB60     		str	r3, [r7, #8]
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 243              		.loc 1 187 0
 244 000a FFF7FEFF 		bl	CySysClkWcoEnabled
 245 000e 031E     		sub	r3, r0, #0
 246 0010 00D1     		bne	.LCB80
 247 0012 85E0     		b	.L7	@long jump
 248              	.LCB80:
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 249              		.loc 1 189 0
 250 0014 FC1D     		add	r4, r7, #7
 251 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 252 001a 031C     		mov	r3, r0
 253 001c 2370     		strb	r3, [r4]
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 254              		.loc 1 193 0
 255 001e 424B     		ldr	r3, .L17
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 256              		.loc 1 194 0
 257 0020 414A     		ldr	r2, .L17
 258 0022 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 9


 259 0024 0121     		mov	r1, #1
 260 0026 0A43     		orr	r2, r1
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 261              		.loc 1 193 0
 262 0028 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 263              		.loc 1 200 0
 264 002a 0323     		mov	r3, #3
 265 002c 3B61     		str	r3, [r7, #16]
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 266              		.loc 1 201 0
 267 002e 0023     		mov	r3, #0
 268 0030 7B61     		str	r3, [r7, #20]
 269 0032 12E0     		b	.L9
 270              	.L12:
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 271              		.loc 1 203 0
 272 0034 3D4B     		ldr	r3, .L17+4
 273 0036 1B68     		ldr	r3, [r3]
 274 0038 DBB2     		uxtb	r3, r3
 275 003a 1A1C     		mov	r2, r3
 276 003c 3F23     		mov	r3, #63
 277 003e 1340     		and	r3, r2
 278 0040 3B49     		ldr	r1, .L17+8
 279 0042 7A69     		ldr	r2, [r7, #20]
 280 0044 8A18     		add	r2, r1, r2
 281 0046 1278     		ldrb	r2, [r2]
 282 0048 9342     		cmp	r3, r2
 283 004a 03D1     		bne	.L10
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 284              		.loc 1 205 0
 285 004c 7B69     		ldr	r3, [r7, #20]
 286 004e 0333     		add	r3, r3, #3
 287 0050 3B61     		str	r3, [r7, #16]
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 288              		.loc 1 206 0
 289 0052 05E0     		b	.L11
 290              	.L10:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 291              		.loc 1 201 0 discriminator 2
 292 0054 7B69     		ldr	r3, [r7, #20]
 293 0056 0133     		add	r3, r3, #1
 294 0058 7B61     		str	r3, [r7, #20]
 295              	.L9:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 296              		.loc 1 201 0 is_stmt 0 discriminator 1
 297 005a 7B69     		ldr	r3, [r7, #20]
 298 005c 2D2B     		cmp	r3, #45
 299 005e E9D9     		bls	.L12
 300              	.L11:
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 10


 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 301              		.loc 1 225 0 is_stmt 1
 302 0060 344B     		ldr	r3, .L17+12
 303 0062 1B68     		ldr	r3, [r3]
 304 0064 1F22     		mov	r2, #31
 305 0066 1340     		and	r3, r2
 306 0068 07D1     		bne	.L13
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 307              		.loc 1 227 0
 308 006a 324B     		ldr	r3, .L17+12
 309 006c 314A     		ldr	r2, .L17+12
 310 006e 1268     		ldr	r2, [r2]
 311 0070 1F21     		mov	r1, #31
 312 0072 8A43     		bic	r2, r1
 313 0074 0C21     		mov	r1, #12
 314 0076 0A43     		orr	r2, r1
 315 0078 1A60     		str	r2, [r3]
 316              	.L13:
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 317              		.loc 1 232 0
 318 007a 2F4B     		ldr	r3, .L17+16
 319 007c 1B68     		ldr	r3, [r3]
 320 007e 2F4A     		ldr	r2, .L17+20
 321 0080 1340     		and	r3, r2
 322 0082 FB60     		str	r3, [r7, #12]
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 323              		.loc 1 238 0
 324 0084 3B69     		ldr	r3, [r7, #16]
 325 0086 2E4A     		ldr	r2, .L17+24
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 11


 326 0088 5343     		mul	r3, r2
 327 008a 8022     		mov	r2, #128
 328 008c D201     		lsl	r2, r2, #7
 329 008e 9446     		mov	ip, r2
 330 0090 6344     		add	r3, r3, ip
 331 0092 DB0B     		lsr	r3, r3, #15
 332 0094 013B     		sub	r3, r3, #1
 333 0096 5B05     		lsl	r3, r3, #21
 334 0098 5B0D     		lsr	r3, r3, #21
 335 009a FA68     		ldr	r2, [r7, #12]
 336 009c 1343     		orr	r3, r2
 337 009e FB60     		str	r3, [r7, #12]
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 338              		.loc 1 241 0
 339 00a0 FB68     		ldr	r3, [r7, #12]
 340 00a2 A022     		mov	r2, #160
 341 00a4 5203     		lsl	r2, r2, #13
 342 00a6 1343     		orr	r3, r2
 343 00a8 FB60     		str	r3, [r7, #12]
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 344              		.loc 1 244 0
 345 00aa 3B69     		ldr	r3, [r7, #16]
 346 00ac 192B     		cmp	r3, #25
 347 00ae 05D8     		bhi	.L14
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 348              		.loc 1 246 0
 349 00b0 FB68     		ldr	r3, [r7, #12]
 350 00b2 FF22     		mov	r2, #255
 351 00b4 9205     		lsl	r2, r2, #22
 352 00b6 1343     		orr	r3, r2
 353 00b8 FB60     		str	r3, [r7, #12]
 354 00ba 16E0     		b	.L15
 355              	.L14:
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 356              		.loc 1 250 0
 357 00bc 3B69     		ldr	r3, [r7, #16]
 358 00be 214A     		ldr	r2, .L17+28
 359 00c0 9446     		mov	ip, r2
 360 00c2 6344     		add	r3, r3, ip
 361 00c4 1B78     		ldrb	r3, [r3]
 362 00c6 DBB2     		uxtb	r3, r3
 363 00c8 191C     		mov	r1, r3
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 364              		.loc 1 251 0
 365 00ca 3B69     		ldr	r3, [r7, #16]
 366 00cc 1A3B     		sub	r3, r3, #26
 367 00ce 1E4A     		ldr	r2, .L17+32
 368 00d0 D35C     		ldrb	r3, [r2, r3]
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 12


 369              		.loc 1 250 0
 370 00d2 CB18     		add	r3, r1, r3
 371 00d4 BB60     		str	r3, [r7, #8]
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 372              		.loc 1 253 0
 373 00d6 BB68     		ldr	r3, [r7, #8]
 374 00d8 FF2B     		cmp	r3, #255
 375 00da 00D9     		bls	.L16
 376 00dc FF23     		mov	r3, #255
 377              	.L16:
 378 00de BB60     		str	r3, [r7, #8]
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 379              		.loc 1 256 0
 380 00e0 BB68     		ldr	r3, [r7, #8]
 381 00e2 9B05     		lsl	r3, r3, #22
 382 00e4 FA68     		ldr	r2, [r7, #12]
 383 00e6 1343     		orr	r3, r2
 384 00e8 FB60     		str	r3, [r7, #12]
 385              	.L15:
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 386              		.loc 1 259 0
 387 00ea 134B     		ldr	r3, .L17+16
 388 00ec FA68     		ldr	r2, [r7, #12]
 389 00ee 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 390              		.loc 1 261 0
 391 00f0 164B     		ldr	r3, .L17+36
 392 00f2 1B68     		ldr	r3, [r3]
 393 00f4 3B60     		str	r3, [r7]
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 394              		.loc 1 262 0
 395 00f6 3020     		mov	r0, #48
 396 00f8 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 397              		.loc 1 263 0
 398 00fc 144B     		ldr	r3, .L17+40
 399 00fe 144A     		ldr	r2, .L17+40
 400 0100 1268     		ldr	r2, [r2]
 401 0102 8021     		mov	r1, #128
 402 0104 C905     		lsl	r1, r1, #23
 403 0106 0A43     		orr	r2, r1
 404 0108 1A60     		str	r2, [r3]
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 405              		.loc 1 264 0
 406 010a 1420     		mov	r0, #20
 407 010c FFF7FEFF 		bl	CyDelay
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 408              		.loc 1 265 0
 409 0110 0E4B     		ldr	r3, .L17+36
 410 0112 3A68     		ldr	r2, [r7]
 411 0114 1A60     		str	r2, [r3]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 13


 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 412              		.loc 1 267 0
 413 0116 FB1D     		add	r3, r7, #7
 414 0118 1B78     		ldrb	r3, [r3]
 415 011a 181C     		mov	r0, r3
 416 011c FFF7FEFF 		bl	CyExitCriticalSection
 417              	.L7:
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 418              		.loc 1 269 0
 419 0120 BD46     		mov	sp, r7
 420 0122 07B0     		add	sp, sp, #28
 421              		@ sp needed
 422 0124 90BD     		pop	{r4, r7, pc}
 423              	.L18:
 424 0126 C046     		.align	2
 425              	.L17:
 426 0128 50000C40 		.word	1074528336
 427 012c 2CFF0B40 		.word	1074528044
 428 0130 00000000 		.word	cyImoFreqMhz2Reg
 429 0134 34FF0B40 		.word	1074528052
 430 0138 08002240 		.word	1075970056
 431 013c 00F800C0 		.word	-1073678336
 432 0140 40420F00 		.word	1000000
 433 0144 4DF3FF0F 		.word	268432205
 434 0148 00000000 		.word	cyImoFreqMhz2DpllOffset
 435 014c 30001040 		.word	1074790448
 436 0150 00002240 		.word	1075970048
 437              		.cfi_endproc
 438              	.LFE3:
 439              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 440              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
 441              		.align	2
 442              		.global	CySysClkImoDisableWcoLock
 443              		.code	16
 444              		.thumb_func
 445              		.type	CySysClkImoDisableWcoLock, %function
 446              	CySysClkImoDisableWcoLock:
 447              	.LFB4:
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 14


 448              		.loc 1 286 0
 449              		.cfi_startproc
 450 0000 80B5     		push	{r7, lr}
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 456              		.loc 1 287 0
 457 0004 034B     		ldr	r3, .L20
 458 0006 034A     		ldr	r2, .L20
 459 0008 1268     		ldr	r2, [r2]
 460 000a 0349     		ldr	r1, .L20+4
 461 000c 0A40     		and	r2, r1
 462 000e 1A60     		str	r2, [r3]
 288:Generated_Source\PSoC4/CyLib.c ****     }
 463              		.loc 1 288 0
 464 0010 BD46     		mov	sp, r7
 465              		@ sp needed
 466 0012 80BD     		pop	{r7, pc}
 467              	.L21:
 468              		.align	2
 469              	.L20:
 470 0014 00002240 		.word	1075970048
 471 0018 FFFFFFBF 		.word	-1073741825
 472              		.cfi_endproc
 473              	.LFE4:
 474              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 475              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 476              		.align	2
 477              		.global	CySysClkImoGetWcoLock
 478              		.code	16
 479              		.thumb_func
 480              		.type	CySysClkImoGetWcoLock, %function
 481              	CySysClkImoGetWcoLock:
 482              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 483              		.loc 1 305 0
 484              		.cfi_startproc
 485 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 15


 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 491              		.loc 1 306 0
 492 0004 054B     		ldr	r3, .L26
 493 0006 1A68     		ldr	r2, [r3]
 494 0008 8023     		mov	r3, #128
 495 000a DB05     		lsl	r3, r3, #23
 496 000c 1340     		and	r3, r2
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 497              		.loc 1 307 0
 498 000e 01D0     		beq	.L23
 499              		.loc 1 307 0 is_stmt 0 discriminator 1
 500 0010 0123     		mov	r3, #1
 501 0012 00E0     		b	.L24
 502              	.L23:
 503              		.loc 1 307 0 discriminator 2
 504 0014 0023     		mov	r3, #0
 505              	.L24:
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 506              		.loc 1 309 0 is_stmt 1
 507 0016 181C     		mov	r0, r3
 508 0018 BD46     		mov	sp, r7
 509              		@ sp needed
 510 001a 80BD     		pop	{r7, pc}
 511              	.L27:
 512              		.align	2
 513              	.L26:
 514 001c 00002240 		.word	1075970048
 515              		.cfi_endproc
 516              	.LFE5:
 517              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 518              		.section	.text.CySysClkImoEnableUsbLock,"ax",%progbits
 519              		.align	2
 520              		.global	CySysClkImoEnableUsbLock
 521              		.code	16
 522              		.thumb_func
 523              		.type	CySysClkImoEnableUsbLock, %function
 524              	CySysClkImoEnableUsbLock:
 525              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 16


 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 526              		.loc 1 332 0
 527              		.cfi_startproc
 528 0000 80B5     		push	{r7, lr}
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 7, -8
 531              		.cfi_offset 14, -4
 532 0002 00AF     		add	r7, sp, #0
 533              		.cfi_def_cfa_register 7
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 534              		.loc 1 335 0
 535 0004 0E4B     		ldr	r3, .L29
 536 0006 0E4A     		ldr	r2, .L29
 537 0008 1268     		ldr	r2, [r2]
 538 000a 0121     		mov	r1, #1
 539 000c 8A43     		bic	r2, r1
 540 000e 1A60     		str	r2, [r3]
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 541              		.loc 1 341 0
 542 0010 0C4B     		ldr	r3, .L29+4
 543 0012 1B68     		ldr	r3, [r3]
 544 0014 1F22     		mov	r2, #31
 545 0016 9343     		bic	r3, r2
 546 0018 1A1C     		mov	r2, r3
 547 001a 0B4B     		ldr	r3, .L29+8
 548 001c 1A60     		str	r2, [r3]
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 549              		.loc 1 342 0
 550 001e 094B     		ldr	r3, .L29+4
 551 0020 084A     		ldr	r2, .L29+4
 552 0022 1268     		ldr	r2, [r2]
 553 0024 1F21     		mov	r1, #31
 554 0026 8A43     		bic	r2, r1
 555 0028 0821     		mov	r1, #8
 556 002a 0A43     		orr	r2, r1
 557 002c 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 558              		.loc 1 346 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 17


 559 002e 074B     		ldr	r3, .L29+12
 560 0030 064A     		ldr	r2, .L29+12
 561 0032 1268     		ldr	r2, [r2]
 562 0034 0221     		mov	r1, #2
 563 0036 0A43     		orr	r2, r1
 564 0038 1A60     		str	r2, [r3]
 347:Generated_Source\PSoC4/CyLib.c ****     }
 565              		.loc 1 347 0
 566 003a BD46     		mov	sp, r7
 567              		@ sp needed
 568 003c 80BD     		pop	{r7, pc}
 569              	.L30:
 570 003e C046     		.align	2
 571              	.L29:
 572 0040 50000C40 		.word	1074528336
 573 0044 34FF0B40 		.word	1074528052
 574 0048 00000000 		.word	CySysClkImoTrim4
 575 004c 24002C40 		.word	1076625444
 576              		.cfi_endproc
 577              	.LFE6:
 578              		.size	CySysClkImoEnableUsbLock, .-CySysClkImoEnableUsbLock
 579              		.section	.text.CySysClkImoDisableUsbLock,"ax",%progbits
 580              		.align	2
 581              		.global	CySysClkImoDisableUsbLock
 582              		.code	16
 583              		.thumb_func
 584              		.type	CySysClkImoDisableUsbLock, %function
 585              	CySysClkImoDisableUsbLock:
 586              	.LFB7:
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 587              		.loc 1 364 0
 588              		.cfi_startproc
 589 0000 80B5     		push	{r7, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 7, -8
 592              		.cfi_offset 14, -4
 593 0002 00AF     		add	r7, sp, #0
 594              		.cfi_def_cfa_register 7
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 595              		.loc 1 365 0
 596 0004 084B     		ldr	r3, .L32
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 18


 597 0006 084A     		ldr	r2, .L32
 598 0008 1268     		ldr	r2, [r2]
 599 000a 0221     		mov	r1, #2
 600 000c 8A43     		bic	r2, r1
 601 000e 1A60     		str	r2, [r3]
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 602              		.loc 1 369 0
 603 0010 064A     		ldr	r2, .L32+4
 604 0012 064B     		ldr	r3, .L32+4
 605 0014 1B68     		ldr	r3, [r3]
 606 0016 1F21     		mov	r1, #31
 607 0018 8B43     		bic	r3, r1
 608 001a 191C     		mov	r1, r3
 609 001c 044B     		ldr	r3, .L32+8
 610 001e 1B68     		ldr	r3, [r3]
 611 0020 0B43     		orr	r3, r1
 612 0022 1360     		str	r3, [r2]
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 613              		.loc 1 372 0
 614 0024 BD46     		mov	sp, r7
 615              		@ sp needed
 616 0026 80BD     		pop	{r7, pc}
 617              	.L33:
 618              		.align	2
 619              	.L32:
 620 0028 24002C40 		.word	1076625444
 621 002c 34FF0B40 		.word	1074528052
 622 0030 00000000 		.word	CySysClkImoTrim4
 623              		.cfi_endproc
 624              	.LFE7:
 625              		.size	CySysClkImoDisableUsbLock, .-CySysClkImoDisableUsbLock
 626              		.section	.text.CySysClkImoGetUsbLock,"ax",%progbits
 627              		.align	2
 628              		.global	CySysClkImoGetUsbLock
 629              		.code	16
 630              		.thumb_func
 631              		.type	CySysClkImoGetUsbLock, %function
 632              	CySysClkImoGetUsbLock:
 633              	.LFB8:
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 19


 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 634              		.loc 1 389 0
 635              		.cfi_startproc
 636 0000 80B5     		push	{r7, lr}
 637              		.cfi_def_cfa_offset 8
 638              		.cfi_offset 7, -8
 639              		.cfi_offset 14, -4
 640 0002 00AF     		add	r7, sp, #0
 641              		.cfi_def_cfa_register 7
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 642              		.loc 1 390 0
 643 0004 054B     		ldr	r3, .L38
 644 0006 1B68     		ldr	r3, [r3]
 645 0008 0222     		mov	r2, #2
 646 000a 1340     		and	r3, r2
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 647              		.loc 1 391 0
 648 000c 01D0     		beq	.L35
 649              		.loc 1 391 0 is_stmt 0 discriminator 1
 650 000e 0123     		mov	r3, #1
 651 0010 00E0     		b	.L36
 652              	.L35:
 653              		.loc 1 391 0 discriminator 2
 654 0012 0023     		mov	r3, #0
 655              	.L36:
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 656              		.loc 1 393 0 is_stmt 1
 657 0014 181C     		mov	r0, r3
 658 0016 BD46     		mov	sp, r7
 659              		@ sp needed
 660 0018 80BD     		pop	{r7, pc}
 661              	.L39:
 662 001a C046     		.align	2
 663              	.L38:
 664 001c 24002C40 		.word	1076625444
 665              		.cfi_endproc
 666              	.LFE8:
 667              		.size	CySysClkImoGetUsbLock, .-CySysClkImoGetUsbLock
 668              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 669              		.align	2
 670              		.global	CySysClkWriteHfclkDirect
 671              		.code	16
 672              		.thumb_func
 673              		.type	CySysClkWriteHfclkDirect, %function
 674              	CySysClkWriteHfclkDirect:
 675              	.LFB9:
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 20


 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 676              		.loc 1 430 0
 677              		.cfi_startproc
 678 0000 90B5     		push	{r4, r7, lr}
 679              		.cfi_def_cfa_offset 12
 680              		.cfi_offset 4, -12
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 683 0002 85B0     		sub	sp, sp, #20
 684              		.cfi_def_cfa_offset 32
 685 0004 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
 687 0006 7860     		str	r0, [r7, #4]
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 688              		.loc 1 434 0
 689 0008 0B23     		mov	r3, #11
 690 000a FC18     		add	r4, r7, r3
 691 000c FFF7FEFF 		bl	CyEnterCriticalSection
 692 0010 031C     		mov	r3, r0
 693 0012 2370     		strb	r3, [r4]
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 694              		.loc 1 437 0
 695 0014 144B     		ldr	r3, .L44
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 21


 696 0016 1B68     		ldr	r3, [r3]
 697 0018 144A     		ldr	r2, .L44+4
 698 001a 1340     		and	r3, r2
 699 001c FB60     		str	r3, [r7, #12]
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 700              		.loc 1 441 0
 701 001e 7A68     		ldr	r2, [r7, #4]
 702 0020 8023     		mov	r3, #128
 703 0022 9B02     		lsl	r3, r3, #10
 704 0024 9A42     		cmp	r2, r3
 705 0026 04D0     		beq	.L41
 706              		.loc 1 441 0 is_stmt 0 discriminator 1
 707 0028 7A68     		ldr	r2, [r7, #4]
 708 002a 8023     		mov	r3, #128
 709 002c 5B02     		lsl	r3, r3, #9
 710 002e 9A42     		cmp	r2, r3
 711 0030 07D1     		bne	.L42
 712              	.L41:
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 713              		.loc 1 443 0 is_stmt 1
 714 0032 7A68     		ldr	r2, [r7, #4]
 715 0034 C023     		mov	r3, #192
 716 0036 9B02     		lsl	r3, r3, #10
 717 0038 1340     		and	r3, r2
 718 003a FA68     		ldr	r2, [r7, #12]
 719 003c 1343     		orr	r3, r2
 720 003e FB60     		str	r3, [r7, #12]
 721 0040 05E0     		b	.L43
 722              	.L42:
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 723              		.loc 1 448 0
 724 0042 7B68     		ldr	r3, [r7, #4]
 725 0044 0722     		mov	r2, #7
 726 0046 1340     		and	r3, r2
 727 0048 FA68     		ldr	r2, [r7, #12]
 728 004a 1343     		orr	r3, r2
 729 004c FB60     		str	r3, [r7, #12]
 730              	.L43:
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 731              		.loc 1 451 0
 732 004e 064B     		ldr	r3, .L44
 733 0050 FA68     		ldr	r2, [r7, #12]
 734 0052 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 735              		.loc 1 453 0
 736 0054 0B23     		mov	r3, #11
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 22


 737 0056 FB18     		add	r3, r7, r3
 738 0058 1B78     		ldrb	r3, [r3]
 739 005a 181C     		mov	r0, r3
 740 005c FFF7FEFF 		bl	CyExitCriticalSection
 454:Generated_Source\PSoC4/CyLib.c **** }
 741              		.loc 1 454 0
 742 0060 BD46     		mov	sp, r7
 743 0062 05B0     		add	sp, sp, #20
 744              		@ sp needed
 745 0064 90BD     		pop	{r4, r7, pc}
 746              	.L45:
 747 0066 C046     		.align	2
 748              	.L44:
 749 0068 00010B40 		.word	1074462976
 750 006c F8FFFCFF 		.word	-196616
 751              		.cfi_endproc
 752              	.LFE9:
 753              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 754              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 755              		.align	2
 756              		.global	CySysEnablePumpClock
 757              		.code	16
 758              		.thumb_func
 759              		.type	CySysEnablePumpClock, %function
 760              	CySysEnablePumpClock:
 761              	.LFB10:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 762              		.loc 1 474 0
 763              		.cfi_startproc
 764 0000 80B5     		push	{r7, lr}
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 0002 82B0     		sub	sp, sp, #8
 769              		.cfi_def_cfa_offset 16
 770 0004 00AF     		add	r7, sp, #0
 771              		.cfi_def_cfa_register 7
 772 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 23


 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 773              		.loc 1 476 0
 774 0008 7B68     		ldr	r3, [r7, #4]
 775 000a 0122     		mov	r2, #1
 776 000c 1340     		and	r3, r2
 777 000e 08D0     		beq	.L47
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 778              		.loc 1 478 0
 779 0010 0C4A     		ldr	r2, .L49
 780 0012 0C4B     		ldr	r3, .L49
 781 0014 1968     		ldr	r1, [r3]
 782 0016 0C4B     		ldr	r3, .L49+4
 783 0018 1B68     		ldr	r3, [r3]
 784 001a 5B06     		lsl	r3, r3, #25
 785 001c 0B43     		orr	r3, r1
 786 001e 1360     		str	r3, [r2]
 787 0020 0CE0     		b	.L46
 788              	.L47:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 789              		.loc 1 482 0
 790 0022 084B     		ldr	r3, .L49
 791 0024 1B68     		ldr	r3, [r3]
 792 0026 5B0E     		lsr	r3, r3, #25
 793 0028 0722     		mov	r2, #7
 794 002a 1A40     		and	r2, r3
 795 002c 064B     		ldr	r3, .L49+4
 796 002e 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 797              		.loc 1 484 0
 798 0030 044B     		ldr	r3, .L49
 799 0032 044A     		ldr	r2, .L49
 800 0034 1268     		ldr	r2, [r2]
 801 0036 0549     		ldr	r1, .L49+8
 802 0038 0A40     		and	r2, r1
 803 003a 1A60     		str	r2, [r3]
 804              	.L46:
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 805              		.loc 1 498 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 24


 806 003c BD46     		mov	sp, r7
 807 003e 02B0     		add	sp, sp, #8
 808              		@ sp needed
 809 0040 80BD     		pop	{r7, pc}
 810              	.L50:
 811 0042 C046     		.align	2
 812              	.L49:
 813 0044 08010B40 		.word	1074462984
 814 0048 00000000 		.word	CySysClkPumpConfig
 815 004c FFFFFFF1 		.word	-234881025
 816              		.cfi_endproc
 817              	.LFE10:
 818              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 819              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 820              		.align	2
 821              		.global	CySysClkGetSysclkSource
 822              		.code	16
 823              		.thumb_func
 824              		.type	CySysClkGetSysclkSource, %function
 825              	CySysClkGetSysclkSource:
 826              	.LFB11:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 827              		.loc 1 511 0
 828              		.cfi_startproc
 829 0000 90B5     		push	{r4, r7, lr}
 830              		.cfi_def_cfa_offset 12
 831              		.cfi_offset 4, -12
 832              		.cfi_offset 7, -8
 833              		.cfi_offset 14, -4
 834 0002 83B0     		sub	sp, sp, #12
 835              		.cfi_def_cfa_offset 24
 836 0004 00AF     		add	r7, sp, #0
 837              		.cfi_def_cfa_register 7
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 838              		.loc 1 515 0
 839 0006 FC1C     		add	r4, r7, #3
 840 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 841 000c 031C     		mov	r3, r0
 842 000e 2370     		strb	r3, [r4]
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 25


 843              		.loc 1 518 0
 844 0010 0D4B     		ldr	r3, .L55
 845 0012 1A68     		ldr	r2, [r3]
 846 0014 C023     		mov	r3, #192
 847 0016 9B02     		lsl	r3, r3, #10
 848 0018 1340     		and	r3, r2
 849 001a 06D0     		beq	.L52
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 850              		.loc 1 520 0
 851 001c 0A4B     		ldr	r3, .L55
 852 001e 1A68     		ldr	r2, [r3]
 853 0020 C023     		mov	r3, #192
 854 0022 9B02     		lsl	r3, r3, #10
 855 0024 1340     		and	r3, r2
 856 0026 7B60     		str	r3, [r7, #4]
 857 0028 04E0     		b	.L53
 858              	.L52:
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 859              		.loc 1 525 0
 860 002a 074B     		ldr	r3, .L55
 861 002c 1B68     		ldr	r3, [r3]
 862 002e 0722     		mov	r2, #7
 863 0030 1340     		and	r3, r2
 864 0032 7B60     		str	r3, [r7, #4]
 865              	.L53:
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 866              		.loc 1 528 0
 867 0034 FB1C     		add	r3, r7, #3
 868 0036 1B78     		ldrb	r3, [r3]
 869 0038 181C     		mov	r0, r3
 870 003a FFF7FEFF 		bl	CyExitCriticalSection
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 871              		.loc 1 530 0
 872 003e 7B68     		ldr	r3, [r7, #4]
 531:Generated_Source\PSoC4/CyLib.c **** }
 873              		.loc 1 531 0
 874 0040 181C     		mov	r0, r3
 875 0042 BD46     		mov	sp, r7
 876 0044 03B0     		add	sp, sp, #12
 877              		@ sp needed
 878 0046 90BD     		pop	{r4, r7, pc}
 879              	.L56:
 880              		.align	2
 881              	.L55:
 882 0048 00010B40 		.word	1074462976
 883              		.cfi_endproc
 884              	.LFE11:
 885              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 886              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 26


 887              		.align	2
 888              		.global	CySysClkWriteSysclkDiv
 889              		.code	16
 890              		.thumb_func
 891              		.type	CySysClkWriteSysclkDiv, %function
 892              	CySysClkWriteSysclkDiv:
 893              	.LFB12:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 894              		.loc 1 566 0
 895              		.cfi_startproc
 896 0000 90B5     		push	{r4, r7, lr}
 897              		.cfi_def_cfa_offset 12
 898              		.cfi_offset 4, -12
 899              		.cfi_offset 7, -8
 900              		.cfi_offset 14, -4
 901 0002 85B0     		sub	sp, sp, #20
 902              		.cfi_def_cfa_offset 32
 903 0004 00AF     		add	r7, sp, #0
 904              		.cfi_def_cfa_register 7
 905 0006 7860     		str	r0, [r7, #4]
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 27


 906              		.loc 1 569 0
 907 0008 0F23     		mov	r3, #15
 908 000a FC18     		add	r4, r7, r3
 909 000c FFF7FEFF 		bl	CyEnterCriticalSection
 910 0010 031C     		mov	r3, r0
 911 0012 2370     		strb	r3, [r4]
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 912              		.loc 1 571 0
 913 0014 094B     		ldr	r3, .L58
 914 0016 7A68     		ldr	r2, [r7, #4]
 915 0018 0721     		mov	r1, #7
 916 001a 0A40     		and	r2, r1
 917 001c D104     		lsl	r1, r2, #19
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 918              		.loc 1 573 0
 919 001e 074A     		ldr	r2, .L58
 920 0020 1268     		ldr	r2, [r2]
 921 0022 0748     		ldr	r0, .L58+4
 922 0024 0240     		and	r2, r0
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 923              		.loc 1 572 0
 924 0026 0A43     		orr	r2, r1
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 925              		.loc 1 571 0
 926 0028 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 927              		.loc 1 576 0
 928 002a 0F23     		mov	r3, #15
 929 002c FB18     		add	r3, r7, r3
 930 002e 1B78     		ldrb	r3, [r3]
 931 0030 181C     		mov	r0, r3
 932 0032 FFF7FEFF 		bl	CyExitCriticalSection
 577:Generated_Source\PSoC4/CyLib.c **** }
 933              		.loc 1 577 0
 934 0036 BD46     		mov	sp, r7
 935 0038 05B0     		add	sp, sp, #20
 936              		@ sp needed
 937 003a 90BD     		pop	{r4, r7, pc}
 938              	.L59:
 939              		.align	2
 940              	.L58:
 941 003c 00010B40 		.word	1074462976
 942 0040 FFFFC7FF 		.word	-3670017
 943              		.cfi_endproc
 944              	.LFE12:
 945              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 946              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 947              		.align	2
 948              		.global	CySysClkWriteImoFreq
 949              		.code	16
 950              		.thumb_func
 951              		.type	CySysClkWriteImoFreq, %function
 952              	CySysClkWriteImoFreq:
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 28


 953              	.LFB13:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 954              		.loc 1 624 0
 955              		.cfi_startproc
 956 0000 90B5     		push	{r4, r7, lr}
 957              		.cfi_def_cfa_offset 12
 958              		.cfi_offset 4, -12
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 87B0     		sub	sp, sp, #28
 962              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 29


 963 0004 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 965 0006 7860     		str	r0, [r7, #4]
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 966              		.loc 1 637 0
 967 0008 0023     		mov	r3, #0
 968 000a 3B61     		str	r3, [r7, #16]
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 969              		.loc 1 641 0
 970 000c 0023     		mov	r3, #0
 971 000e FB60     		str	r3, [r7, #12]
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 972              		.loc 1 647 0
 973 0010 0B23     		mov	r3, #11
 974 0012 FC18     		add	r4, r7, r3
 975 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 976 0018 031C     		mov	r3, r0
 977 001a 2370     		strb	r3, [r4]
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 978              		.loc 1 650 0
 979 001c FFF7FEFF 		bl	CySysClkImoGetWcoLock
 980 0020 031E     		sub	r3, r0, #0
 981 0022 03D0     		beq	.L61
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 982              		.loc 1 652 0
 983 0024 0123     		mov	r3, #1
 984 0026 3B61     		str	r3, [r7, #16]
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 985              		.loc 1 653 0
 986 0028 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 987              	.L61:
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 30


 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 988              		.loc 1 665 0
 989 002c 7B68     		ldr	r3, [r7, #4]
 990 002e 182B     		cmp	r3, #24
 991 0030 02D0     		beq	.L62
 992              		.loc 1 665 0 is_stmt 0 discriminator 1
 993 0032 7B68     		ldr	r3, [r7, #4]
 994 0034 302B     		cmp	r3, #48
 995 0036 03D1     		bne	.L63
 996              	.L62:
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 997              		.loc 1 667 0 is_stmt 1
 998 0038 0123     		mov	r3, #1
 999 003a FB60     		str	r3, [r7, #12]
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 1000              		.loc 1 668 0
 1001 003c FFF7FEFF 		bl	CySysClkImoDisableUsbLock
 1002              	.L63:
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 1003              		.loc 1 697 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 31


 1004 0040 7B68     		ldr	r3, [r7, #4]
 1005 0042 022B     		cmp	r3, #2
 1006 0044 00D8     		bhi	.LCB770
 1007 0046 CCE0     		b	.L64	@long jump
 1008              	.LCB770:
 1009              		.loc 1 697 0 is_stmt 0 discriminator 1
 1010 0048 7B68     		ldr	r3, [r7, #4]
 1011 004a 302B     		cmp	r3, #48
 1012 004c 00D9     		bls	.LCB773
 1013 004e C8E0     		b	.L64	@long jump
 1014              	.LCB773:
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 1015              		.loc 1 699 0 is_stmt 1
 1016 0050 6F4B     		ldr	r3, .L80
 1017 0052 1B78     		ldrb	r3, [r3]
 1018 0054 DBB2     		uxtb	r3, r3
 1019 0056 1A1E     		sub	r2, r3, #0
 1020 0058 7B68     		ldr	r3, [r7, #4]
 1021 005a 9A42     		cmp	r2, r3
 1022 005c 0AD3     		bcc	.L65
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 1023              		.loc 1 701 0
 1024 005e 6D4A     		ldr	r2, .L80+4
 1025 0060 1723     		mov	r3, #23
 1026 0062 FB18     		add	r3, r7, r3
 1027 0064 1278     		ldrb	r2, [r2]
 1028 0066 1A70     		strb	r2, [r3]
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1029              		.loc 1 702 0
 1030 0068 6B4A     		ldr	r2, .L80+8
 1031 006a 1623     		mov	r3, #22
 1032 006c FB18     		add	r3, r7, r3
 1033 006e 1278     		ldrb	r2, [r2]
 1034 0070 1A70     		strb	r2, [r3]
 1035 0072 3FE0     		b	.L66
 1036              	.L65:
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 1037              		.loc 1 704 0
 1038 0074 694B     		ldr	r3, .L80+12
 1039 0076 1B78     		ldrb	r3, [r3]
 1040 0078 DBB2     		uxtb	r3, r3
 1041 007a 1A1E     		sub	r2, r3, #0
 1042 007c 7B68     		ldr	r3, [r7, #4]
 1043 007e 9A42     		cmp	r2, r3
 1044 0080 0AD3     		bcc	.L67
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 1045              		.loc 1 706 0
 1046 0082 674A     		ldr	r2, .L80+16
 1047 0084 1723     		mov	r3, #23
 1048 0086 FB18     		add	r3, r7, r3
 1049 0088 1278     		ldrb	r2, [r2]
 1050 008a 1A70     		strb	r2, [r3]
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 32


 1051              		.loc 1 707 0
 1052 008c 654A     		ldr	r2, .L80+20
 1053 008e 1623     		mov	r3, #22
 1054 0090 FB18     		add	r3, r7, r3
 1055 0092 1278     		ldrb	r2, [r2]
 1056 0094 1A70     		strb	r2, [r3]
 1057 0096 2DE0     		b	.L66
 1058              	.L67:
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 1059              		.loc 1 709 0
 1060 0098 634B     		ldr	r3, .L80+24
 1061 009a 1B78     		ldrb	r3, [r3]
 1062 009c DBB2     		uxtb	r3, r3
 1063 009e 1A1E     		sub	r2, r3, #0
 1064 00a0 7B68     		ldr	r3, [r7, #4]
 1065 00a2 9A42     		cmp	r2, r3
 1066 00a4 0AD3     		bcc	.L68
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 1067              		.loc 1 711 0
 1068 00a6 614A     		ldr	r2, .L80+28
 1069 00a8 1723     		mov	r3, #23
 1070 00aa FB18     		add	r3, r7, r3
 1071 00ac 1278     		ldrb	r2, [r2]
 1072 00ae 1A70     		strb	r2, [r3]
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1073              		.loc 1 712 0
 1074 00b0 5F4A     		ldr	r2, .L80+32
 1075 00b2 1623     		mov	r3, #22
 1076 00b4 FB18     		add	r3, r7, r3
 1077 00b6 1278     		ldrb	r2, [r2]
 1078 00b8 1A70     		strb	r2, [r3]
 1079 00ba 1BE0     		b	.L66
 1080              	.L68:
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 1081              		.loc 1 714 0
 1082 00bc 5D4B     		ldr	r3, .L80+36
 1083 00be 1B78     		ldrb	r3, [r3]
 1084 00c0 DBB2     		uxtb	r3, r3
 1085 00c2 1A1E     		sub	r2, r3, #0
 1086 00c4 7B68     		ldr	r3, [r7, #4]
 1087 00c6 9A42     		cmp	r2, r3
 1088 00c8 0AD3     		bcc	.L69
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 1089              		.loc 1 716 0
 1090 00ca 5B4A     		ldr	r2, .L80+40
 1091 00cc 1723     		mov	r3, #23
 1092 00ce FB18     		add	r3, r7, r3
 1093 00d0 1278     		ldrb	r2, [r2]
 1094 00d2 1A70     		strb	r2, [r3]
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1095              		.loc 1 717 0
 1096 00d4 594A     		ldr	r2, .L80+44
 1097 00d6 1623     		mov	r3, #22
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 33


 1098 00d8 FB18     		add	r3, r7, r3
 1099 00da 1278     		ldrb	r2, [r2]
 1100 00dc 1A70     		strb	r2, [r3]
 1101 00de 09E0     		b	.L66
 1102              	.L69:
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 1103              		.loc 1 721 0
 1104 00e0 574A     		ldr	r2, .L80+48
 1105 00e2 1723     		mov	r3, #23
 1106 00e4 FB18     		add	r3, r7, r3
 1107 00e6 1278     		ldrb	r2, [r2]
 1108 00e8 1A70     		strb	r2, [r3]
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1109              		.loc 1 722 0
 1110 00ea 564A     		ldr	r2, .L80+52
 1111 00ec 1623     		mov	r3, #22
 1112 00ee FB18     		add	r3, r7, r3
 1113 00f0 1278     		ldrb	r2, [r2]
 1114 00f2 1A70     		strb	r2, [r3]
 1115              	.L66:
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 1116              		.loc 1 726 0
 1117 00f4 7B68     		ldr	r3, [r7, #4]
 1118 00f6 DA1E     		sub	r2, r3, #3
 1119 00f8 0A23     		mov	r3, #10
 1120 00fa FB18     		add	r3, r7, r3
 1121 00fc 5249     		ldr	r1, .L80+56
 1122 00fe 8A5C     		ldrb	r2, [r1, r2]
 1123 0100 1A70     		strb	r2, [r3]
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 1124              		.loc 1 738 0
 1125 0102 0A23     		mov	r3, #10
 1126 0104 FB18     		add	r3, r7, r3
 1127 0106 1B78     		ldrb	r3, [r3]
 1128 0108 2F2B     		cmp	r3, #47
 1129 010a 0DD9     		bls	.L70
 1130              		.loc 1 738 0 is_stmt 0 discriminator 1
 1131 010c 7B68     		ldr	r3, [r7, #4]
 1132 010e 2A2B     		cmp	r3, #42
 1133 0110 0AD9     		bls	.L70
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 34


 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 1134              		.loc 1 741 0 is_stmt 1
 1135 0112 4E4B     		ldr	r3, .L80+60
 1136 0114 1922     		mov	r2, #25
 1137 0116 1A60     		str	r2, [r3]
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1138              		.loc 1 744 0
 1139 0118 0520     		mov	r0, #5
 1140 011a FFF7FEFF 		bl	CyDelayCycles
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 1141              		.loc 1 746 0
 1142 011e 1523     		mov	r3, #21
 1143 0120 FB18     		add	r3, r7, r3
 1144 0122 1922     		mov	r2, #25
 1145 0124 1A70     		strb	r2, [r3]
 1146 0126 07E0     		b	.L71
 1147              	.L70:
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 1148              		.loc 1 750 0
 1149 0128 484B     		ldr	r3, .L80+60
 1150 012a 1B68     		ldr	r3, [r3]
 1151 012c DAB2     		uxtb	r2, r3
 1152 012e 1523     		mov	r3, #21
 1153 0130 FB18     		add	r3, r7, r3
 1154 0132 3F21     		mov	r1, #63
 1155 0134 0A40     		and	r2, r1
 1156 0136 1A70     		strb	r2, [r3]
 1157              	.L71:
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 1158              		.loc 1 762 0
 1159 0138 0A23     		mov	r3, #10
 1160 013a FA18     		add	r2, r7, r3
 1161 013c 1523     		mov	r3, #21
 1162 013e FB18     		add	r3, r7, r3
 1163 0140 1278     		ldrb	r2, [r2]
 1164 0142 1B78     		ldrb	r3, [r3]
 1165 0144 9A42     		cmp	r2, r3
 1166 0146 08D2     		bcs	.L72
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 35


 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1167              		.loc 1 765 0
 1168 0148 404B     		ldr	r3, .L80+60
 1169 014a 7A68     		ldr	r2, [r7, #4]
 1170 014c 033A     		sub	r2, r2, #3
 1171 014e 3E49     		ldr	r1, .L80+56
 1172 0150 8A5C     		ldrb	r2, [r1, r2]
 1173 0152 1A60     		str	r2, [r3]
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1174              		.loc 1 766 0
 1175 0154 0520     		mov	r0, #5
 1176 0156 FFF7FEFF 		bl	CyDelayCycles
 1177              	.L72:
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 1178              		.loc 1 772 0
 1179 015a FB68     		ldr	r3, [r7, #12]
 1180 015c 012B     		cmp	r3, #1
 1181 015e 08D1     		bne	.L73
 1182              		.loc 1 772 0 is_stmt 0 discriminator 1
 1183 0160 7B68     		ldr	r3, [r7, #4]
 1184 0162 302B     		cmp	r3, #48
 1185 0164 05D1     		bne	.L73
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 1186              		.loc 1 774 0 is_stmt 1
 1187 0166 3A4A     		ldr	r2, .L80+64
 1188 0168 1423     		mov	r3, #20
 1189 016a FB18     		add	r3, r7, r3
 1190 016c 1278     		ldrb	r2, [r2]
 1191 016e 1A70     		strb	r2, [r3]
 1192 0170 12E0     		b	.L74
 1193              	.L73:
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 1194              		.loc 1 776 0
 1195 0172 FB68     		ldr	r3, [r7, #12]
 1196 0174 012B     		cmp	r3, #1
 1197 0176 08D1     		bne	.L75
 1198              		.loc 1 776 0 is_stmt 0 discriminator 1
 1199 0178 7B68     		ldr	r3, [r7, #4]
 1200 017a 182B     		cmp	r3, #24
 1201 017c 05D1     		bne	.L75
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 1202              		.loc 1 778 0 is_stmt 1
 1203 017e 354A     		ldr	r2, .L80+68
 1204 0180 1423     		mov	r3, #20
 1205 0182 FB18     		add	r3, r7, r3
 1206 0184 1278     		ldrb	r2, [r2]
 1207 0186 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 36


 1208 0188 06E0     		b	.L74
 1209              	.L75:
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 1210              		.loc 1 782 0
 1211 018a 7B68     		ldr	r3, [r7, #4]
 1212 018c 2D4A     		ldr	r2, .L80+52
 1213 018e 9A18     		add	r2, r3, r2
 1214 0190 1423     		mov	r3, #20
 1215 0192 FB18     		add	r3, r7, r3
 1216 0194 1278     		ldrb	r2, [r2]
 1217 0196 1A70     		strb	r2, [r3]
 1218              	.L74:
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 1219              		.loc 1 789 0
 1220 0198 2F4B     		ldr	r3, .L80+72
 1221 019a 1422     		mov	r2, #20
 1222 019c BA18     		add	r2, r7, r2
 1223 019e 1278     		ldrb	r2, [r2]
 1224 01a0 1A60     		str	r2, [r3]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1225              		.loc 1 790 0
 1226 01a2 2E4B     		ldr	r3, .L80+76
 1227 01a4 1722     		mov	r2, #23
 1228 01a6 BA18     		add	r2, r7, r2
 1229 01a8 1278     		ldrb	r2, [r2]
 1230 01aa 1A60     		str	r2, [r3]
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1231              		.loc 1 791 0
 1232 01ac 2C4B     		ldr	r3, .L80+80
 1233 01ae 1622     		mov	r2, #22
 1234 01b0 BA18     		add	r2, r7, r2
 1235 01b2 1278     		ldrb	r2, [r2]
 1236 01b4 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1237              		.loc 1 792 0
 1238 01b6 0520     		mov	r0, #5
 1239 01b8 FFF7FEFF 		bl	CyDelayUs
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 1240              		.loc 1 794 0
 1241 01bc 0A23     		mov	r3, #10
 1242 01be FA18     		add	r2, r7, r3
 1243 01c0 1523     		mov	r3, #21
 1244 01c2 FB18     		add	r3, r7, r3
 1245 01c4 1278     		ldrb	r2, [r2]
 1246 01c6 1B78     		ldrb	r3, [r3]
 1247 01c8 9A42     		cmp	r2, r3
 1248 01ca 09D9     		bls	.L76
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 37


 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 1249              		.loc 1 797 0
 1250 01cc 1F4B     		ldr	r3, .L80+60
 1251 01ce 7A68     		ldr	r2, [r7, #4]
 1252 01d0 033A     		sub	r2, r2, #3
 1253 01d2 1D49     		ldr	r1, .L80+56
 1254 01d4 8A5C     		ldrb	r2, [r1, r2]
 1255 01d6 1A60     		str	r2, [r3]
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1256              		.loc 1 798 0
 1257 01d8 0520     		mov	r0, #5
 1258 01da FFF7FEFF 		bl	CyDelayCycles
 794:Generated_Source\PSoC4/CyLib.c ****             {
 1259              		.loc 1 794 0
 1260 01de 03E0     		b	.L77
 1261              	.L76:
 1262 01e0 02E0     		b	.L77
 1263              	.L64:
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 1264              		.loc 1 804 0 discriminator 1
 1265 01e2 0020     		mov	r0, #0
 1266 01e4 FFF7FEFF 		bl	CyHalt
 1267              	.L77:
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 1268              		.loc 1 810 0
 1269 01e8 3B69     		ldr	r3, [r7, #16]
 1270 01ea 012B     		cmp	r3, #1
 1271 01ec 01D1     		bne	.L78
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 1272              		.loc 1 812 0
 1273 01ee FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1274              	.L78:
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 1275              		.loc 1 817 0
 1276 01f2 FB68     		ldr	r3, [r7, #12]
 1277 01f4 012B     		cmp	r3, #1
 1278 01f6 01D1     		bne	.L79
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 1279              		.loc 1 819 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 38


 1280 01f8 FFF7FEFF 		bl	CySysClkImoEnableUsbLock
 1281              	.L79:
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 1282              		.loc 1 823 0
 1283 01fc 0B23     		mov	r3, #11
 1284 01fe FB18     		add	r3, r7, r3
 1285 0200 1B78     		ldrb	r3, [r3]
 1286 0202 181C     		mov	r0, r3
 1287 0204 FFF7FEFF 		bl	CyExitCriticalSection
 824:Generated_Source\PSoC4/CyLib.c ****     }
 1288              		.loc 1 824 0
 1289 0208 BD46     		mov	sp, r7
 1290 020a 07B0     		add	sp, sp, #28
 1291              		@ sp needed
 1292 020c 90BD     		pop	{r4, r7, pc}
 1293              	.L81:
 1294 020e C046     		.align	2
 1295              	.L80:
 1296 0210 40F3FF0F 		.word	268432192
 1297 0214 41F3FF0F 		.word	268432193
 1298 0218 42F3FF0F 		.word	268432194
 1299 021c 43F3FF0F 		.word	268432195
 1300 0220 44F3FF0F 		.word	268432196
 1301 0224 45F3FF0F 		.word	268432197
 1302 0228 46F3FF0F 		.word	268432198
 1303 022c 47F3FF0F 		.word	268432199
 1304 0230 48F3FF0F 		.word	268432200
 1305 0234 49F3FF0F 		.word	268432201
 1306 0238 4AF3FF0F 		.word	268432202
 1307 023c 4BF3FF0F 		.word	268432203
 1308 0240 4CF3FF0F 		.word	268432204
 1309 0244 4DF3FF0F 		.word	268432205
 1310 0248 00000000 		.word	cyImoFreqMhz2Reg
 1311 024c 2CFF0B40 		.word	1074528044
 1312 0250 3FF3FF0F 		.word	268432191
 1313 0254 3EF3FF0F 		.word	268432190
 1314 0258 28FF0B40 		.word	1074528040
 1315 025c 1CFF0B40 		.word	1074528028
 1316 0260 20FF0B40 		.word	1074528032
 1317              		.cfi_endproc
 1318              	.LFE13:
 1319              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1320              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1321              		.align	2
 1322              		.global	CySysClkEcoStart
 1323              		.code	16
 1324              		.thumb_func
 1325              		.type	CySysClkEcoStart, %function
 1326              	CySysClkEcoStart:
 1327              	.LFB14:
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 39


 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 40


 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 41


 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 42


1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
 1328              		.loc 1 1028 0
 1329              		.cfi_startproc
 1330 0000 80B5     		push	{r7, lr}
 1331              		.cfi_def_cfa_offset 8
 1332              		.cfi_offset 7, -8
 1333              		.cfi_offset 14, -4
 1334 0002 84B0     		sub	sp, sp, #16
 1335              		.cfi_def_cfa_offset 24
 1336 0004 00AF     		add	r7, sp, #0
 1337              		.cfi_def_cfa_register 7
 1338 0006 7860     		str	r0, [r7, #4]
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1339              		.loc 1 1029 0
 1340 0008 0023     		mov	r3, #0
 1341 000a FB60     		str	r3, [r7, #12]
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 43


1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 44


1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 1342              		.loc 1 1132 0
 1343 000c 154B     		ldr	r3, .L88
 1344 000e 154A     		ldr	r2, .L88
 1345 0010 1268     		ldr	r2, [r2]
 1346 0012 8021     		mov	r1, #128
 1347 0014 0906     		lsl	r1, r1, #24
 1348 0016 0A43     		orr	r2, r1
 1349 0018 1A60     		str	r2, [r3]
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 1350              		.loc 1 1133 0
 1351 001a 0A20     		mov	r0, #10
 1352 001c FFF7FEFF 		bl	CyDelayUs
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 1353              		.loc 1 1134 0
 1354 0020 104B     		ldr	r3, .L88
 1355 0022 104A     		ldr	r2, .L88
 1356 0024 1268     		ldr	r2, [r2]
 1357 0026 0121     		mov	r1, #1
 1358 0028 0A43     		orr	r2, r1
 1359 002a 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 1360              		.loc 1 1137 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 45


 1361 002c 7B68     		ldr	r3, [r7, #4]
 1362 002e 002B     		cmp	r3, #0
 1363 0030 12D0     		beq	.L83
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
 1364              		.loc 1 1139 0
 1365 0032 1023     		mov	r3, #16
 1366 0034 FB60     		str	r3, [r7, #12]
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
 1367              		.loc 1 1141 0
 1368 0036 0CE0     		b	.L84
 1369              	.L86:
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
 1370              		.loc 1 1143 0
 1371 0038 0120     		mov	r0, #1
 1372 003a FFF7FEFF 		bl	CyDelayUs
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
 1373              		.loc 1 1145 0
 1374 003e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1375 0042 031E     		sub	r3, r0, #0
 1376 0044 02D0     		beq	.L85
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
 1377              		.loc 1 1147 0
 1378 0046 0023     		mov	r3, #0
 1379 0048 FB60     		str	r3, [r7, #12]
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
 1380              		.loc 1 1148 0
 1381 004a 05E0     		b	.L83
 1382              	.L85:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1383              		.loc 1 1141 0
 1384 004c 7B68     		ldr	r3, [r7, #4]
 1385 004e 013B     		sub	r3, r3, #1
 1386 0050 7B60     		str	r3, [r7, #4]
 1387              	.L84:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1388              		.loc 1 1141 0 is_stmt 0 discriminator 1
 1389 0052 7B68     		ldr	r3, [r7, #4]
 1390 0054 002B     		cmp	r3, #0
 1391 0056 EFD1     		bne	.L86
 1392              	.L83:
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
 1393              		.loc 1 1154 0 is_stmt 1
 1394 0058 FB68     		ldr	r3, [r7, #12]
1155:Generated_Source\PSoC4/CyLib.c ****     }
 1395              		.loc 1 1155 0
 1396 005a 181C     		mov	r0, r3
 1397 005c BD46     		mov	sp, r7
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 46


 1398 005e 04B0     		add	sp, sp, #16
 1399              		@ sp needed
 1400 0060 80BD     		pop	{r7, pc}
 1401              	.L89:
 1402 0062 C046     		.align	2
 1403              	.L88:
 1404 0064 08000C40 		.word	1074528264
 1405              		.cfi_endproc
 1406              	.LFE14:
 1407              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1408              		.section	.text.CySysClkEcoStop,"ax",%progbits
 1409              		.align	2
 1410              		.global	CySysClkEcoStop
 1411              		.code	16
 1412              		.thumb_func
 1413              		.type	CySysClkEcoStop, %function
 1414              	CySysClkEcoStop:
 1415              	.LFB15:
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
 1416              		.loc 1 1170 0
 1417              		.cfi_startproc
 1418 0000 80B5     		push	{r7, lr}
 1419              		.cfi_def_cfa_offset 8
 1420              		.cfi_offset 7, -8
 1421              		.cfi_offset 14, -4
 1422 0002 00AF     		add	r7, sp, #0
 1423              		.cfi_def_cfa_register 7
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
 1424              		.loc 1 1180 0
 1425 0004 034B     		ldr	r3, .L91
 1426 0006 034A     		ldr	r2, .L91
 1427 0008 1268     		ldr	r2, [r2]
 1428 000a 0349     		ldr	r1, .L91+4
 1429 000c 0A40     		and	r2, r1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 47


 1430 000e 1A60     		str	r2, [r3]
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
 1431              		.loc 1 1182 0
 1432 0010 BD46     		mov	sp, r7
 1433              		@ sp needed
 1434 0012 80BD     		pop	{r7, pc}
 1435              	.L92:
 1436              		.align	2
 1437              	.L91:
 1438 0014 08000C40 		.word	1074528264
 1439 0018 FEFFFF7F 		.word	2147483646
 1440              		.cfi_endproc
 1441              	.LFE15:
 1442              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 1443              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 1444              		.align	2
 1445              		.global	CySysClkEcoReadStatus
 1446              		.code	16
 1447              		.thumb_func
 1448              		.type	CySysClkEcoReadStatus, %function
 1449              	CySysClkEcoReadStatus:
 1450              	.LFB16:
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
 1451              		.loc 1 1204 0
 1452              		.cfi_startproc
 1453 0000 80B5     		push	{r7, lr}
 1454              		.cfi_def_cfa_offset 8
 1455              		.cfi_offset 7, -8
 1456              		.cfi_offset 14, -4
 1457 0002 82B0     		sub	sp, sp, #8
 1458              		.cfi_def_cfa_offset 16
 1459 0004 00AF     		add	r7, sp, #0
 1460              		.cfi_def_cfa_register 7
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 48


1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
 1461              		.loc 1 1217 0
 1462 0006 064B     		ldr	r3, .L95
 1463 0008 1B68     		ldr	r3, [r3]
 1464 000a 0122     		mov	r2, #1
 1465 000c 1340     		and	r3, r2
 1466 000e 5A42     		neg	r2, r3
 1467 0010 5341     		adc	r3, r3, r2
 1468 0012 DBB2     		uxtb	r3, r3
 1469 0014 7B60     		str	r3, [r7, #4]
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 1470              		.loc 1 1220 0
 1471 0016 7B68     		ldr	r3, [r7, #4]
1221:Generated_Source\PSoC4/CyLib.c ****     }
 1472              		.loc 1 1221 0
 1473 0018 181C     		mov	r0, r3
 1474 001a BD46     		mov	sp, r7
 1475 001c 02B0     		add	sp, sp, #8
 1476              		@ sp needed
 1477 001e 80BD     		pop	{r7, pc}
 1478              	.L96:
 1479              		.align	2
 1480              	.L95:
 1481 0020 0C000C40 		.word	1074528268
 1482              		.cfi_endproc
 1483              	.LFE16:
 1484              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 1485              		.section	.text.CySysClkConfigureEcoTrim,"ax",%progbits
 1486              		.align	2
 1487              		.global	CySysClkConfigureEcoTrim
 1488              		.code	16
 1489              		.thumb_func
 1490              		.type	CySysClkConfigureEcoTrim, %function
 1491              	CySysClkConfigureEcoTrim:
 1492              	.LFB17:
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 49


1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 50


1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
 1493              		.loc 1 1340 0
 1494              		.cfi_startproc
 1495 0000 90B5     		push	{r4, r7, lr}
 1496              		.cfi_def_cfa_offset 12
 1497              		.cfi_offset 4, -12
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 51


 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 87B0     		sub	sp, sp, #28
 1501              		.cfi_def_cfa_offset 40
 1502 0004 00AF     		add	r7, sp, #0
 1503              		.cfi_def_cfa_register 7
 1504 0006 F860     		str	r0, [r7, #12]
 1505 0008 B960     		str	r1, [r7, #8]
 1506 000a 7A60     		str	r2, [r7, #4]
 1507 000c 3B60     		str	r3, [r7]
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 1508              		.loc 1 1344 0
 1509 000e 1723     		mov	r3, #23
 1510 0010 FC18     		add	r4, r7, r3
 1511 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 1512 0016 031C     		mov	r3, r0
 1513 0018 2370     		strb	r3, [r4]
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
 1514              		.loc 1 1346 0
 1515 001a 1D4B     		ldr	r3, .L98
 1516 001c 1B68     		ldr	r3, [r3]
 1517 001e 1F22     		mov	r2, #31
 1518 0020 9343     		bic	r3, r2
 1519 0022 3B61     		str	r3, [r7, #16]
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
 1520              		.loc 1 1347 0
 1521 0024 FB68     		ldr	r3, [r7, #12]
 1522 0026 0322     		mov	r2, #3
 1523 0028 1340     		and	r3, r2
 1524 002a 3A69     		ldr	r2, [r7, #16]
 1525 002c 1343     		orr	r3, r2
 1526 002e 3B61     		str	r3, [r7, #16]
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
 1527              		.loc 1 1348 0
 1528 0030 BB68     		ldr	r3, [r7, #8]
 1529 0032 9B00     		lsl	r3, r3, #2
 1530 0034 1C22     		mov	r2, #28
 1531 0036 1340     		and	r3, r2
 1532 0038 3A69     		ldr	r2, [r7, #16]
 1533 003a 1343     		orr	r3, r2
 1534 003c 3B61     		str	r3, [r7, #16]
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
 1535              		.loc 1 1349 0
 1536 003e 144B     		ldr	r3, .L98
 1537 0040 3A69     		ldr	r2, [r7, #16]
 1538 0042 1A60     		str	r2, [r3]
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
 1539              		.loc 1 1351 0
 1540 0044 134B     		ldr	r3, .L98+4
 1541 0046 1B68     		ldr	r3, [r3]
 1542 0048 3F22     		mov	r2, #63
 1543 004a 9343     		bic	r3, r2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 52


 1544 004c 3B61     		str	r3, [r7, #16]
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 1545              		.loc 1 1354 0
 1546 004e 7B68     		ldr	r3, [r7, #4]
 1547 0050 0322     		mov	r2, #3
 1548 0052 1340     		and	r3, r2
 1549 0054 3A69     		ldr	r2, [r7, #16]
 1550 0056 1343     		orr	r3, r2
 1551 0058 3B61     		str	r3, [r7, #16]
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 1552              		.loc 1 1355 0
 1553 005a 3B68     		ldr	r3, [r7]
 1554 005c 9B00     		lsl	r3, r3, #2
 1555 005e 0C22     		mov	r2, #12
 1556 0060 1340     		and	r3, r2
 1557 0062 3A69     		ldr	r2, [r7, #16]
 1558 0064 1343     		orr	r3, r2
 1559 0066 3B61     		str	r3, [r7, #16]
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
 1560              		.loc 1 1356 0
 1561 0068 BB6A     		ldr	r3, [r7, #40]
 1562 006a 1B01     		lsl	r3, r3, #4
 1563 006c 3022     		mov	r2, #48
 1564 006e 1340     		and	r3, r2
 1565 0070 3A69     		ldr	r2, [r7, #16]
 1566 0072 1343     		orr	r3, r2
 1567 0074 3B61     		str	r3, [r7, #16]
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
 1568              		.loc 1 1358 0
 1569 0076 074B     		ldr	r3, .L98+4
 1570 0078 3A69     		ldr	r2, [r7, #16]
 1571 007a 1A60     		str	r2, [r3]
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 1572              		.loc 1 1360 0
 1573 007c 1723     		mov	r3, #23
 1574 007e FB18     		add	r3, r7, r3
 1575 0080 1B78     		ldrb	r3, [r3]
 1576 0082 181C     		mov	r0, r3
 1577 0084 FFF7FEFF 		bl	CyExitCriticalSection
1361:Generated_Source\PSoC4/CyLib.c ****         }
 1578              		.loc 1 1361 0
 1579 0088 BD46     		mov	sp, r7
 1580 008a 07B0     		add	sp, sp, #28
 1581              		@ sp needed
 1582 008c 90BD     		pop	{r4, r7, pc}
 1583              	.L99:
 1584 008e C046     		.align	2
 1585              	.L98:
 1586 0090 0CFF0C40 		.word	1074593548
 1587 0094 10FF0C40 		.word	1074593552
 1588              		.cfi_endproc
 1589              	.LFE17:
 1590              		.size	CySysClkConfigureEcoTrim, .-CySysClkConfigureEcoTrim
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 53


 1591              		.global	__aeabi_uidiv
 1592              		.section	.text.CySysClkConfigureEcoDrive,"ax",%progbits
 1593              		.align	2
 1594              		.global	CySysClkConfigureEcoDrive
 1595              		.code	16
 1596              		.thumb_func
 1597              		.type	CySysClkConfigureEcoDrive, %function
 1598              	CySysClkConfigureEcoDrive:
 1599              	.LFB18:
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
 1600              		.loc 1 1391 0
 1601              		.cfi_startproc
 1602 0000 90B5     		push	{r4, r7, lr}
 1603              		.cfi_def_cfa_offset 12
 1604              		.cfi_offset 4, -12
 1605              		.cfi_offset 7, -8
 1606              		.cfi_offset 14, -4
 1607 0002 8FB0     		sub	sp, sp, #60
 1608              		.cfi_def_cfa_offset 72
 1609 0004 02AF     		add	r7, sp, #8
 1610              		.cfi_def_cfa 7, 64
 1611 0006 F860     		str	r0, [r7, #12]
 1612 0008 B960     		str	r1, [r7, #8]
 1613 000a 7A60     		str	r2, [r7, #4]
 1614 000c 3B60     		str	r3, [r7]
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
 1615              		.loc 1 1392 0
 1616 000e 0023     		mov	r3, #0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 54


 1617 0010 FB62     		str	r3, [r7, #44]
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
 1618              		.loc 1 1403 0
 1619 0012 3A68     		ldr	r2, [r7]
 1620 0014 F423     		mov	r3, #244
 1621 0016 FF33     		add	r3, r3, #255
 1622 0018 9A42     		cmp	r2, r3
 1623 001a 07D9     		bls	.L101
 1624              		.loc 1 1403 0 is_stmt 0 discriminator 1
 1625 001c FB68     		ldr	r3, [r7, #12]
 1626 001e 634A     		ldr	r2, .L125
 1627 0020 9342     		cmp	r3, r2
 1628 0022 03D9     		bls	.L101
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
 1629              		.loc 1 1404 0 is_stmt 1
 1630 0024 FB68     		ldr	r3, [r7, #12]
 1631 0026 624A     		ldr	r2, .L125+4
 1632 0028 9342     		cmp	r3, r2
 1633 002a 02D9     		bls	.L102
 1634              	.L101:
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
 1635              		.loc 1 1406 0
 1636 002c 0123     		mov	r3, #1
 1637 002e FB62     		str	r3, [r7, #44]
 1638 0030 B6E0     		b	.L103
 1639              	.L102:
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
 1640              		.loc 1 1411 0
 1641 0032 3B68     		ldr	r3, [r7]
 1642 0034 5F4A     		ldr	r2, .L125+8
 1643 0036 9342     		cmp	r3, r2
 1644 0038 07D8     		bhi	.L104
 1645              		.loc 1 1411 0 is_stmt 0 discriminator 1
 1646 003a 3B68     		ldr	r3, [r7]
 1647 003c 181C     		mov	r0, r3
 1648 003e 6421     		mov	r1, #100
 1649 0040 FFF7FEFF 		bl	__aeabi_uidiv
 1650 0044 031C     		mov	r3, r0
 1651 0046 043B     		sub	r3, r3, #4
 1652 0048 00E0     		b	.L105
 1653              	.L104:
 1654              		.loc 1 1411 0 discriminator 2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 55


 1655 004a 0723     		mov	r3, #7
 1656              	.L105:
 1657              		.loc 1 1411 0 discriminator 4
 1658 004c BB62     		str	r3, [r7, #40]
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
 1659              		.loc 1 1413 0 is_stmt 1 discriminator 4
 1660 004e 3B68     		ldr	r3, [r7]
 1661 0050 594A     		ldr	r2, .L125+12
 1662 0052 9342     		cmp	r3, r2
 1663 0054 02D8     		bhi	.L106
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
 1664              		.loc 1 1415 0
 1665 0056 0023     		mov	r3, #0
 1666 0058 BB62     		str	r3, [r7, #40]
 1667 005a 2CE0     		b	.L107
 1668              	.L106:
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
 1669              		.loc 1 1417 0
 1670 005c 3B68     		ldr	r3, [r7]
 1671 005e 574A     		ldr	r2, .L125+16
 1672 0060 9342     		cmp	r3, r2
 1673 0062 02D8     		bhi	.L108
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
 1674              		.loc 1 1419 0
 1675 0064 0123     		mov	r3, #1
 1676 0066 BB62     		str	r3, [r7, #40]
 1677 0068 25E0     		b	.L107
 1678              	.L108:
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
 1679              		.loc 1 1421 0
 1680 006a 3B68     		ldr	r3, [r7]
 1681 006c 544A     		ldr	r2, .L125+20
 1682 006e 9342     		cmp	r3, r2
 1683 0070 02D8     		bhi	.L109
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
 1684              		.loc 1 1423 0
 1685 0072 0223     		mov	r3, #2
 1686 0074 BB62     		str	r3, [r7, #40]
 1687 0076 1EE0     		b	.L107
 1688              	.L109:
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
 1689              		.loc 1 1425 0
 1690 0078 3B68     		ldr	r3, [r7]
 1691 007a 524A     		ldr	r2, .L125+24
 1692 007c 9342     		cmp	r3, r2
 1693 007e 02D8     		bhi	.L110
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
 1694              		.loc 1 1427 0
 1695 0080 0323     		mov	r3, #3
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 56


 1696 0082 BB62     		str	r3, [r7, #40]
 1697 0084 17E0     		b	.L107
 1698              	.L110:
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
 1699              		.loc 1 1429 0
 1700 0086 3A68     		ldr	r2, [r7]
 1701 0088 8023     		mov	r3, #128
 1702 008a DB00     		lsl	r3, r3, #3
 1703 008c 9A42     		cmp	r2, r3
 1704 008e 02D8     		bhi	.L111
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
 1705              		.loc 1 1431 0
 1706 0090 0423     		mov	r3, #4
 1707 0092 BB62     		str	r3, [r7, #40]
 1708 0094 0FE0     		b	.L107
 1709              	.L111:
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
 1710              		.loc 1 1433 0
 1711 0096 3B68     		ldr	r3, [r7]
 1712 0098 4B4A     		ldr	r2, .L125+28
 1713 009a 9342     		cmp	r3, r2
 1714 009c 02D8     		bhi	.L112
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
 1715              		.loc 1 1435 0
 1716 009e 0523     		mov	r3, #5
 1717 00a0 BB62     		str	r3, [r7, #40]
 1718 00a2 08E0     		b	.L107
 1719              	.L112:
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
 1720              		.loc 1 1437 0
 1721 00a4 3B68     		ldr	r3, [r7]
 1722 00a6 494A     		ldr	r2, .L125+32
 1723 00a8 9342     		cmp	r3, r2
 1724 00aa 02D8     		bhi	.L113
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
 1725              		.loc 1 1439 0
 1726 00ac 0623     		mov	r3, #6
 1727 00ae BB62     		str	r3, [r7, #40]
 1728 00b0 01E0     		b	.L107
 1729              	.L113:
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
 1730              		.loc 1 1443 0
 1731 00b2 0723     		mov	r3, #7
 1732 00b4 BB62     		str	r3, [r7, #40]
 1733              	.L107:
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 57


1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
 1734              		.loc 1 1447 0
 1735 00b6 3B68     		ldr	r3, [r7]
 1736 00b8 3E4A     		ldr	r2, .L125+8
 1737 00ba 9342     		cmp	r3, r2
 1738 00bc 07D8     		bhi	.L114
 1739              		.loc 1 1447 0 is_stmt 0 discriminator 1
 1740 00be 3B68     		ldr	r3, [r7]
 1741 00c0 181C     		mov	r0, r3
 1742 00c2 C821     		mov	r1, #200
 1743 00c4 FFF7FEFF 		bl	__aeabi_uidiv
 1744 00c8 031C     		mov	r3, r0
 1745 00ca 023B     		sub	r3, r3, #2
 1746 00cc 00E0     		b	.L115
 1747              	.L114:
 1748              		.loc 1 1447 0 discriminator 2
 1749 00ce 0323     		mov	r3, #3
 1750              	.L115:
 1751              		.loc 1 1447 0 discriminator 4
 1752 00d0 FB61     		str	r3, [r7, #28]
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
 1753              		.loc 1 1450 0 is_stmt 1 discriminator 4
 1754 00d2 FB68     		ldr	r3, [r7, #12]
 1755 00d4 BA68     		ldr	r2, [r7, #8]
 1756 00d6 5A43     		mul	r2, r3
 1757 00d8 131C     		mov	r3, r2
 1758 00da 9B00     		lsl	r3, r3, #2
 1759 00dc 9B18     		add	r3, r3, r2
 1760 00de 1B01     		lsl	r3, r3, #4
 1761 00e0 9B1A     		sub	r3, r3, r2
 1762 00e2 181C     		mov	r0, r3
 1763 00e4 FA23     		mov	r3, #250
 1764 00e6 9900     		lsl	r1, r3, #2
 1765 00e8 FFF7FEFF 		bl	__aeabi_uidiv
 1766 00ec 031C     		mov	r3, r0
 1767 00ee 1C1C     		mov	r4, r3
 1768 00f0 FB68     		ldr	r3, [r7, #12]
 1769 00f2 BA68     		ldr	r2, [r7, #8]
 1770 00f4 5343     		mul	r3, r2
 1771 00f6 7A68     		ldr	r2, [r7, #4]
 1772 00f8 5343     		mul	r3, r2
 1773 00fa 181C     		mov	r0, r3
 1774 00fc FA23     		mov	r3, #250
 1775 00fe 9900     		lsl	r1, r3, #2
 1776 0100 FFF7FEFF 		bl	__aeabi_uidiv
 1777 0104 031C     		mov	r3, r0
 1778 0106 6343     		mul	r3, r4
 1779 0108 181C     		mov	r0, r3
 1780 010a 3149     		ldr	r1, .L125+36
 1781 010c FFF7FEFF 		bl	__aeabi_uidiv
 1782 0110 031C     		mov	r3, r0
 1783 0112 BB61     		str	r3, [r7, #24]
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
 1784              		.loc 1 1451 0 discriminator 4
 1785 0114 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 58


 1786 0116 032B     		cmp	r3, #3
 1787 0118 04D9     		bls	.L116
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
 1788              		.loc 1 1453 0
 1789 011a 0123     		mov	r3, #1
 1790 011c FB62     		str	r3, [r7, #44]
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
 1791              		.loc 1 1454 0
 1792 011e 0023     		mov	r3, #0
 1793 0120 3B62     		str	r3, [r7, #32]
 1794 0122 0BE0     		b	.L117
 1795              	.L116:
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
 1796              		.loc 1 1456 0
 1797 0124 BB69     		ldr	r3, [r7, #24]
 1798 0126 012B     		cmp	r3, #1
 1799 0128 02D9     		bls	.L118
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
 1800              		.loc 1 1458 0
 1801 012a BB69     		ldr	r3, [r7, #24]
 1802 012c 3B62     		str	r3, [r7, #32]
 1803 012e 05E0     		b	.L117
 1804              	.L118:
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
 1805              		.loc 1 1462 0
 1806 0130 BB69     		ldr	r3, [r7, #24]
 1807 0132 013B     		sub	r3, r3, #1
 1808 0134 5A1E     		sub	r2, r3, #1
 1809 0136 9341     		sbc	r3, r3, r2
 1810 0138 DBB2     		uxtb	r3, r3
 1811 013a 3B62     		str	r3, [r7, #32]
 1812              	.L117:
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
 1813              		.loc 1 1466 0
 1814 013c FB68     		ldr	r3, [r7, #12]
 1815 013e 254A     		ldr	r2, .L125+40
 1816 0140 9342     		cmp	r3, r2
 1817 0142 02D9     		bls	.L119
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
 1818              		.loc 1 1468 0
 1819 0144 0023     		mov	r3, #0
 1820 0146 7B62     		str	r3, [r7, #36]
 1821 0148 0FE0     		b	.L120
 1822              	.L119:
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
 1823              		.loc 1 1470 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 59


 1824 014a FB68     		ldr	r3, [r7, #12]
 1825 014c 224A     		ldr	r2, .L125+44
 1826 014e 9342     		cmp	r3, r2
 1827 0150 02D9     		bls	.L121
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
 1828              		.loc 1 1472 0
 1829 0152 0123     		mov	r3, #1
 1830 0154 7B62     		str	r3, [r7, #36]
 1831 0156 08E0     		b	.L120
 1832              	.L121:
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
 1833              		.loc 1 1474 0
 1834 0158 FB68     		ldr	r3, [r7, #12]
 1835 015a 204A     		ldr	r2, .L125+48
 1836 015c 9342     		cmp	r3, r2
 1837 015e 02D9     		bls	.L122
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
 1838              		.loc 1 1476 0
 1839 0160 0223     		mov	r3, #2
 1840 0162 7B62     		str	r3, [r7, #36]
 1841 0164 01E0     		b	.L120
 1842              	.L122:
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
 1843              		.loc 1 1480 0
 1844 0166 0323     		mov	r3, #3
 1845 0168 7B62     		str	r3, [r7, #36]
 1846              	.L120:
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
 1847              		.loc 1 1484 0
 1848 016a 7B6A     		ldr	r3, [r7, #36]
 1849 016c 7B61     		str	r3, [r7, #20]
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
 1850              		.loc 1 1486 0
 1851 016e F869     		ldr	r0, [r7, #28]
 1852 0170 B96A     		ldr	r1, [r7, #40]
 1853 0172 7A69     		ldr	r2, [r7, #20]
 1854 0174 7C6A     		ldr	r4, [r7, #36]
 1855 0176 3B6A     		ldr	r3, [r7, #32]
 1856 0178 0093     		str	r3, [sp]
 1857 017a 231C     		mov	r3, r4
 1858 017c FFF7FEFF 		bl	CySysClkConfigureEcoTrim
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
 1859              		.loc 1 1489 0
 1860 0180 3B68     		ldr	r3, [r7]
 1861 0182 012B     		cmp	r3, #1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 60


 1862 0184 06D8     		bhi	.L123
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
 1863              		.loc 1 1492 0
 1864 0186 164B     		ldr	r3, .L125+52
 1865 0188 154A     		ldr	r2, .L125+52
 1866 018a 1268     		ldr	r2, [r2]
 1867 018c 0221     		mov	r1, #2
 1868 018e 0A43     		orr	r2, r1
 1869 0190 1A60     		str	r2, [r3]
 1870 0192 05E0     		b	.L103
 1871              	.L123:
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
 1872              		.loc 1 1499 0
 1873 0194 124B     		ldr	r3, .L125+52
 1874 0196 124A     		ldr	r2, .L125+52
 1875 0198 1268     		ldr	r2, [r2]
 1876 019a 0221     		mov	r1, #2
 1877 019c 8A43     		bic	r2, r1
 1878 019e 1A60     		str	r2, [r3]
 1879              	.L103:
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
 1880              		.loc 1 1503 0
 1881 01a0 FB6A     		ldr	r3, [r7, #44]
1504:Generated_Source\PSoC4/CyLib.c ****         }
 1882              		.loc 1 1504 0
 1883 01a2 181C     		mov	r0, r3
 1884 01a4 BD46     		mov	sp, r7
 1885 01a6 0DB0     		add	sp, sp, #52
 1886              		@ sp needed
 1887 01a8 90BD     		pop	{r4, r7, pc}
 1888              	.L126:
 1889 01aa C046     		.align	2
 1890              	.L125:
 1891 01ac 9F0F0000 		.word	3999
 1892 01b0 35820000 		.word	33333
 1893 01b4 AF040000 		.word	1199
 1894 01b8 57020000 		.word	599
 1895 01bc BB020000 		.word	699
 1896 01c0 1F030000 		.word	799
 1897 01c4 83030000 		.word	899
 1898 01c8 7D040000 		.word	1149
 1899 01cc FA040000 		.word	1274
 1900 01d0 8074D21A 		.word	450000000
 1901 01d4 30750000 		.word	30000
 1902 01d8 C05D0000 		.word	24000
 1903 01dc 68420000 		.word	17000
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 61


 1904 01e0 08000C40 		.word	1074528264
 1905              		.cfi_endproc
 1906              	.LFE18:
 1907              		.size	CySysClkConfigureEcoDrive, .-CySysClkConfigureEcoDrive
 1908              		.section	.text.CySysClkPllStart,"ax",%progbits
 1909              		.align	2
 1910              		.global	CySysClkPllStart
 1911              		.code	16
 1912              		.thumb_func
 1913              		.type	CySysClkPllStart, %function
 1914              	CySysClkPllStart:
 1915              	.LFB19:
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
 1916              		.loc 1 1542 0
 1917              		.cfi_startproc
 1918 0000 90B5     		push	{r4, r7, lr}
 1919              		.cfi_def_cfa_offset 12
 1920              		.cfi_offset 4, -12
 1921              		.cfi_offset 7, -8
 1922              		.cfi_offset 14, -4
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 62


 1923 0002 87B0     		sub	sp, sp, #28
 1924              		.cfi_def_cfa_offset 40
 1925 0004 00AF     		add	r7, sp, #0
 1926              		.cfi_def_cfa_register 7
 1927 0006 7860     		str	r0, [r7, #4]
 1928 0008 3960     		str	r1, [r7]
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
 1929              		.loc 1 1543 0
 1930 000a FF23     		mov	r3, #255
 1931 000c 7B61     		str	r3, [r7, #20]
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1932              		.loc 1 1545 0
 1933 000e 0023     		mov	r3, #0
 1934 0010 3B61     		str	r3, [r7, #16]
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
 1935              		.loc 1 1547 0
 1936 0012 7B68     		ldr	r3, [r7, #4]
 1937 0014 012B     		cmp	r3, #1
 1938 0016 6FD8     		bhi	.L128
 1939              		.loc 1 1547 0 is_stmt 0 discriminator 1
 1940 0018 3B68     		ldr	r3, [r7]
 1941 001a 012B     		cmp	r3, #1
 1942 001c 6CD8     		bhi	.L128
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 1943              		.loc 1 1549 0 is_stmt 1
 1944 001e 0F23     		mov	r3, #15
 1945 0020 FC18     		add	r4, r7, r3
 1946 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1947 0026 031C     		mov	r3, r0
 1948 0028 2370     		strb	r3, [r4]
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
 1949              		.loc 1 1552 0
 1950 002a 3748     		ldr	r0, .L135
 1951 002c 3649     		ldr	r1, .L135
 1952 002e 7A68     		ldr	r2, [r7, #4]
 1953 0030 131C     		mov	r3, r2
 1954 0032 5B00     		lsl	r3, r3, #1
 1955 0034 9B18     		add	r3, r3, r2
 1956 0036 9B00     		lsl	r3, r3, #2
 1957 0038 5B58     		ldr	r3, [r3, r1]
 1958 003a 344A     		ldr	r2, .L135+4
 1959 003c 1340     		and	r3, r2
 1960 003e 191C     		mov	r1, r3
 1961 0040 7A68     		ldr	r2, [r7, #4]
 1962 0042 131C     		mov	r3, r2
 1963 0044 5B00     		lsl	r3, r3, #1
 1964 0046 9B18     		add	r3, r3, r2
 1965 0048 9B00     		lsl	r3, r3, #2
 1966 004a 1950     		str	r1, [r3, r0]
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 63


 1967              		.loc 1 1555 0
 1968 004c 2E48     		ldr	r0, .L135
 1969 004e 2E49     		ldr	r1, .L135
 1970 0050 7A68     		ldr	r2, [r7, #4]
 1971 0052 131C     		mov	r3, r2
 1972 0054 5B00     		lsl	r3, r3, #1
 1973 0056 9B18     		add	r3, r3, r2
 1974 0058 9B00     		lsl	r3, r3, #2
 1975 005a 5B58     		ldr	r3, [r3, r1]
 1976 005c 8022     		mov	r2, #128
 1977 005e 1206     		lsl	r2, r2, #24
 1978 0060 1A43     		orr	r2, r3
 1979 0062 111C     		mov	r1, r2
 1980 0064 7A68     		ldr	r2, [r7, #4]
 1981 0066 131C     		mov	r3, r2
 1982 0068 5B00     		lsl	r3, r3, #1
 1983 006a 9B18     		add	r3, r3, r2
 1984 006c 9B00     		lsl	r3, r3, #2
 1985 006e 1950     		str	r1, [r3, r0]
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 1986              		.loc 1 1557 0
 1987 0070 0F23     		mov	r3, #15
 1988 0072 FB18     		add	r3, r7, r3
 1989 0074 1B78     		ldrb	r3, [r3]
 1990 0076 181C     		mov	r0, r3
 1991 0078 FFF7FEFF 		bl	CyExitCriticalSection
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
 1992              		.loc 1 1560 0
 1993 007c 0520     		mov	r0, #5
 1994 007e FFF7FEFF 		bl	CyDelayUs
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 1995              		.loc 1 1561 0
 1996 0082 0F23     		mov	r3, #15
 1997 0084 FC18     		add	r4, r7, r3
 1998 0086 FFF7FEFF 		bl	CyEnterCriticalSection
 1999 008a 031C     		mov	r3, r0
 2000 008c 2370     		strb	r3, [r4]
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
 2001              		.loc 1 1562 0
 2002 008e 1E48     		ldr	r0, .L135
 2003 0090 1D49     		ldr	r1, .L135
 2004 0092 7A68     		ldr	r2, [r7, #4]
 2005 0094 131C     		mov	r3, r2
 2006 0096 5B00     		lsl	r3, r3, #1
 2007 0098 9B18     		add	r3, r3, r2
 2008 009a 9B00     		lsl	r3, r3, #2
 2009 009c 5B58     		ldr	r3, [r3, r1]
 2010 009e 8022     		mov	r2, #128
 2011 00a0 D205     		lsl	r2, r2, #23
 2012 00a2 1A43     		orr	r2, r3
 2013 00a4 111C     		mov	r1, r2
 2014 00a6 7A68     		ldr	r2, [r7, #4]
 2015 00a8 131C     		mov	r3, r2
 2016 00aa 5B00     		lsl	r3, r3, #1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 64


 2017 00ac 9B18     		add	r3, r3, r2
 2018 00ae 9B00     		lsl	r3, r3, #2
 2019 00b0 1950     		str	r1, [r3, r0]
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 2020              		.loc 1 1563 0
 2021 00b2 0F23     		mov	r3, #15
 2022 00b4 FB18     		add	r3, r7, r3
 2023 00b6 1B78     		ldrb	r3, [r3]
 2024 00b8 181C     		mov	r0, r3
 2025 00ba FFF7FEFF 		bl	CyExitCriticalSection
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
 2026              		.loc 1 1565 0
 2027 00be 3B68     		ldr	r3, [r7]
 2028 00c0 002B     		cmp	r3, #0
 2029 00c2 18D0     		beq	.L129
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
 2030              		.loc 1 1567 0
 2031 00c4 1023     		mov	r3, #16
 2032 00c6 3B61     		str	r3, [r7, #16]
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
 2033              		.loc 1 1569 0
 2034 00c8 12E0     		b	.L130
 2035              	.L132:
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
 2036              		.loc 1 1572 0
 2037 00ca 7B68     		ldr	r3, [r7, #4]
 2038 00cc 181C     		mov	r0, r3
 2039 00ce FFF7FEFF 		bl	CySysClkPllGetLockStatus
 2040 00d2 031E     		sub	r3, r0, #0
 2041 00d4 06D0     		beq	.L131
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
 2042              		.loc 1 1574 0
 2043 00d6 0023     		mov	r3, #0
 2044 00d8 3B61     		str	r3, [r7, #16]
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
 2045              		.loc 1 1575 0
 2046 00da 7B68     		ldr	r3, [r7, #4]
 2047 00dc 181C     		mov	r0, r3
 2048 00de FFF7FEFF 		bl	CySysClkPllGetUnlockStatus
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
 2049              		.loc 1 1576 0
 2050 00e2 08E0     		b	.L129
 2051              	.L131:
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
 2052              		.loc 1 1579 0
 2053 00e4 0120     		mov	r0, #1
 2054 00e6 FFF7FEFF 		bl	CyDelayUs
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
 2055              		.loc 1 1580 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 65


 2056 00ea 7B69     		ldr	r3, [r7, #20]
 2057 00ec 013B     		sub	r3, r3, #1
 2058 00ee 7B61     		str	r3, [r7, #20]
 2059              	.L130:
1569:Generated_Source\PSoC4/CyLib.c ****                 {
 2060              		.loc 1 1569 0
 2061 00f0 7B69     		ldr	r3, [r7, #20]
 2062 00f2 002B     		cmp	r3, #0
 2063 00f4 E9D1     		bne	.L132
 2064              	.L129:
1565:Generated_Source\PSoC4/CyLib.c ****             {
 2065              		.loc 1 1565 0
 2066 00f6 01E0     		b	.L133
 2067              	.L128:
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
 2068              		.loc 1 1586 0
 2069 00f8 0123     		mov	r3, #1
 2070 00fa 3B61     		str	r3, [r7, #16]
 2071              	.L133:
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2072              		.loc 1 1589 0
 2073 00fc 3B69     		ldr	r3, [r7, #16]
1590:Generated_Source\PSoC4/CyLib.c ****     }
 2074              		.loc 1 1590 0
 2075 00fe 181C     		mov	r0, r3
 2076 0100 BD46     		mov	sp, r7
 2077 0102 07B0     		add	sp, sp, #28
 2078              		@ sp needed
 2079 0104 90BD     		pop	{r4, r7, pc}
 2080              	.L136:
 2081 0106 C046     		.align	2
 2082              	.L135:
 2083 0108 14000C40 		.word	1074528276
 2084 010c FFFFFFBF 		.word	-1073741825
 2085              		.cfi_endproc
 2086              	.LFE19:
 2087              		.size	CySysClkPllStart, .-CySysClkPllStart
 2088              		.section	.text.CySysClkPllGetLockStatus,"ax",%progbits
 2089              		.align	2
 2090              		.global	CySysClkPllGetLockStatus
 2091              		.code	16
 2092              		.thumb_func
 2093              		.type	CySysClkPllGetLockStatus, %function
 2094              	CySysClkPllGetLockStatus:
 2095              	.LFB20:
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 66


1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
 2096              		.loc 1 1609 0
 2097              		.cfi_startproc
 2098 0000 90B5     		push	{r4, r7, lr}
 2099              		.cfi_def_cfa_offset 12
 2100              		.cfi_offset 4, -12
 2101              		.cfi_offset 7, -8
 2102              		.cfi_offset 14, -4
 2103 0002 85B0     		sub	sp, sp, #20
 2104              		.cfi_def_cfa_offset 32
 2105 0004 00AF     		add	r7, sp, #0
 2106              		.cfi_def_cfa_register 7
 2107 0006 7860     		str	r0, [r7, #4]
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
 2108              		.loc 1 1613 0
 2109 0008 7B68     		ldr	r3, [r7, #4]
 2110 000a 012B     		cmp	r3, #1
 2111 000c 02D9     		bls	.L138
 2112              		.loc 1 1613 0 is_stmt 0 discriminator 1
 2113 000e 0020     		mov	r0, #0
 2114 0010 FFF7FEFF 		bl	CyHalt
 2115              	.L138:
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2116              		.loc 1 1615 0 is_stmt 1
 2117 0014 0B23     		mov	r3, #11
 2118 0016 FC18     		add	r4, r7, r3
 2119 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 2120 001c 031C     		mov	r3, r0
 2121 001e 2370     		strb	r3, [r4]
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
 2122              		.loc 1 1618 0
 2123 0020 1149     		ldr	r1, .L141
 2124 0022 7A68     		ldr	r2, [r7, #4]
 2125 0024 131C     		mov	r3, r2
 2126 0026 5B00     		lsl	r3, r3, #1
 2127 0028 9B18     		add	r3, r3, r2
 2128 002a 9B00     		lsl	r3, r3, #2
 2129 002c CB18     		add	r3, r1, r3
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 67


 2130 002e 5B68     		ldr	r3, [r3, #4]
 2131 0030 0122     		mov	r2, #1
 2132 0032 1340     		and	r3, r2
 2133 0034 FB60     		str	r3, [r7, #12]
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
 2134              		.loc 1 1619 0
 2135 0036 FB68     		ldr	r3, [r7, #12]
 2136 0038 002B     		cmp	r3, #0
 2137 003a 0AD0     		beq	.L139
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
 2138              		.loc 1 1621 0
 2139 003c 0A49     		ldr	r1, .L141
 2140 003e 7A68     		ldr	r2, [r7, #4]
 2141 0040 131C     		mov	r3, r2
 2142 0042 5B00     		lsl	r3, r3, #1
 2143 0044 9B18     		add	r3, r3, r2
 2144 0046 9B00     		lsl	r3, r3, #2
 2145 0048 CB18     		add	r3, r1, r3
 2146 004a 5B68     		ldr	r3, [r3, #4]
 2147 004c 0122     		mov	r2, #1
 2148 004e 1340     		and	r3, r2
 2149 0050 FB60     		str	r3, [r7, #12]
 2150              	.L139:
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2151              		.loc 1 1624 0
 2152 0052 0B23     		mov	r3, #11
 2153 0054 FB18     		add	r3, r7, r3
 2154 0056 1B78     		ldrb	r3, [r3]
 2155 0058 181C     		mov	r0, r3
 2156 005a FFF7FEFF 		bl	CyExitCriticalSection
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2157              		.loc 1 1626 0
 2158 005e FB68     		ldr	r3, [r7, #12]
1627:Generated_Source\PSoC4/CyLib.c ****     }
 2159              		.loc 1 1627 0
 2160 0060 181C     		mov	r0, r3
 2161 0062 BD46     		mov	sp, r7
 2162 0064 05B0     		add	sp, sp, #20
 2163              		@ sp needed
 2164 0066 90BD     		pop	{r4, r7, pc}
 2165              	.L142:
 2166              		.align	2
 2167              	.L141:
 2168 0068 14000C40 		.word	1074528276
 2169              		.cfi_endproc
 2170              	.LFE20:
 2171              		.size	CySysClkPllGetLockStatus, .-CySysClkPllGetLockStatus
 2172              		.section	.text.CySysClkPllStop,"ax",%progbits
 2173              		.align	2
 2174              		.global	CySysClkPllStop
 2175              		.code	16
 2176              		.thumb_func
 2177              		.type	CySysClkPllStop, %function
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 68


 2178              	CySysClkPllStop:
 2179              	.LFB21:
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
 2180              		.loc 1 1646 0
 2181              		.cfi_startproc
 2182 0000 90B5     		push	{r4, r7, lr}
 2183              		.cfi_def_cfa_offset 12
 2184              		.cfi_offset 4, -12
 2185              		.cfi_offset 7, -8
 2186              		.cfi_offset 14, -4
 2187 0002 85B0     		sub	sp, sp, #20
 2188              		.cfi_def_cfa_offset 32
 2189 0004 00AF     		add	r7, sp, #0
 2190              		.cfi_def_cfa_register 7
 2191 0006 7860     		str	r0, [r7, #4]
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
 2192              		.loc 1 1649 0
 2193 0008 7B68     		ldr	r3, [r7, #4]
 2194 000a 012B     		cmp	r3, #1
 2195 000c 1BD8     		bhi	.L143
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 2196              		.loc 1 1651 0
 2197 000e 0F23     		mov	r3, #15
 2198 0010 FC18     		add	r4, r7, r3
 2199 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 2200 0016 031C     		mov	r3, r0
 2201 0018 2370     		strb	r3, [r4]
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
 2202              		.loc 1 1652 0
 2203 001a 0C48     		ldr	r0, .L145
 2204 001c 0B49     		ldr	r1, .L145
 2205 001e 7A68     		ldr	r2, [r7, #4]
 2206 0020 131C     		mov	r3, r2
 2207 0022 5B00     		lsl	r3, r3, #1
 2208 0024 9B18     		add	r3, r3, r2
 2209 0026 9B00     		lsl	r3, r3, #2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 69


 2210 0028 5B58     		ldr	r3, [r3, r1]
 2211 002a 9B00     		lsl	r3, r3, #2
 2212 002c 9908     		lsr	r1, r3, #2
 2213 002e 7A68     		ldr	r2, [r7, #4]
 2214 0030 131C     		mov	r3, r2
 2215 0032 5B00     		lsl	r3, r3, #1
 2216 0034 9B18     		add	r3, r3, r2
 2217 0036 9B00     		lsl	r3, r3, #2
 2218 0038 1950     		str	r1, [r3, r0]
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 2219              		.loc 1 1653 0
 2220 003a 0F23     		mov	r3, #15
 2221 003c FB18     		add	r3, r7, r3
 2222 003e 1B78     		ldrb	r3, [r3]
 2223 0040 181C     		mov	r0, r3
 2224 0042 FFF7FEFF 		bl	CyExitCriticalSection
 2225              	.L143:
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
 2226              		.loc 1 1655 0
 2227 0046 BD46     		mov	sp, r7
 2228 0048 05B0     		add	sp, sp, #20
 2229              		@ sp needed
 2230 004a 90BD     		pop	{r4, r7, pc}
 2231              	.L146:
 2232              		.align	2
 2233              	.L145:
 2234 004c 14000C40 		.word	1074528276
 2235              		.cfi_endproc
 2236              	.LFE21:
 2237              		.size	CySysClkPllStop, .-CySysClkPllStop
 2238              		.section	.text.CySysClkPllSetPQ,"ax",%progbits
 2239              		.align	2
 2240              		.global	CySysClkPllSetPQ
 2241              		.code	16
 2242              		.thumb_func
 2243              		.type	CySysClkPllSetPQ, %function
 2244              	CySysClkPllSetPQ:
 2245              	.LFB22:
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 70


1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
 2246              		.loc 1 1691 0
 2247              		.cfi_startproc
 2248 0000 90B5     		push	{r4, r7, lr}
 2249              		.cfi_def_cfa_offset 12
 2250              		.cfi_offset 4, -12
 2251              		.cfi_offset 7, -8
 2252              		.cfi_offset 14, -4
 2253 0002 89B0     		sub	sp, sp, #36
 2254              		.cfi_def_cfa_offset 48
 2255 0004 00AF     		add	r7, sp, #0
 2256              		.cfi_def_cfa_register 7
 2257 0006 F860     		str	r0, [r7, #12]
 2258 0008 B960     		str	r1, [r7, #8]
 2259 000a 7A60     		str	r2, [r7, #4]
 2260 000c 3B60     		str	r3, [r7]
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
 2261              		.loc 1 1695 0
 2262 000e 0123     		mov	r3, #1
 2263 0010 FB61     		str	r3, [r7, #28]
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2264              		.loc 1 1697 0
 2265 0012 1B23     		mov	r3, #27
 2266 0014 FC18     		add	r4, r7, r3
 2267 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 2268 001a 031C     		mov	r3, r0
 2269 001c 2370     		strb	r3, [r4]
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
 2270              		.loc 1 1699 0
 2271 001e FB68     		ldr	r3, [r7, #12]
 2272 0020 181C     		mov	r0, r3
 2273 0022 FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 2274 0026 031C     		mov	r3, r0
 2275 0028 7B61     		str	r3, [r7, #20]
1700:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 71


1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
 2276              		.loc 1 1701 0
 2277 002a FB68     		ldr	r3, [r7, #12]
 2278 002c 012B     		cmp	r3, #1
 2279 002e 41D8     		bhi	.L148
 2280              		.loc 1 1701 0 is_stmt 0 discriminator 1
 2281 0030 BB68     		ldr	r3, [r7, #8]
 2282 0032 032B     		cmp	r3, #3
 2283 0034 3ED9     		bls	.L148
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
 2284              		.loc 1 1702 0 is_stmt 1
 2285 0036 BA68     		ldr	r2, [r7, #8]
 2286 0038 0423     		mov	r3, #4
 2287 003a FF33     		add	r3, r3, #255
 2288 003c 9A42     		cmp	r2, r3
 2289 003e 39D8     		bhi	.L148
 2290              		.loc 1 1702 0 is_stmt 0 discriminator 1
 2291 0040 7B68     		ldr	r3, [r7, #4]
 2292 0042 002B     		cmp	r3, #0
 2293 0044 36D0     		beq	.L148
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
 2294              		.loc 1 1703 0 is_stmt 1
 2295 0046 7B68     		ldr	r3, [r7, #4]
 2296 0048 402B     		cmp	r3, #64
 2297 004a 33D8     		bhi	.L148
 2298              		.loc 1 1703 0 is_stmt 0 discriminator 1
 2299 004c 3B68     		ldr	r3, [r7]
 2300 004e 012B     		cmp	r3, #1
 2301 0050 30D9     		bls	.L148
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
 2302              		.loc 1 1704 0 is_stmt 1
 2303 0052 3B68     		ldr	r3, [r7]
 2304 0054 032B     		cmp	r3, #3
 2305 0056 2DD8     		bhi	.L148
 2306              		.loc 1 1704 0 is_stmt 0 discriminator 1
 2307 0058 7B69     		ldr	r3, [r7, #20]
 2308 005a 002B     		cmp	r3, #0
 2309 005c 2AD1     		bne	.L148
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
 2310              		.loc 1 1708 0 is_stmt 1
 2311 005e 1B49     		ldr	r1, .L150
 2312 0060 FA68     		ldr	r2, [r7, #12]
 2313 0062 131C     		mov	r3, r2
 2314 0064 5B00     		lsl	r3, r3, #1
 2315 0066 9B18     		add	r3, r3, r2
 2316 0068 9B00     		lsl	r3, r3, #2
 2317 006a 5B58     		ldr	r3, [r3, r1]
 2318 006c 184A     		ldr	r2, .L150+4
 2319 006e 1340     		and	r3, r2
 2320 0070 3B61     		str	r3, [r7, #16]
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 72


 2321              		.loc 1 1712 0
 2322 0072 BB68     		ldr	r3, [r7, #8]
 2323 0074 FF22     		mov	r2, #255
 2324 0076 1340     		and	r3, r2
 2325 0078 3A69     		ldr	r2, [r7, #16]
 2326 007a 1343     		orr	r3, r2
 2327 007c 3B61     		str	r3, [r7, #16]
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
 2328              		.loc 1 1713 0
 2329 007e 7B68     		ldr	r3, [r7, #4]
 2330 0080 013B     		sub	r3, r3, #1
 2331 0082 1A02     		lsl	r2, r3, #8
 2332 0084 FC23     		mov	r3, #252
 2333 0086 9B01     		lsl	r3, r3, #6
 2334 0088 1340     		and	r3, r2
 2335 008a 3A69     		ldr	r2, [r7, #16]
 2336 008c 1343     		orr	r3, r2
 2337 008e 3B61     		str	r3, [r7, #16]
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
 2338              		.loc 1 1714 0
 2339 0090 3B68     		ldr	r3, [r7]
 2340 0092 1A04     		lsl	r2, r3, #16
 2341 0094 E023     		mov	r3, #224
 2342 0096 DB02     		lsl	r3, r3, #11
 2343 0098 1340     		and	r3, r2
 2344 009a 3A69     		ldr	r2, [r7, #16]
 2345 009c 1343     		orr	r3, r2
 2346 009e 3B61     		str	r3, [r7, #16]
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
 2347              		.loc 1 1716 0
 2348 00a0 0A49     		ldr	r1, .L150
 2349 00a2 FA68     		ldr	r2, [r7, #12]
 2350 00a4 131C     		mov	r3, r2
 2351 00a6 5B00     		lsl	r3, r3, #1
 2352 00a8 9B18     		add	r3, r3, r2
 2353 00aa 9B00     		lsl	r3, r3, #2
 2354 00ac 3A69     		ldr	r2, [r7, #16]
 2355 00ae 5A50     		str	r2, [r3, r1]
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
 2356              		.loc 1 1718 0
 2357 00b0 0023     		mov	r3, #0
 2358 00b2 FB61     		str	r3, [r7, #28]
 2359              	.L148:
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2360              		.loc 1 1721 0
 2361 00b4 1B23     		mov	r3, #27
 2362 00b6 FB18     		add	r3, r7, r3
 2363 00b8 1B78     		ldrb	r3, [r3]
 2364 00ba 181C     		mov	r0, r3
 2365 00bc FFF7FEFF 		bl	CyExitCriticalSection
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2366              		.loc 1 1723 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 73


 2367 00c0 FB69     		ldr	r3, [r7, #28]
1724:Generated_Source\PSoC4/CyLib.c ****     }
 2368              		.loc 1 1724 0
 2369 00c2 181C     		mov	r0, r3
 2370 00c4 BD46     		mov	sp, r7
 2371 00c6 09B0     		add	sp, sp, #36
 2372              		@ sp needed
 2373 00c8 90BD     		pop	{r4, r7, pc}
 2374              	.L151:
 2375 00ca C046     		.align	2
 2376              	.L150:
 2377 00cc 14000C40 		.word	1074528276
 2378 00d0 00C0F8FF 		.word	-475136
 2379              		.cfi_endproc
 2380              	.LFE22:
 2381              		.size	CySysClkPllSetPQ, .-CySysClkPllSetPQ
 2382              		.section	.text.CySysClkPllSetBypassMode,"ax",%progbits
 2383              		.align	2
 2384              		.global	CySysClkPllSetBypassMode
 2385              		.code	16
 2386              		.thumb_func
 2387              		.type	CySysClkPllSetBypassMode, %function
 2388              	CySysClkPllSetBypassMode:
 2389              	.LFB23:
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 74


1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
 2390              		.loc 1 1759 0
 2391              		.cfi_startproc
 2392 0000 90B5     		push	{r4, r7, lr}
 2393              		.cfi_def_cfa_offset 12
 2394              		.cfi_offset 4, -12
 2395              		.cfi_offset 7, -8
 2396              		.cfi_offset 14, -4
 2397 0002 85B0     		sub	sp, sp, #20
 2398              		.cfi_def_cfa_offset 32
 2399 0004 00AF     		add	r7, sp, #0
 2400              		.cfi_def_cfa_register 7
 2401 0006 7860     		str	r0, [r7, #4]
 2402 0008 3960     		str	r1, [r7]
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2403              		.loc 1 1763 0
 2404 000a 0F23     		mov	r3, #15
 2405 000c FC18     		add	r4, r7, r3
 2406 000e FFF7FEFF 		bl	CyEnterCriticalSection
 2407 0012 031C     		mov	r3, r0
 2408 0014 2370     		strb	r3, [r4]
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
 2409              		.loc 1 1765 0
 2410 0016 7B68     		ldr	r3, [r7, #4]
 2411 0018 012B     		cmp	r3, #1
 2412 001a 19D8     		bhi	.L153
 2413              		.loc 1 1765 0 is_stmt 0 discriminator 1
 2414 001c 3B68     		ldr	r3, [r7]
 2415 001e 032B     		cmp	r3, #3
 2416 0020 16D8     		bhi	.L153
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
 2417              		.loc 1 1767 0 is_stmt 1
 2418 0022 1049     		ldr	r1, .L154
 2419 0024 7A68     		ldr	r2, [r7, #4]
 2420 0026 131C     		mov	r3, r2
 2421 0028 5B00     		lsl	r3, r3, #1
 2422 002a 9B18     		add	r3, r3, r2
 2423 002c 9B00     		lsl	r3, r3, #2
 2424 002e 5B58     		ldr	r3, [r3, r1]
 2425 0030 0D4A     		ldr	r2, .L154+4
 2426 0032 1340     		and	r3, r2
 2427 0034 BB60     		str	r3, [r7, #8]
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
 2428              		.loc 1 1768 0
 2429 0036 3B68     		ldr	r3, [r7]
 2430 0038 1B05     		lsl	r3, r3, #20
 2431 003a BA68     		ldr	r2, [r7, #8]
 2432 003c 1343     		orr	r3, r2
 2433 003e BB60     		str	r3, [r7, #8]
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
 2434              		.loc 1 1769 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 75


 2435 0040 0849     		ldr	r1, .L154
 2436 0042 7A68     		ldr	r2, [r7, #4]
 2437 0044 131C     		mov	r3, r2
 2438 0046 5B00     		lsl	r3, r3, #1
 2439 0048 9B18     		add	r3, r3, r2
 2440 004a 9B00     		lsl	r3, r3, #2
 2441 004c BA68     		ldr	r2, [r7, #8]
 2442 004e 5A50     		str	r2, [r3, r1]
 2443              	.L153:
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2444              		.loc 1 1772 0
 2445 0050 0F23     		mov	r3, #15
 2446 0052 FB18     		add	r3, r7, r3
 2447 0054 1B78     		ldrb	r3, [r3]
 2448 0056 181C     		mov	r0, r3
 2449 0058 FFF7FEFF 		bl	CyExitCriticalSection
1773:Generated_Source\PSoC4/CyLib.c ****     }
 2450              		.loc 1 1773 0
 2451 005c BD46     		mov	sp, r7
 2452 005e 05B0     		add	sp, sp, #20
 2453              		@ sp needed
 2454 0060 90BD     		pop	{r4, r7, pc}
 2455              	.L155:
 2456 0062 C046     		.align	2
 2457              	.L154:
 2458 0064 14000C40 		.word	1074528276
 2459 0068 FFFFCFFF 		.word	-3145729
 2460              		.cfi_endproc
 2461              	.LFE23:
 2462              		.size	CySysClkPllSetBypassMode, .-CySysClkPllSetBypassMode
 2463              		.section	.text.CySysClkPllGetBypassMode,"ax",%progbits
 2464              		.align	2
 2465              		.code	16
 2466              		.thumb_func
 2467              		.type	CySysClkPllGetBypassMode, %function
 2468              	CySysClkPllGetBypassMode:
 2469              	.LFB24:
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 76


1792:Generated_Source\PSoC4/CyLib.c ****     {
 2470              		.loc 1 1792 0
 2471              		.cfi_startproc
 2472 0000 90B5     		push	{r4, r7, lr}
 2473              		.cfi_def_cfa_offset 12
 2474              		.cfi_offset 4, -12
 2475              		.cfi_offset 7, -8
 2476              		.cfi_offset 14, -4
 2477 0002 85B0     		sub	sp, sp, #20
 2478              		.cfi_def_cfa_offset 32
 2479 0004 00AF     		add	r7, sp, #0
 2480              		.cfi_def_cfa_register 7
 2481 0006 7860     		str	r0, [r7, #4]
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
 2482              		.loc 1 1796 0
 2483 0008 7B68     		ldr	r3, [r7, #4]
 2484 000a 012B     		cmp	r3, #1
 2485 000c 02D9     		bls	.L157
 2486              		.loc 1 1796 0 is_stmt 0 discriminator 1
 2487 000e 0020     		mov	r0, #0
 2488 0010 FFF7FEFF 		bl	CyHalt
 2489              	.L157:
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2490              		.loc 1 1798 0 is_stmt 1
 2491 0014 0F23     		mov	r3, #15
 2492 0016 FC18     		add	r4, r7, r3
 2493 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 2494 001c 031C     		mov	r3, r0
 2495 001e 2370     		strb	r3, [r4]
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
 2496              		.loc 1 1800 0
 2497 0020 0C49     		ldr	r1, .L159
 2498 0022 7A68     		ldr	r2, [r7, #4]
 2499 0024 131C     		mov	r3, r2
 2500 0026 5B00     		lsl	r3, r3, #1
 2501 0028 9B18     		add	r3, r3, r2
 2502 002a 9B00     		lsl	r3, r3, #2
 2503 002c 5A58     		ldr	r2, [r3, r1]
 2504 002e C023     		mov	r3, #192
 2505 0030 9B03     		lsl	r3, r3, #14
 2506 0032 1340     		and	r3, r2
 2507 0034 BB60     		str	r3, [r7, #8]
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
 2508              		.loc 1 1801 0
 2509 0036 BB68     		ldr	r3, [r7, #8]
 2510 0038 1B0D     		lsr	r3, r3, #20
 2511 003a BB60     		str	r3, [r7, #8]
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2512              		.loc 1 1803 0
 2513 003c 0F23     		mov	r3, #15
 2514 003e FB18     		add	r3, r7, r3
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 77


 2515 0040 1B78     		ldrb	r3, [r3]
 2516 0042 181C     		mov	r0, r3
 2517 0044 FFF7FEFF 		bl	CyExitCriticalSection
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 2518              		.loc 1 1805 0
 2519 0048 BB68     		ldr	r3, [r7, #8]
1806:Generated_Source\PSoC4/CyLib.c ****     }
 2520              		.loc 1 1806 0
 2521 004a 181C     		mov	r0, r3
 2522 004c BD46     		mov	sp, r7
 2523 004e 05B0     		add	sp, sp, #20
 2524              		@ sp needed
 2525 0050 90BD     		pop	{r4, r7, pc}
 2526              	.L160:
 2527 0052 C046     		.align	2
 2528              	.L159:
 2529 0054 14000C40 		.word	1074528276
 2530              		.cfi_endproc
 2531              	.LFE24:
 2532              		.size	CySysClkPllGetBypassMode, .-CySysClkPllGetBypassMode
 2533              		.section	.text.CySysClkPllConfigChangeAllowed,"ax",%progbits
 2534              		.align	2
 2535              		.code	16
 2536              		.thumb_func
 2537              		.type	CySysClkPllConfigChangeAllowed, %function
 2538              	CySysClkPllConfigChangeAllowed:
 2539              	.LFB25:
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
 2540              		.loc 1 1827 0
 2541              		.cfi_startproc
 2542 0000 80B5     		push	{r7, lr}
 2543              		.cfi_def_cfa_offset 8
 2544              		.cfi_offset 7, -8
 2545              		.cfi_offset 14, -4
 2546 0002 86B0     		sub	sp, sp, #24
 2547              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 78


 2548 0004 00AF     		add	r7, sp, #0
 2549              		.cfi_def_cfa_register 7
 2550 0006 7860     		str	r0, [r7, #4]
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
 2551              		.loc 1 1830 0
 2552 0008 0423     		mov	r3, #4
 2553 000a 7B61     		str	r3, [r7, #20]
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
 2554              		.loc 1 1832 0
 2555 000c FFF7FEFF 		bl	CySysClkGetSysclkSource
 2556 0010 031C     		mov	r3, r0
 2557 0012 3B61     		str	r3, [r7, #16]
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
 2558              		.loc 1 1833 0
 2559 0014 7B68     		ldr	r3, [r7, #4]
 2560 0016 181C     		mov	r0, r3
 2561 0018 FFF7FEFF 		bl	CySysClkPllGetBypassMode
 2562 001c 031C     		mov	r3, r0
 2563 001e FB60     		str	r3, [r7, #12]
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
 2564              		.loc 1 1835 0
 2565 0020 FB68     		ldr	r3, [r7, #12]
 2566 0022 022B     		cmp	r3, #2
 2567 0024 0FD0     		beq	.L162
 2568              		.loc 1 1835 0 is_stmt 0 discriminator 1
 2569 0026 3A69     		ldr	r2, [r7, #16]
 2570 0028 8023     		mov	r3, #128
 2571 002a 9B02     		lsl	r3, r3, #10
 2572 002c 9A42     		cmp	r2, r3
 2573 002e 02D0     		beq	.L163
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
 2574              		.loc 1 1836 0 is_stmt 1
 2575 0030 7B68     		ldr	r3, [r7, #4]
 2576 0032 002B     		cmp	r3, #0
 2577 0034 07D0     		beq	.L162
 2578              	.L163:
 2579              		.loc 1 1836 0 is_stmt 0 discriminator 1
 2580 0036 3A69     		ldr	r2, [r7, #16]
 2581 0038 8023     		mov	r3, #128
 2582 003a 5B02     		lsl	r3, r3, #9
 2583 003c 9A42     		cmp	r2, r3
 2584 003e 04D0     		beq	.L164
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
 2585              		.loc 1 1837 0 is_stmt 1
 2586 0040 7B68     		ldr	r3, [r7, #4]
 2587 0042 012B     		cmp	r3, #1
 2588 0044 01D1     		bne	.L164
 2589              	.L162:
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
 2590              		.loc 1 1839 0
 2591 0046 0023     		mov	r3, #0
 2592 0048 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 79


 2593              	.L164:
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
 2594              		.loc 1 1842 0
 2595 004a 7B69     		ldr	r3, [r7, #20]
1843:Generated_Source\PSoC4/CyLib.c ****     }
 2596              		.loc 1 1843 0
 2597 004c 181C     		mov	r0, r3
 2598 004e BD46     		mov	sp, r7
 2599 0050 06B0     		add	sp, sp, #24
 2600              		@ sp needed
 2601 0052 80BD     		pop	{r7, pc}
 2602              		.cfi_endproc
 2603              	.LFE25:
 2604              		.size	CySysClkPllConfigChangeAllowed, .-CySysClkPllConfigChangeAllowed
 2605              		.section	.text.CySysClkPllGetUnlockStatus,"ax",%progbits
 2606              		.align	2
 2607              		.global	CySysClkPllGetUnlockStatus
 2608              		.code	16
 2609              		.thumb_func
 2610              		.type	CySysClkPllGetUnlockStatus, %function
 2611              	CySysClkPllGetUnlockStatus:
 2612              	.LFB26:
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
 2613              		.loc 1 1865 0
 2614              		.cfi_startproc
 2615 0000 90B5     		push	{r4, r7, lr}
 2616              		.cfi_def_cfa_offset 12
 2617              		.cfi_offset 4, -12
 2618              		.cfi_offset 7, -8
 2619              		.cfi_offset 14, -4
 2620 0002 85B0     		sub	sp, sp, #20
 2621              		.cfi_def_cfa_offset 32
 2622 0004 00AF     		add	r7, sp, #0
 2623              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 80


 2624 0006 7860     		str	r0, [r7, #4]
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
 2625              		.loc 1 1866 0
 2626 0008 0023     		mov	r3, #0
 2627 000a FB60     		str	r3, [r7, #12]
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2628              		.loc 1 1869 0
 2629 000c 0B23     		mov	r3, #11
 2630 000e FC18     		add	r4, r7, r3
 2631 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 2632 0014 031C     		mov	r3, r0
 2633 0016 2370     		strb	r3, [r4]
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
 2634              		.loc 1 1871 0
 2635 0018 1549     		ldr	r1, .L168
 2636 001a 7A68     		ldr	r2, [r7, #4]
 2637 001c 131C     		mov	r3, r2
 2638 001e 5B00     		lsl	r3, r3, #1
 2639 0020 9B18     		add	r3, r3, r2
 2640 0022 9B00     		lsl	r3, r3, #2
 2641 0024 CB18     		add	r3, r1, r3
 2642 0026 0833     		add	r3, r3, #8
 2643 0028 1B68     		ldr	r3, [r3]
 2644 002a 1022     		mov	r2, #16
 2645 002c 1340     		and	r3, r2
 2646 002e FB60     		str	r3, [r7, #12]
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
 2647              		.loc 1 1872 0
 2648 0030 0F48     		ldr	r0, .L168
 2649 0032 0F49     		ldr	r1, .L168
 2650 0034 7A68     		ldr	r2, [r7, #4]
 2651 0036 131C     		mov	r3, r2
 2652 0038 5B00     		lsl	r3, r3, #1
 2653 003a 9B18     		add	r3, r3, r2
 2654 003c 9B00     		lsl	r3, r3, #2
 2655 003e CB18     		add	r3, r1, r3
 2656 0040 0833     		add	r3, r3, #8
 2657 0042 1B68     		ldr	r3, [r3]
 2658 0044 1022     		mov	r2, #16
 2659 0046 1A43     		orr	r2, r3
 2660 0048 111C     		mov	r1, r2
 2661 004a 7A68     		ldr	r2, [r7, #4]
 2662 004c 131C     		mov	r3, r2
 2663 004e 5B00     		lsl	r3, r3, #1
 2664 0050 9B18     		add	r3, r3, r2
 2665 0052 9B00     		lsl	r3, r3, #2
 2666 0054 C318     		add	r3, r0, r3
 2667 0056 0833     		add	r3, r3, #8
 2668 0058 1960     		str	r1, [r3]
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 2669              		.loc 1 1874 0
 2670 005a 0B23     		mov	r3, #11
 2671 005c FB18     		add	r3, r7, r3
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 81


 2672 005e 1B78     		ldrb	r3, [r3]
 2673 0060 181C     		mov	r0, r3
 2674 0062 FFF7FEFF 		bl	CyExitCriticalSection
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2675              		.loc 1 1876 0
 2676 0066 FB68     		ldr	r3, [r7, #12]
1877:Generated_Source\PSoC4/CyLib.c ****     }
 2677              		.loc 1 1877 0
 2678 0068 181C     		mov	r0, r3
 2679 006a BD46     		mov	sp, r7
 2680 006c 05B0     		add	sp, sp, #20
 2681              		@ sp needed
 2682 006e 90BD     		pop	{r4, r7, pc}
 2683              	.L169:
 2684              		.align	2
 2685              	.L168:
 2686 0070 14000C40 		.word	1074528276
 2687              		.cfi_endproc
 2688              	.LFE26:
 2689              		.size	CySysClkPllGetUnlockStatus, .-CySysClkPllGetUnlockStatus
 2690              		.global	__aeabi_idiv
 2691              		.section	.text.CySysClkPllSetFrequency,"ax",%progbits
 2692              		.align	2
 2693              		.global	CySysClkPllSetFrequency
 2694              		.code	16
 2695              		.thumb_func
 2696              		.type	CySysClkPllSetFrequency, %function
 2697              	CySysClkPllSetFrequency:
 2698              	.LFB27:
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 82


1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
 2699              		.loc 1 1917 0
 2700              		.cfi_startproc
 2701 0000 80B5     		push	{r7, lr}
 2702              		.cfi_def_cfa_offset 8
 2703              		.cfi_offset 7, -8
 2704              		.cfi_offset 14, -4
 2705 0002 8EB0     		sub	sp, sp, #56
 2706              		.cfi_def_cfa_offset 64
 2707 0004 00AF     		add	r7, sp, #0
 2708              		.cfi_def_cfa_register 7
 2709 0006 F860     		str	r0, [r7, #12]
 2710 0008 B960     		str	r1, [r7, #8]
 2711 000a 7A60     		str	r2, [r7, #4]
 2712 000c 3B60     		str	r3, [r7]
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
 2713              		.loc 1 1921 0
 2714 000e 0023     		mov	r3, #0
 2715 0010 7B63     		str	r3, [r7, #52]
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
 2716              		.loc 1 1922 0
 2717 0012 0023     		mov	r3, #0
 2718 0014 3B63     		str	r3, [r7, #48]
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
 2719              		.loc 1 1931 0
 2720 0016 0123     		mov	r3, #1
 2721 0018 BB62     		str	r3, [r7, #40]
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
 2722              		.loc 1 1934 0
 2723 001a FB68     		ldr	r3, [r7, #12]
 2724 001c 181C     		mov	r0, r3
 2725 001e FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 83


 2726 0022 031C     		mov	r3, r0
 2727 0024 7B62     		str	r3, [r7, #36]
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
 2728              		.loc 1 1936 0
 2729 0026 FB68     		ldr	r3, [r7, #12]
 2730 0028 012B     		cmp	r3, #1
 2731 002a 00D9     		bls	.LCB2337
 2732 002c 91E0     		b	.L171	@long jump
 2733              	.LCB2337:
 2734              		.loc 1 1936 0 is_stmt 0 discriminator 1
 2735 002e BB68     		ldr	r3, [r7, #8]
 2736 0030 4A4A     		ldr	r2, .L180
 2737 0032 9342     		cmp	r3, r2
 2738 0034 00D8     		bhi	.LCB2341
 2739 0036 8CE0     		b	.L171	@long jump
 2740              	.LCB2341:
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
 2741              		.loc 1 1937 0 is_stmt 1
 2742 0038 BA68     		ldr	r2, [r7, #8]
 2743 003a C023     		mov	r3, #192
 2744 003c 1B02     		lsl	r3, r3, #8
 2745 003e 9A42     		cmp	r2, r3
 2746 0040 00D9     		bls	.LCB2346
 2747 0042 86E0     		b	.L171	@long jump
 2748              	.LCB2346:
 2749              		.loc 1 1937 0 is_stmt 0 discriminator 1
 2750 0044 7B68     		ldr	r3, [r7, #4]
 2751 0046 464A     		ldr	r2, .L180+4
 2752 0048 9342     		cmp	r3, r2
 2753 004a 00D8     		bhi	.LCB2350
 2754 004c 81E0     		b	.L171	@long jump
 2755              	.LCB2350:
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
 2756              		.loc 1 1938 0 is_stmt 1
 2757 004e 7A68     		ldr	r2, [r7, #4]
 2758 0050 C023     		mov	r3, #192
 2759 0052 1B02     		lsl	r3, r3, #8
 2760 0054 9A42     		cmp	r2, r3
 2761 0056 00D9     		bls	.LCB2355
 2762 0058 7BE0     		b	.L171	@long jump
 2763              	.LCB2355:
 2764              		.loc 1 1938 0 is_stmt 0 discriminator 1
 2765 005a 3B68     		ldr	r3, [r7]
 2766 005c 032B     		cmp	r3, #3
 2767 005e 00D9     		bls	.LCB2358
 2768 0060 77E0     		b	.L171	@long jump
 2769              	.LCB2358:
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
 2770              		.loc 1 1939 0 is_stmt 1
 2771 0062 7B6A     		ldr	r3, [r7, #36]
 2772 0064 002B     		cmp	r3, #0
 2773 0066 00D0     		beq	.LCB2361
 2774 0068 73E0     		b	.L171	@long jump
 2775              	.LCB2361:
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 84


1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
 2776              		.loc 1 1944 0
 2777 006a BB68     		ldr	r3, [r7, #8]
 2778 006c 3D4A     		ldr	r2, .L180+8
 2779 006e 9446     		mov	ip, r2
 2780 0070 6344     		add	r3, r3, ip
 2781 0072 181C     		mov	r0, r3
 2782 0074 3C49     		ldr	r1, .L180+12
 2783 0076 FFF7FEFF 		bl	__aeabi_uidiv
 2784 007a 031C     		mov	r3, r0
 2785 007c 3B62     		str	r3, [r7, #32]
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
 2786              		.loc 1 1945 0
 2787 007e 3B6A     		ldr	r3, [r7, #32]
 2788 0080 002B     		cmp	r3, #0
 2789 0082 01D0     		beq	.L172
 2790              		.loc 1 1945 0 is_stmt 0 discriminator 1
 2791 0084 3B6A     		ldr	r3, [r7, #32]
 2792 0086 00E0     		b	.L173
 2793              	.L172:
 2794              		.loc 1 1945 0 discriminator 2
 2795 0088 0123     		mov	r3, #1
 2796              	.L173:
 2797              		.loc 1 1945 0 discriminator 4
 2798 008a 3B62     		str	r3, [r7, #32]
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
 2799              		.loc 1 1948 0 is_stmt 1 discriminator 4
 2800 008c BB68     		ldr	r3, [r7, #8]
 2801 008e 181C     		mov	r0, r3
 2802 0090 FA23     		mov	r3, #250
 2803 0092 9900     		lsl	r1, r3, #2
 2804 0094 FFF7FEFF 		bl	__aeabi_uidiv
 2805 0098 031C     		mov	r3, r0
 2806 009a FB61     		str	r3, [r7, #28]
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
 2807              		.loc 1 1949 0 discriminator 4
 2808 009c FB69     		ldr	r3, [r7, #28]
 2809 009e 402B     		cmp	r3, #64
 2810 00a0 00D9     		bls	.L174
 2811 00a2 4023     		mov	r3, #64
 2812              	.L174:
 2813 00a4 FB61     		str	r3, [r7, #28]
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
 2814              		.loc 1 1951 0 discriminator 4
 2815 00a6 3A6A     		ldr	r2, [r7, #32]
 2816 00a8 FB69     		ldr	r3, [r7, #28]
 2817 00aa 9A42     		cmp	r2, r3
 2818 00ac 51D8     		bhi	.L171
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
 2819              		.loc 1 1953 0
 2820 00ae 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 85


 2821 00b0 FB62     		str	r3, [r7, #44]
 2822 00b2 31E0     		b	.L175
 2823              	.L178:
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
 2824              		.loc 1 1958 0
 2825 00b4 7B68     		ldr	r3, [r7, #4]
 2826 00b6 FA6A     		ldr	r2, [r7, #44]
 2827 00b8 5A43     		mul	r2, r3
 2828 00ba BB68     		ldr	r3, [r7, #8]
 2829 00bc 5B08     		lsr	r3, r3, #1
 2830 00be D318     		add	r3, r2, r3
 2831 00c0 181C     		mov	r0, r3
 2832 00c2 B968     		ldr	r1, [r7, #8]
 2833 00c4 FFF7FEFF 		bl	__aeabi_uidiv
 2834 00c8 031C     		mov	r3, r0
 2835 00ca BB61     		str	r3, [r7, #24]
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
 2836              		.loc 1 1961 0
 2837 00cc BB68     		ldr	r3, [r7, #8]
 2838 00ce BA69     		ldr	r2, [r7, #24]
 2839 00d0 5343     		mul	r3, r2
 2840 00d2 181C     		mov	r0, r3
 2841 00d4 F96A     		ldr	r1, [r7, #44]
 2842 00d6 FFF7FEFF 		bl	__aeabi_uidiv
 2843 00da 031C     		mov	r3, r0
 2844 00dc 7B61     		str	r3, [r7, #20]
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
 2845              		.loc 1 1964 0
 2846 00de 7A69     		ldr	r2, [r7, #20]
 2847 00e0 7B68     		ldr	r3, [r7, #4]
 2848 00e2 D31A     		sub	r3, r2, r3
 2849 00e4 214A     		ldr	r2, .L180+16
 2850 00e6 5A43     		mul	r2, r3
 2851 00e8 7B68     		ldr	r3, [r7, #4]
 2852 00ea 101C     		mov	r0, r2
 2853 00ec 191C     		mov	r1, r3
 2854 00ee FFF7FEFF 		bl	__aeabi_idiv
 2855 00f2 031C     		mov	r3, r0
 2856 00f4 3B61     		str	r3, [r7, #16]
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
 2857              		.loc 1 1967 0
 2858 00f6 3B6C     		ldr	r3, [r7, #64]
 2859 00f8 5A42     		neg	r2, r3
 2860 00fa 3B69     		ldr	r3, [r7, #16]
 2861 00fc 9A42     		cmp	r2, r3
 2862 00fe 08DC     		bgt	.L176
 2863              		.loc 1 1967 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 86


 2864 0100 3A6C     		ldr	r2, [r7, #64]
 2865 0102 3B69     		ldr	r3, [r7, #16]
 2866 0104 9A42     		cmp	r2, r3
 2867 0106 04DB     		blt	.L176
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
 2868              		.loc 1 1969 0 is_stmt 1
 2869 0108 FB6A     		ldr	r3, [r7, #44]
 2870 010a 7B63     		str	r3, [r7, #52]
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
 2871              		.loc 1 1970 0
 2872 010c BB69     		ldr	r3, [r7, #24]
 2873 010e 3B63     		str	r3, [r7, #48]
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
 2874              		.loc 1 1971 0
 2875 0110 06E0     		b	.L177
 2876              	.L176:
1953:Generated_Source\PSoC4/CyLib.c ****                 {
 2877              		.loc 1 1953 0 discriminator 2
 2878 0112 FB6A     		ldr	r3, [r7, #44]
 2879 0114 0133     		add	r3, r3, #1
 2880 0116 FB62     		str	r3, [r7, #44]
 2881              	.L175:
1953:Generated_Source\PSoC4/CyLib.c ****                 {
 2882              		.loc 1 1953 0 is_stmt 0 discriminator 1
 2883 0118 FA6A     		ldr	r2, [r7, #44]
 2884 011a FB69     		ldr	r3, [r7, #28]
 2885 011c 9A42     		cmp	r2, r3
 2886 011e C9D9     		bls	.L178
 2887              	.L177:
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
 2888              		.loc 1 1976 0 is_stmt 1
 2889 0120 3B6B     		ldr	r3, [r7, #48]
 2890 0122 002B     		cmp	r3, #0
 2891 0124 15D0     		beq	.L171
 2892              		.loc 1 1976 0 is_stmt 0 discriminator 1
 2893 0126 7B6B     		ldr	r3, [r7, #52]
 2894 0128 002B     		cmp	r3, #0
 2895 012a 12D0     		beq	.L171
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
 2896              		.loc 1 1978 0 is_stmt 1
 2897 012c F968     		ldr	r1, [r7, #12]
 2898 012e 3A6B     		ldr	r2, [r7, #48]
 2899 0130 7B6B     		ldr	r3, [r7, #52]
 2900 0132 081C     		mov	r0, r1
 2901 0134 111C     		mov	r1, r2
 2902 0136 1A1C     		mov	r2, r3
 2903 0138 0223     		mov	r3, #2
 2904 013a FFF7FEFF 		bl	CySysClkPllSetPQ
 2905 013e 031E     		sub	r3, r0, #0
 2906 0140 07D1     		bne	.L171
1979:Generated_Source\PSoC4/CyLib.c ****                     {
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 87


1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
 2907              		.loc 1 1980 0
 2908 0142 FA68     		ldr	r2, [r7, #12]
 2909 0144 3B68     		ldr	r3, [r7]
 2910 0146 101C     		mov	r0, r2
 2911 0148 191C     		mov	r1, r3
 2912 014a FFF7FEFF 		bl	CySysClkPllSetOutputDivider
 2913 014e 031C     		mov	r3, r0
 2914 0150 BB62     		str	r3, [r7, #40]
 2915              	.L171:
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 2916              		.loc 1 1987 0
 2917 0152 BB6A     		ldr	r3, [r7, #40]
1988:Generated_Source\PSoC4/CyLib.c ****     }
 2918              		.loc 1 1988 0
 2919 0154 181C     		mov	r0, r3
 2920 0156 BD46     		mov	sp, r7
 2921 0158 0EB0     		add	sp, sp, #56
 2922              		@ sp needed
 2923 015a 80BD     		pop	{r7, pc}
 2924              	.L181:
 2925              		.align	2
 2926              	.L180:
 2927 015c E7030000 		.word	999
 2928 0160 E3570000 		.word	22499
 2929 0164 B70B0000 		.word	2999
 2930 0168 B80B0000 		.word	3000
 2931 016c 40420F00 		.word	1000000
 2932              		.cfi_endproc
 2933              	.LFE27:
 2934              		.size	CySysClkPllSetFrequency, .-CySysClkPllSetFrequency
 2935              		.section	.text.CySysClkPllSetSource,"ax",%progbits
 2936              		.align	2
 2937              		.global	CySysClkPllSetSource
 2938              		.code	16
 2939              		.thumb_func
 2940              		.type	CySysClkPllSetSource, %function
 2941              	CySysClkPllSetSource:
 2942              	.LFB28:
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 88


2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
 2943              		.loc 1 2015 0
 2944              		.cfi_startproc
 2945 0000 90B5     		push	{r4, r7, lr}
 2946              		.cfi_def_cfa_offset 12
 2947              		.cfi_offset 4, -12
 2948              		.cfi_offset 7, -8
 2949              		.cfi_offset 14, -4
 2950 0002 85B0     		sub	sp, sp, #20
 2951              		.cfi_def_cfa_offset 32
 2952 0004 00AF     		add	r7, sp, #0
 2953              		.cfi_def_cfa_register 7
 2954 0006 7860     		str	r0, [r7, #4]
 2955 0008 3960     		str	r1, [r7]
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 2956              		.loc 1 2019 0
 2957 000a 0F23     		mov	r3, #15
 2958 000c FC18     		add	r4, r7, r3
 2959 000e FFF7FEFF 		bl	CyEnterCriticalSection
 2960 0012 031C     		mov	r3, r0
 2961 0014 2370     		strb	r3, [r4]
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
 2962              		.loc 1 2021 0
 2963 0016 7B68     		ldr	r3, [r7, #4]
 2964 0018 012B     		cmp	r3, #1
 2965 001a 24D8     		bhi	.L183
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
 2966              		.loc 1 2023 0
 2967 001c 164B     		ldr	r3, .L184
 2968 001e 1968     		ldr	r1, [r3]
 2969 0020 7B68     		ldr	r3, [r7, #4]
 2970 0022 5A1C     		add	r2, r3, #1
 2971 0024 131C     		mov	r3, r2
 2972 0026 5B00     		lsl	r3, r3, #1
 2973 0028 9B18     		add	r3, r3, r2
 2974 002a 1A1C     		mov	r2, r3
 2975 002c 0723     		mov	r3, #7
 2976 002e 9340     		lsl	r3, r3, r2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 89


 2977 0030 DB43     		mvn	r3, r3
 2978 0032 0B40     		and	r3, r1
 2979 0034 BB60     		str	r3, [r7, #8]
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
 2980              		.loc 1 2024 0
 2981 0036 7B68     		ldr	r3, [r7, #4]
 2982 0038 5A1C     		add	r2, r3, #1
 2983 003a 131C     		mov	r3, r2
 2984 003c 5B00     		lsl	r3, r3, #1
 2985 003e 9B18     		add	r3, r3, r2
 2986 0040 1A1C     		mov	r2, r3
 2987 0042 3B68     		ldr	r3, [r7]
 2988 0044 9340     		lsl	r3, r3, r2
 2989 0046 191C     		mov	r1, r3
 2990 0048 7B68     		ldr	r3, [r7, #4]
 2991 004a 5A1C     		add	r2, r3, #1
 2992 004c 131C     		mov	r3, r2
 2993 004e 5B00     		lsl	r3, r3, #1
 2994 0050 9B18     		add	r3, r3, r2
 2995 0052 1A1C     		mov	r2, r3
 2996 0054 0723     		mov	r3, #7
 2997 0056 9340     		lsl	r3, r3, r2
 2998 0058 0B40     		and	r3, r1
 2999 005a BA68     		ldr	r2, [r7, #8]
 3000 005c 1343     		orr	r3, r2
 3001 005e BB60     		str	r3, [r7, #8]
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
 3002              		.loc 1 2025 0
 3003 0060 054B     		ldr	r3, .L184
 3004 0062 BA68     		ldr	r2, [r7, #8]
 3005 0064 1A60     		str	r2, [r3]
 3006              	.L183:
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 3007              		.loc 1 2028 0
 3008 0066 0F23     		mov	r3, #15
 3009 0068 FB18     		add	r3, r7, r3
 3010 006a 1B78     		ldrb	r3, [r3]
 3011 006c 181C     		mov	r0, r3
 3012 006e FFF7FEFF 		bl	CyExitCriticalSection
2029:Generated_Source\PSoC4/CyLib.c ****     }
 3013              		.loc 1 2029 0
 3014 0072 BD46     		mov	sp, r7
 3015 0074 05B0     		add	sp, sp, #20
 3016              		@ sp needed
 3017 0076 90BD     		pop	{r4, r7, pc}
 3018              	.L185:
 3019              		.align	2
 3020              	.L184:
 3021 0078 00010B40 		.word	1074462976
 3022              		.cfi_endproc
 3023              	.LFE28:
 3024              		.size	CySysClkPllSetSource, .-CySysClkPllSetSource
 3025              		.section	.text.CySysClkPllSetOutputDivider,"ax",%progbits
 3026              		.align	2
 3027              		.global	CySysClkPllSetOutputDivider
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 90


 3028              		.code	16
 3029              		.thumb_func
 3030              		.type	CySysClkPllSetOutputDivider, %function
 3031              	CySysClkPllSetOutputDivider:
 3032              	.LFB29:
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
 3033              		.loc 1 2059 0
 3034              		.cfi_startproc
 3035 0000 90B5     		push	{r4, r7, lr}
 3036              		.cfi_def_cfa_offset 12
 3037              		.cfi_offset 4, -12
 3038              		.cfi_offset 7, -8
 3039              		.cfi_offset 14, -4
 3040 0002 87B0     		sub	sp, sp, #28
 3041              		.cfi_def_cfa_offset 40
 3042 0004 00AF     		add	r7, sp, #0
 3043              		.cfi_def_cfa_register 7
 3044 0006 7860     		str	r0, [r7, #4]
 3045 0008 3960     		str	r1, [r7]
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
 3046              		.loc 1 2062 0
 3047 000a 0123     		mov	r3, #1
 3048 000c 7B61     		str	r3, [r7, #20]
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 91


2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 3049              		.loc 1 2066 0
 3050 000e 1323     		mov	r3, #19
 3051 0010 FC18     		add	r4, r7, r3
 3052 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 3053 0016 031C     		mov	r3, r0
 3054 0018 2370     		strb	r3, [r4]
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
 3055              		.loc 1 2068 0
 3056 001a 7B68     		ldr	r3, [r7, #4]
 3057 001c 181C     		mov	r0, r3
 3058 001e FFF7FEFF 		bl	CySysClkPllConfigChangeAllowed
 3059 0022 031C     		mov	r3, r0
 3060 0024 FB60     		str	r3, [r7, #12]
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
 3061              		.loc 1 2070 0
 3062 0026 7B68     		ldr	r3, [r7, #4]
 3063 0028 012B     		cmp	r3, #1
 3064 002a 20D8     		bhi	.L187
 3065              		.loc 1 2070 0 is_stmt 0 discriminator 1
 3066 002c FB68     		ldr	r3, [r7, #12]
 3067 002e 002B     		cmp	r3, #0
 3068 0030 1DD1     		bne	.L187
 3069              		.loc 1 2070 0 discriminator 2
 3070 0032 3B68     		ldr	r3, [r7]
 3071 0034 032B     		cmp	r3, #3
 3072 0036 1AD8     		bhi	.L187
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
 3073              		.loc 1 2072 0 is_stmt 1
 3074 0038 1249     		ldr	r1, .L189
 3075 003a 7A68     		ldr	r2, [r7, #4]
 3076 003c 131C     		mov	r3, r2
 3077 003e 5B00     		lsl	r3, r3, #1
 3078 0040 9B18     		add	r3, r3, r2
 3079 0042 9B00     		lsl	r3, r3, #2
 3080 0044 5B58     		ldr	r3, [r3, r1]
 3081 0046 104A     		ldr	r2, .L189+4
 3082 0048 1340     		and	r3, r2
 3083 004a BB60     		str	r3, [r7, #8]
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
 3084              		.loc 1 2073 0
 3085 004c 3B68     		ldr	r3, [r7]
 3086 004e 9B03     		lsl	r3, r3, #14
 3087 0050 1B04     		lsl	r3, r3, #16
 3088 0052 1B0C     		lsr	r3, r3, #16
 3089 0054 BA68     		ldr	r2, [r7, #8]
 3090 0056 1343     		orr	r3, r2
 3091 0058 BB60     		str	r3, [r7, #8]
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
 3092              		.loc 1 2075 0
 3093 005a 0A49     		ldr	r1, .L189
 3094 005c 7A68     		ldr	r2, [r7, #4]
 3095 005e 131C     		mov	r3, r2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 92


 3096 0060 5B00     		lsl	r3, r3, #1
 3097 0062 9B18     		add	r3, r3, r2
 3098 0064 9B00     		lsl	r3, r3, #2
 3099 0066 BA68     		ldr	r2, [r7, #8]
 3100 0068 5A50     		str	r2, [r3, r1]
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
 3101              		.loc 1 2077 0
 3102 006a 0023     		mov	r3, #0
 3103 006c 7B61     		str	r3, [r7, #20]
 3104              	.L187:
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 3105              		.loc 1 2080 0
 3106 006e 1323     		mov	r3, #19
 3107 0070 FB18     		add	r3, r7, r3
 3108 0072 1B78     		ldrb	r3, [r3]
 3109 0074 181C     		mov	r0, r3
 3110 0076 FFF7FEFF 		bl	CyExitCriticalSection
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
 3111              		.loc 1 2082 0
 3112 007a 7B69     		ldr	r3, [r7, #20]
2083:Generated_Source\PSoC4/CyLib.c ****     }
 3113              		.loc 1 2083 0
 3114 007c 181C     		mov	r0, r3
 3115 007e BD46     		mov	sp, r7
 3116 0080 07B0     		add	sp, sp, #28
 3117              		@ sp needed
 3118 0082 90BD     		pop	{r4, r7, pc}
 3119              	.L190:
 3120              		.align	2
 3121              	.L189:
 3122 0084 14000C40 		.word	1074528276
 3123 0088 FF3FFFFF 		.word	-49153
 3124              		.cfi_endproc
 3125              	.LFE29:
 3126              		.size	CySysClkPllSetOutputDivider, .-CySysClkPllSetOutputDivider
 3127              		.section	.text.CySysLvdEnable,"ax",%progbits
 3128              		.align	2
 3129              		.global	CySysLvdEnable
 3130              		.code	16
 3131              		.thumb_func
 3132              		.type	CySysLvdEnable, %function
 3133              	CySysLvdEnable:
 3134              	.LFB30:
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 93


2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
 3135              		.loc 1 2119 0
 3136              		.cfi_startproc
 3137 0000 80B5     		push	{r7, lr}
 3138              		.cfi_def_cfa_offset 8
 3139              		.cfi_offset 7, -8
 3140              		.cfi_offset 14, -4
 3141 0002 82B0     		sub	sp, sp, #8
 3142              		.cfi_def_cfa_offset 16
 3143 0004 00AF     		add	r7, sp, #0
 3144              		.cfi_def_cfa_register 7
 3145 0006 7860     		str	r0, [r7, #4]
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 3146              		.loc 1 2121 0
 3147 0008 134B     		ldr	r3, .L192
 3148 000a 134A     		ldr	r2, .L192
 3149 000c 1268     		ldr	r2, [r2]
 3150 000e 0221     		mov	r1, #2
 3151 0010 8A43     		bic	r2, r1
 3152 0012 1A60     		str	r2, [r3]
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 3153              		.loc 1 2124 0
 3154 0014 114B     		ldr	r3, .L192+4
 3155 0016 114A     		ldr	r2, .L192+4
 3156 0018 1268     		ldr	r2, [r2]
 3157 001a 1E21     		mov	r1, #30
 3158 001c 8A43     		bic	r2, r1
 3159 001e 111C     		mov	r1, r2
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 94


 3160              		.loc 1 2125 0
 3161 0020 7A68     		ldr	r2, [r7, #4]
 3162 0022 5200     		lsl	r2, r2, #1
 3163 0024 1E20     		mov	r0, #30
 3164 0026 0240     		and	r2, r0
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 3165              		.loc 1 2124 0
 3166 0028 0A43     		orr	r2, r1
 3167 002a 1A60     		str	r2, [r3]
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 3168              		.loc 1 2128 0
 3169 002c 0B4B     		ldr	r3, .L192+4
 3170 002e 0B4A     		ldr	r2, .L192+4
 3171 0030 1268     		ldr	r2, [r2]
 3172 0032 0121     		mov	r1, #1
 3173 0034 0A43     		orr	r2, r1
 3174 0036 1A60     		str	r2, [r3]
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 3175              		.loc 1 2131 0
 3176 0038 FA23     		mov	r3, #250
 3177 003a 9B00     		lsl	r3, r3, #2
 3178 003c 181C     		mov	r0, r3
 3179 003e FFF7FEFF 		bl	CyDelayUs
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 3180              		.loc 1 2134 0
 3181 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 3182              		.loc 1 2137 0
 3183 0046 044B     		ldr	r3, .L192
 3184 0048 034A     		ldr	r2, .L192
 3185 004a 1268     		ldr	r2, [r2]
 3186 004c 0221     		mov	r1, #2
 3187 004e 0A43     		orr	r2, r1
 3188 0050 1A60     		str	r2, [r3]
2138:Generated_Source\PSoC4/CyLib.c ****     }
 3189              		.loc 1 2138 0
 3190 0052 BD46     		mov	sp, r7
 3191 0054 02B0     		add	sp, sp, #8
 3192              		@ sp needed
 3193 0056 80BD     		pop	{r7, pc}
 3194              	.L193:
 3195              		.align	2
 3196              	.L192:
 3197 0058 08000B40 		.word	1074462728
 3198 005c 18000B40 		.word	1074462744
 3199              		.cfi_endproc
 3200              	.LFE30:
 3201              		.size	CySysLvdEnable, .-CySysLvdEnable
 3202              		.section	.text.CySysLvdDisable,"ax",%progbits
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 95


 3203              		.align	2
 3204              		.global	CySysLvdDisable
 3205              		.code	16
 3206              		.thumb_func
 3207              		.type	CySysLvdDisable, %function
 3208              	CySysLvdDisable:
 3209              	.LFB31:
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 3210              		.loc 1 2149 0
 3211              		.cfi_startproc
 3212 0000 80B5     		push	{r7, lr}
 3213              		.cfi_def_cfa_offset 8
 3214              		.cfi_offset 7, -8
 3215              		.cfi_offset 14, -4
 3216 0002 00AF     		add	r7, sp, #0
 3217              		.cfi_def_cfa_register 7
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 3218              		.loc 1 2150 0
 3219 0004 064B     		ldr	r3, .L195
 3220 0006 064A     		ldr	r2, .L195
 3221 0008 1268     		ldr	r2, [r2]
 3222 000a 0221     		mov	r1, #2
 3223 000c 8A43     		bic	r2, r1
 3224 000e 1A60     		str	r2, [r3]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 3225              		.loc 1 2151 0
 3226 0010 044B     		ldr	r3, .L195+4
 3227 0012 044A     		ldr	r2, .L195+4
 3228 0014 1268     		ldr	r2, [r2]
 3229 0016 0121     		mov	r1, #1
 3230 0018 8A43     		bic	r2, r1
 3231 001a 1A60     		str	r2, [r3]
2152:Generated_Source\PSoC4/CyLib.c ****     }
 3232              		.loc 1 2152 0
 3233 001c BD46     		mov	sp, r7
 3234              		@ sp needed
 3235 001e 80BD     		pop	{r7, pc}
 3236              	.L196:
 3237              		.align	2
 3238              	.L195:
 3239 0020 08000B40 		.word	1074462728
 3240 0024 18000B40 		.word	1074462744
 3241              		.cfi_endproc
 3242              	.LFE31:
 3243              		.size	CySysLvdDisable, .-CySysLvdDisable
 3244              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 3245              		.align	2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 96


 3246              		.global	CySysLvdGetInterruptSource
 3247              		.code	16
 3248              		.thumb_func
 3249              		.type	CySysLvdGetInterruptSource, %function
 3250              	CySysLvdGetInterruptSource:
 3251              	.LFB32:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 3252              		.loc 1 2167 0
 3253              		.cfi_startproc
 3254 0000 80B5     		push	{r7, lr}
 3255              		.cfi_def_cfa_offset 8
 3256              		.cfi_offset 7, -8
 3257              		.cfi_offset 14, -4
 3258 0002 00AF     		add	r7, sp, #0
 3259              		.cfi_def_cfa_register 7
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 3260              		.loc 1 2168 0
 3261 0004 034B     		ldr	r3, .L199
 3262 0006 1B68     		ldr	r3, [r3]
 3263 0008 0222     		mov	r2, #2
 3264 000a 1340     		and	r3, r2
2169:Generated_Source\PSoC4/CyLib.c ****     }
 3265              		.loc 1 2169 0
 3266 000c 181C     		mov	r0, r3
 3267 000e BD46     		mov	sp, r7
 3268              		@ sp needed
 3269 0010 80BD     		pop	{r7, pc}
 3270              	.L200:
 3271 0012 C046     		.align	2
 3272              	.L199:
 3273 0014 04000B40 		.word	1074462724
 3274              		.cfi_endproc
 3275              	.LFE32:
 3276              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 3277              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 3278              		.align	2
 3279              		.global	CySysLvdClearInterrupt
 3280              		.code	16
 3281              		.thumb_func
 3282              		.type	CySysLvdClearInterrupt, %function
 3283              	CySysLvdClearInterrupt:
 3284              	.LFB33:
2170:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 97


2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 3285              		.loc 1 2183 0
 3286              		.cfi_startproc
 3287 0000 80B5     		push	{r7, lr}
 3288              		.cfi_def_cfa_offset 8
 3289              		.cfi_offset 7, -8
 3290              		.cfi_offset 14, -4
 3291 0002 00AF     		add	r7, sp, #0
 3292              		.cfi_def_cfa_register 7
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 3293              		.loc 1 2184 0
 3294 0004 024B     		ldr	r3, .L202
 3295 0006 0222     		mov	r2, #2
 3296 0008 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c ****     }
 3297              		.loc 1 2185 0
 3298 000a BD46     		mov	sp, r7
 3299              		@ sp needed
 3300 000c 80BD     		pop	{r7, pc}
 3301              	.L203:
 3302 000e C046     		.align	2
 3303              	.L202:
 3304 0010 04000B40 		.word	1074462724
 3305              		.cfi_endproc
 3306              	.LFE33:
 3307              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 3308              		.section	.text.CySysGetResetReason,"ax",%progbits
 3309              		.align	2
 3310              		.global	CySysGetResetReason
 3311              		.code	16
 3312              		.thumb_func
 3313              		.type	CySysGetResetReason, %function
 3314              	CySysGetResetReason:
 3315              	.LFB34:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 98


2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 3316              		.loc 1 2209 0
 3317              		.cfi_startproc
 3318 0000 80B5     		push	{r7, lr}
 3319              		.cfi_def_cfa_offset 8
 3320              		.cfi_offset 7, -8
 3321              		.cfi_offset 14, -4
 3322 0002 84B0     		sub	sp, sp, #16
 3323              		.cfi_def_cfa_offset 24
 3324 0004 00AF     		add	r7, sp, #0
 3325              		.cfi_def_cfa_register 7
 3326 0006 7860     		str	r0, [r7, #4]
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 3327              		.loc 1 2212 0
 3328 0008 7B68     		ldr	r3, [r7, #4]
 3329 000a 1922     		mov	r2, #25
 3330 000c 1340     		and	r3, r2
 3331 000e 7B60     		str	r3, [r7, #4]
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 3332              		.loc 1 2213 0
 3333 0010 064B     		ldr	r3, .L206
 3334 0012 1B68     		ldr	r3, [r3]
 3335 0014 1922     		mov	r2, #25
 3336 0016 1340     		and	r3, r2
 3337 0018 FB60     		str	r3, [r7, #12]
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 3338              		.loc 1 2215 0
 3339 001a 044B     		ldr	r3, .L206
 3340 001c 7A68     		ldr	r2, [r7, #4]
 3341 001e 1A60     		str	r2, [r3]
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 3342              		.loc 1 2217 0
 3343 0020 FB68     		ldr	r3, [r7, #12]
2218:Generated_Source\PSoC4/CyLib.c **** }
 3344              		.loc 1 2218 0
 3345 0022 181C     		mov	r0, r3
 3346 0024 BD46     		mov	sp, r7
 3347 0026 04B0     		add	sp, sp, #16
 3348              		@ sp needed
 3349 0028 80BD     		pop	{r7, pc}
 3350              	.L207:
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 99


 3351 002a C046     		.align	2
 3352              	.L206:
 3353 002c 00030B40 		.word	1074463488
 3354              		.cfi_endproc
 3355              	.LFE34:
 3356              		.size	CySysGetResetReason, .-CySysGetResetReason
 3357              		.section	.text.CyDisableInts,"ax",%progbits
 3358              		.align	2
 3359              		.global	CyDisableInts
 3360              		.code	16
 3361              		.thumb_func
 3362              		.type	CyDisableInts, %function
 3363              	CyDisableInts:
 3364              	.LFB35:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 3365              		.loc 1 2232 0
 3366              		.cfi_startproc
 3367 0000 80B5     		push	{r7, lr}
 3368              		.cfi_def_cfa_offset 8
 3369              		.cfi_offset 7, -8
 3370              		.cfi_offset 14, -4
 3371 0002 82B0     		sub	sp, sp, #8
 3372              		.cfi_def_cfa_offset 16
 3373 0004 00AF     		add	r7, sp, #0
 3374              		.cfi_def_cfa_register 7
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 3375              		.loc 1 2236 0
 3376 0006 064B     		ldr	r3, .L210
 3377 0008 1B68     		ldr	r3, [r3]
 3378 000a 7B60     		str	r3, [r7, #4]
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 3379              		.loc 1 2239 0
 3380 000c 044B     		ldr	r3, .L210
 3381 000e 0122     		mov	r2, #1
 3382 0010 5242     		neg	r2, r2
 3383 0012 1A60     		str	r2, [r3]
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 3384              		.loc 1 2241 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 100


 3385 0014 7B68     		ldr	r3, [r7, #4]
2242:Generated_Source\PSoC4/CyLib.c **** }
 3386              		.loc 1 2242 0
 3387 0016 181C     		mov	r0, r3
 3388 0018 BD46     		mov	sp, r7
 3389 001a 02B0     		add	sp, sp, #8
 3390              		@ sp needed
 3391 001c 80BD     		pop	{r7, pc}
 3392              	.L211:
 3393 001e C046     		.align	2
 3394              	.L210:
 3395 0020 80E100E0 		.word	-536813184
 3396              		.cfi_endproc
 3397              	.LFE35:
 3398              		.size	CyDisableInts, .-CyDisableInts
 3399              		.section	.text.CyEnableInts,"ax",%progbits
 3400              		.align	2
 3401              		.global	CyEnableInts
 3402              		.code	16
 3403              		.thumb_func
 3404              		.type	CyEnableInts, %function
 3405              	CyEnableInts:
 3406              	.LFB36:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 3407              		.loc 1 2255 0
 3408              		.cfi_startproc
 3409 0000 80B5     		push	{r7, lr}
 3410              		.cfi_def_cfa_offset 8
 3411              		.cfi_offset 7, -8
 3412              		.cfi_offset 14, -4
 3413 0002 82B0     		sub	sp, sp, #8
 3414              		.cfi_def_cfa_offset 16
 3415 0004 00AF     		add	r7, sp, #0
 3416              		.cfi_def_cfa_register 7
 3417 0006 7860     		str	r0, [r7, #4]
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 3418              		.loc 1 2256 0
 3419 0008 024B     		ldr	r3, .L213
 3420 000a 7A68     		ldr	r2, [r7, #4]
 3421 000c 1A60     		str	r2, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** }
 3422              		.loc 1 2257 0
 3423 000e BD46     		mov	sp, r7
 3424 0010 02B0     		add	sp, sp, #8
 3425              		@ sp needed
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 101


 3426 0012 80BD     		pop	{r7, pc}
 3427              	.L214:
 3428              		.align	2
 3429              	.L213:
 3430 0014 00E100E0 		.word	-536813312
 3431              		.cfi_endproc
 3432              	.LFE36:
 3433              		.size	CyEnableInts, .-CyEnableInts
 3434              		.section	.text.CyIntSetSysVector,"ax",%progbits
 3435              		.align	2
 3436              		.global	CyIntSetSysVector
 3437              		.code	16
 3438              		.thumb_func
 3439              		.type	CyIntSetSysVector, %function
 3440              	CyIntSetSysVector:
 3441              	.LFB37:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 3442              		.loc 1 2280 0
 3443              		.cfi_startproc
 3444 0000 80B5     		push	{r7, lr}
 3445              		.cfi_def_cfa_offset 8
 3446              		.cfi_offset 7, -8
 3447              		.cfi_offset 14, -4
 3448 0002 84B0     		sub	sp, sp, #16
 3449              		.cfi_def_cfa_offset 24
 3450 0004 00AF     		add	r7, sp, #0
 3451              		.cfi_def_cfa_register 7
 3452 0006 021C     		mov	r2, r0
 3453 0008 3960     		str	r1, [r7]
 3454 000a FB1D     		add	r3, r7, #7
 3455 000c 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3456              		.loc 1 2282 0
 3457 000e 8023     		mov	r3, #128
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 102


 3458 0010 9B05     		lsl	r3, r3, #22
 3459 0012 FB60     		str	r3, [r7, #12]
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 3460              		.loc 1 2284 0
 3461 0014 FB1D     		add	r3, r7, #7
 3462 0016 1B78     		ldrb	r3, [r3]
 3463 0018 0F2B     		cmp	r3, #15
 3464 001a 02D9     		bls	.L216
 3465              		.loc 1 2284 0 is_stmt 0 discriminator 1
 3466 001c 0020     		mov	r0, #0
 3467 001e FFF7FEFF 		bl	CyHalt
 3468              	.L216:
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 3469              		.loc 1 2287 0 is_stmt 1
 3470 0022 FB1D     		add	r3, r7, #7
 3471 0024 1B78     		ldrb	r3, [r3]
 3472 0026 9B00     		lsl	r3, r3, #2
 3473 0028 FA68     		ldr	r2, [r7, #12]
 3474 002a D318     		add	r3, r2, r3
 3475 002c 1B68     		ldr	r3, [r3]
 3476 002e BB60     		str	r3, [r7, #8]
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 3477              		.loc 1 2290 0
 3478 0030 FB1D     		add	r3, r7, #7
 3479 0032 1B78     		ldrb	r3, [r3]
 3480 0034 9B00     		lsl	r3, r3, #2
 3481 0036 FA68     		ldr	r2, [r7, #12]
 3482 0038 D318     		add	r3, r2, r3
 3483 003a 3A68     		ldr	r2, [r7]
 3484 003c 1A60     		str	r2, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 3485              		.loc 1 2292 0
 3486 003e BB68     		ldr	r3, [r7, #8]
2293:Generated_Source\PSoC4/CyLib.c **** }
 3487              		.loc 1 2293 0
 3488 0040 181C     		mov	r0, r3
 3489 0042 BD46     		mov	sp, r7
 3490 0044 04B0     		add	sp, sp, #16
 3491              		@ sp needed
 3492 0046 80BD     		pop	{r7, pc}
 3493              		.cfi_endproc
 3494              	.LFE37:
 3495              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 3496              		.section	.text.CyIntGetSysVector,"ax",%progbits
 3497              		.align	2
 3498              		.global	CyIntGetSysVector
 3499              		.code	16
 3500              		.thumb_func
 3501              		.type	CyIntGetSysVector, %function
 3502              	CyIntGetSysVector:
 3503              	.LFB38:
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 103


2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 3504              		.loc 1 2314 0
 3505              		.cfi_startproc
 3506 0000 80B5     		push	{r7, lr}
 3507              		.cfi_def_cfa_offset 8
 3508              		.cfi_offset 7, -8
 3509              		.cfi_offset 14, -4
 3510 0002 84B0     		sub	sp, sp, #16
 3511              		.cfi_def_cfa_offset 24
 3512 0004 00AF     		add	r7, sp, #0
 3513              		.cfi_def_cfa_register 7
 3514 0006 021C     		mov	r2, r0
 3515 0008 FB1D     		add	r3, r7, #7
 3516 000a 1A70     		strb	r2, [r3]
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3517              		.loc 1 2315 0
 3518 000c 8023     		mov	r3, #128
 3519 000e 9B05     		lsl	r3, r3, #22
 3520 0010 FB60     		str	r3, [r7, #12]
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 3521              		.loc 1 2317 0
 3522 0012 FB1D     		add	r3, r7, #7
 3523 0014 1B78     		ldrb	r3, [r3]
 3524 0016 0F2B     		cmp	r3, #15
 3525 0018 02D9     		bls	.L219
 3526              		.loc 1 2317 0 is_stmt 0 discriminator 1
 3527 001a 0020     		mov	r0, #0
 3528 001c FFF7FEFF 		bl	CyHalt
 3529              	.L219:
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 3530              		.loc 1 2319 0 is_stmt 1
 3531 0020 FB1D     		add	r3, r7, #7
 3532 0022 1B78     		ldrb	r3, [r3]
 3533 0024 9B00     		lsl	r3, r3, #2
 3534 0026 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 104


 3535 0028 D318     		add	r3, r2, r3
 3536 002a 1B68     		ldr	r3, [r3]
2320:Generated_Source\PSoC4/CyLib.c **** }
 3537              		.loc 1 2320 0
 3538 002c 181C     		mov	r0, r3
 3539 002e BD46     		mov	sp, r7
 3540 0030 04B0     		add	sp, sp, #16
 3541              		@ sp needed
 3542 0032 80BD     		pop	{r7, pc}
 3543              		.cfi_endproc
 3544              	.LFE38:
 3545              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 3546              		.section	.text.CyIntSetVector,"ax",%progbits
 3547              		.align	2
 3548              		.global	CyIntSetVector
 3549              		.code	16
 3550              		.thumb_func
 3551              		.type	CyIntSetVector, %function
 3552              	CyIntSetVector:
 3553              	.LFB39:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 3554              		.loc 1 2336 0
 3555              		.cfi_startproc
 3556 0000 80B5     		push	{r7, lr}
 3557              		.cfi_def_cfa_offset 8
 3558              		.cfi_offset 7, -8
 3559              		.cfi_offset 14, -4
 3560 0002 84B0     		sub	sp, sp, #16
 3561              		.cfi_def_cfa_offset 24
 3562 0004 00AF     		add	r7, sp, #0
 3563              		.cfi_def_cfa_register 7
 3564 0006 021C     		mov	r2, r0
 3565 0008 3960     		str	r1, [r7]
 3566 000a FB1D     		add	r3, r7, #7
 3567 000c 1A70     		strb	r2, [r3]
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3568              		.loc 1 2338 0
 3569 000e 8023     		mov	r3, #128
 3570 0010 9B05     		lsl	r3, r3, #22
 3571 0012 FB60     		str	r3, [r7, #12]
2339:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 105


2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 3572              		.loc 1 2340 0
 3573 0014 FB1D     		add	r3, r7, #7
 3574 0016 1B78     		ldrb	r3, [r3]
 3575 0018 1F2B     		cmp	r3, #31
 3576 001a 02D9     		bls	.L222
 3577              		.loc 1 2340 0 is_stmt 0 discriminator 1
 3578 001c 0020     		mov	r0, #0
 3579 001e FFF7FEFF 		bl	CyHalt
 3580              	.L222:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 3581              		.loc 1 2343 0 is_stmt 1
 3582 0022 FB1D     		add	r3, r7, #7
 3583 0024 1B78     		ldrb	r3, [r3]
 3584 0026 1033     		add	r3, r3, #16
 3585 0028 9B00     		lsl	r3, r3, #2
 3586 002a FA68     		ldr	r2, [r7, #12]
 3587 002c D318     		add	r3, r2, r3
 3588 002e 1B68     		ldr	r3, [r3]
 3589 0030 BB60     		str	r3, [r7, #8]
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 3590              		.loc 1 2346 0
 3591 0032 FB1D     		add	r3, r7, #7
 3592 0034 1B78     		ldrb	r3, [r3]
 3593 0036 1033     		add	r3, r3, #16
 3594 0038 9B00     		lsl	r3, r3, #2
 3595 003a FA68     		ldr	r2, [r7, #12]
 3596 003c D318     		add	r3, r2, r3
 3597 003e 3A68     		ldr	r2, [r7]
 3598 0040 1A60     		str	r2, [r3]
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 3599              		.loc 1 2348 0
 3600 0042 BB68     		ldr	r3, [r7, #8]
2349:Generated_Source\PSoC4/CyLib.c **** }
 3601              		.loc 1 2349 0
 3602 0044 181C     		mov	r0, r3
 3603 0046 BD46     		mov	sp, r7
 3604 0048 04B0     		add	sp, sp, #16
 3605              		@ sp needed
 3606 004a 80BD     		pop	{r7, pc}
 3607              		.cfi_endproc
 3608              	.LFE39:
 3609              		.size	CyIntSetVector, .-CyIntSetVector
 3610              		.section	.text.CyIntGetVector,"ax",%progbits
 3611              		.align	2
 3612              		.global	CyIntGetVector
 3613              		.code	16
 3614              		.thumb_func
 3615              		.type	CyIntGetVector, %function
 3616              	CyIntGetVector:
 3617              	.LFB40:
2350:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 106


2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 3618              		.loc 1 2364 0
 3619              		.cfi_startproc
 3620 0000 80B5     		push	{r7, lr}
 3621              		.cfi_def_cfa_offset 8
 3622              		.cfi_offset 7, -8
 3623              		.cfi_offset 14, -4
 3624 0002 84B0     		sub	sp, sp, #16
 3625              		.cfi_def_cfa_offset 24
 3626 0004 00AF     		add	r7, sp, #0
 3627              		.cfi_def_cfa_register 7
 3628 0006 021C     		mov	r2, r0
 3629 0008 FB1D     		add	r3, r7, #7
 3630 000a 1A70     		strb	r2, [r3]
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 3631              		.loc 1 2365 0
 3632 000c 8023     		mov	r3, #128
 3633 000e 9B05     		lsl	r3, r3, #22
 3634 0010 FB60     		str	r3, [r7, #12]
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 3635              		.loc 1 2367 0
 3636 0012 FB1D     		add	r3, r7, #7
 3637 0014 1B78     		ldrb	r3, [r3]
 3638 0016 1F2B     		cmp	r3, #31
 3639 0018 02D9     		bls	.L225
 3640              		.loc 1 2367 0 is_stmt 0 discriminator 1
 3641 001a 0020     		mov	r0, #0
 3642 001c FFF7FEFF 		bl	CyHalt
 3643              	.L225:
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 3644              		.loc 1 2369 0 is_stmt 1
 3645 0020 FB1D     		add	r3, r7, #7
 3646 0022 1B78     		ldrb	r3, [r3]
 3647 0024 1033     		add	r3, r3, #16
 3648 0026 9B00     		lsl	r3, r3, #2
 3649 0028 FA68     		ldr	r2, [r7, #12]
 3650 002a D318     		add	r3, r2, r3
 3651 002c 1B68     		ldr	r3, [r3]
2370:Generated_Source\PSoC4/CyLib.c **** }
 3652              		.loc 1 2370 0
 3653 002e 181C     		mov	r0, r3
 3654 0030 BD46     		mov	sp, r7
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 107


 3655 0032 04B0     		add	sp, sp, #16
 3656              		@ sp needed
 3657 0034 80BD     		pop	{r7, pc}
 3658              		.cfi_endproc
 3659              	.LFE40:
 3660              		.size	CyIntGetVector, .-CyIntGetVector
 3661              		.section	.text.CyIntSetPriority,"ax",%progbits
 3662              		.align	2
 3663              		.global	CyIntSetPriority
 3664              		.code	16
 3665              		.thumb_func
 3666              		.type	CyIntSetPriority, %function
 3667              	CyIntSetPriority:
 3668              	.LFB41:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 3669              		.loc 1 2383 0
 3670              		.cfi_startproc
 3671 0000 90B5     		push	{r4, r7, lr}
 3672              		.cfi_def_cfa_offset 12
 3673              		.cfi_offset 4, -12
 3674              		.cfi_offset 7, -8
 3675              		.cfi_offset 14, -4
 3676 0002 87B0     		sub	sp, sp, #28
 3677              		.cfi_def_cfa_offset 40
 3678 0004 00AF     		add	r7, sp, #0
 3679              		.cfi_def_cfa_register 7
 3680 0006 021C     		mov	r2, r0
 3681 0008 FB1D     		add	r3, r7, #7
 3682 000a 1A70     		strb	r2, [r3]
 3683 000c BB1D     		add	r3, r7, #6
 3684 000e 0A1C     		add	r2, r1, #0
 3685 0010 1A70     		strb	r2, [r3]
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 3686              		.loc 1 2388 0
 3687 0012 BB1D     		add	r3, r7, #6
 3688 0014 1B78     		ldrb	r3, [r3]
 3689 0016 032B     		cmp	r3, #3
 3690 0018 02D9     		bls	.L228
 3691              		.loc 1 2388 0 is_stmt 0 discriminator 1
 3692 001a 0020     		mov	r0, #0
 3693 001c FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 108


 3694              	.L228:
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 3695              		.loc 1 2389 0 is_stmt 1
 3696 0020 FB1D     		add	r3, r7, #7
 3697 0022 1B78     		ldrb	r3, [r3]
 3698 0024 1F2B     		cmp	r3, #31
 3699 0026 02D9     		bls	.L229
 3700              		.loc 1 2389 0 is_stmt 0 discriminator 1
 3701 0028 0020     		mov	r0, #0
 3702 002a FFF7FEFF 		bl	CyHalt
 3703              	.L229:
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 3704              		.loc 1 2391 0 is_stmt 1
 3705 002e FB1D     		add	r3, r7, #7
 3706 0030 1B78     		ldrb	r3, [r3]
 3707 0032 0322     		mov	r2, #3
 3708 0034 1340     		and	r3, r2
 3709 0036 DB00     		lsl	r3, r3, #3
 3710 0038 0633     		add	r3, r3, #6
 3711 003a 7B61     		str	r3, [r7, #20]
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 3712              		.loc 1 2393 0
 3713 003c 1323     		mov	r3, #19
 3714 003e FC18     		add	r4, r7, r3
 3715 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 3716 0044 031C     		mov	r3, r0
 3717 0046 2370     		strb	r3, [r4]
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 3718              		.loc 1 2395 0
 3719 0048 FB1D     		add	r3, r7, #7
 3720 004a 1B78     		ldrb	r3, [r3]
 3721 004c 9B08     		lsr	r3, r3, #2
 3722 004e DBB2     		uxtb	r3, r3
 3723 0050 9B00     		lsl	r3, r3, #2
 3724 0052 144A     		ldr	r2, .L230
 3725 0054 9446     		mov	ip, r2
 3726 0056 6344     		add	r3, r3, ip
 3727 0058 1B68     		ldr	r3, [r3]
 3728 005a FB60     		str	r3, [r7, #12]
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 3729              		.loc 1 2396 0
 3730 005c 7B69     		ldr	r3, [r7, #20]
 3731 005e 0322     		mov	r2, #3
 3732 0060 9A40     		lsl	r2, r2, r3
 3733 0062 131C     		mov	r3, r2
 3734 0064 DA43     		mvn	r2, r3
 3735 0066 FB68     		ldr	r3, [r7, #12]
 3736 0068 1340     		and	r3, r2
 3737 006a FB60     		str	r3, [r7, #12]
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 3738              		.loc 1 2397 0
 3739 006c BB1D     		add	r3, r7, #6
 3740 006e 1A78     		ldrb	r2, [r3]
 3741 0070 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 109


 3742 0072 9A40     		lsl	r2, r2, r3
 3743 0074 131C     		mov	r3, r2
 3744 0076 FA68     		ldr	r2, [r7, #12]
 3745 0078 1343     		orr	r3, r2
 3746 007a FB60     		str	r3, [r7, #12]
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 3747              		.loc 1 2398 0
 3748 007c FB1D     		add	r3, r7, #7
 3749 007e 1B78     		ldrb	r3, [r3]
 3750 0080 9B08     		lsr	r3, r3, #2
 3751 0082 DBB2     		uxtb	r3, r3
 3752 0084 9B00     		lsl	r3, r3, #2
 3753 0086 074A     		ldr	r2, .L230
 3754 0088 9446     		mov	ip, r2
 3755 008a 6344     		add	r3, r3, ip
 3756 008c FA68     		ldr	r2, [r7, #12]
 3757 008e 1A60     		str	r2, [r3]
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 3758              		.loc 1 2400 0
 3759 0090 1323     		mov	r3, #19
 3760 0092 FB18     		add	r3, r7, r3
 3761 0094 1B78     		ldrb	r3, [r3]
 3762 0096 181C     		mov	r0, r3
 3763 0098 FFF7FEFF 		bl	CyExitCriticalSection
2401:Generated_Source\PSoC4/CyLib.c **** }
 3764              		.loc 1 2401 0
 3765 009c BD46     		mov	sp, r7
 3766 009e 07B0     		add	sp, sp, #28
 3767              		@ sp needed
 3768 00a0 90BD     		pop	{r4, r7, pc}
 3769              	.L231:
 3770 00a2 C046     		.align	2
 3771              	.L230:
 3772 00a4 00E400E0 		.word	-536812544
 3773              		.cfi_endproc
 3774              	.LFE41:
 3775              		.size	CyIntSetPriority, .-CyIntSetPriority
 3776              		.section	.text.CyIntGetPriority,"ax",%progbits
 3777              		.align	2
 3778              		.global	CyIntGetPriority
 3779              		.code	16
 3780              		.thumb_func
 3781              		.type	CyIntGetPriority, %function
 3782              	CyIntGetPriority:
 3783              	.LFB42:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 110


2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 3784              		.loc 1 2417 0
 3785              		.cfi_startproc
 3786 0000 80B5     		push	{r7, lr}
 3787              		.cfi_def_cfa_offset 8
 3788              		.cfi_offset 7, -8
 3789              		.cfi_offset 14, -4
 3790 0002 84B0     		sub	sp, sp, #16
 3791              		.cfi_def_cfa_offset 24
 3792 0004 00AF     		add	r7, sp, #0
 3793              		.cfi_def_cfa_register 7
 3794 0006 021C     		mov	r2, r0
 3795 0008 FB1D     		add	r3, r7, #7
 3796 000a 1A70     		strb	r2, [r3]
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 3797              		.loc 1 2420 0
 3798 000c FB1D     		add	r3, r7, #7
 3799 000e 1B78     		ldrb	r3, [r3]
 3800 0010 1F2B     		cmp	r3, #31
 3801 0012 02D9     		bls	.L233
 3802              		.loc 1 2420 0 is_stmt 0 discriminator 1
 3803 0014 0020     		mov	r0, #0
 3804 0016 FFF7FEFF 		bl	CyHalt
 3805              	.L233:
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 3806              		.loc 1 2422 0 is_stmt 1
 3807 001a FB1D     		add	r3, r7, #7
 3808 001c 1B78     		ldrb	r3, [r3]
 3809 001e 9B08     		lsr	r3, r3, #2
 3810 0020 DBB2     		uxtb	r3, r3
 3811 0022 9B00     		lsl	r3, r3, #2
 3812 0024 0C4A     		ldr	r2, .L235
 3813 0026 9446     		mov	ip, r2
 3814 0028 6344     		add	r3, r3, ip
 3815 002a 1B68     		ldr	r3, [r3]
 3816 002c FA1D     		add	r2, r7, #7
 3817 002e 1278     		ldrb	r2, [r2]
 3818 0030 0321     		mov	r1, #3
 3819 0032 0A40     		and	r2, r1
 3820 0034 D200     		lsl	r2, r2, #3
 3821 0036 0632     		add	r2, r2, #6
 3822 0038 D340     		lsr	r3, r3, r2
 3823 003a 1A1C     		mov	r2, r3
 3824 003c 0F23     		mov	r3, #15
 3825 003e FB18     		add	r3, r7, r3
 3826 0040 1A70     		strb	r2, [r3]
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 3827              		.loc 1 2424 0
 3828 0042 0F23     		mov	r3, #15
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 111


 3829 0044 FB18     		add	r3, r7, r3
 3830 0046 1B78     		ldrb	r3, [r3]
 3831 0048 0322     		mov	r2, #3
 3832 004a 1340     		and	r3, r2
 3833 004c DBB2     		uxtb	r3, r3
2425:Generated_Source\PSoC4/CyLib.c **** }
 3834              		.loc 1 2425 0
 3835 004e 181C     		mov	r0, r3
 3836 0050 BD46     		mov	sp, r7
 3837 0052 04B0     		add	sp, sp, #16
 3838              		@ sp needed
 3839 0054 80BD     		pop	{r7, pc}
 3840              	.L236:
 3841 0056 C046     		.align	2
 3842              	.L235:
 3843 0058 00E400E0 		.word	-536812544
 3844              		.cfi_endproc
 3845              	.LFE42:
 3846              		.size	CyIntGetPriority, .-CyIntGetPriority
 3847              		.section	.text.CyIntEnable,"ax",%progbits
 3848              		.align	2
 3849              		.global	CyIntEnable
 3850              		.code	16
 3851              		.thumb_func
 3852              		.type	CyIntEnable, %function
 3853              	CyIntEnable:
 3854              	.LFB43:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 3855              		.loc 1 2438 0
 3856              		.cfi_startproc
 3857 0000 80B5     		push	{r7, lr}
 3858              		.cfi_def_cfa_offset 8
 3859              		.cfi_offset 7, -8
 3860              		.cfi_offset 14, -4
 3861 0002 82B0     		sub	sp, sp, #8
 3862              		.cfi_def_cfa_offset 16
 3863 0004 00AF     		add	r7, sp, #0
 3864              		.cfi_def_cfa_register 7
 3865 0006 021C     		mov	r2, r0
 3866 0008 FB1D     		add	r3, r7, #7
 3867 000a 1A70     		strb	r2, [r3]
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 3868              		.loc 1 2439 0
 3869 000c 054B     		ldr	r3, .L238
 3870 000e FA1D     		add	r2, r7, #7
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 112


 3871 0010 1278     		ldrb	r2, [r2]
 3872 0012 1F21     		mov	r1, #31
 3873 0014 0A40     		and	r2, r1
 3874 0016 0121     		mov	r1, #1
 3875 0018 9140     		lsl	r1, r1, r2
 3876 001a 0A1C     		mov	r2, r1
 3877 001c 1A60     		str	r2, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** }
 3878              		.loc 1 2440 0
 3879 001e BD46     		mov	sp, r7
 3880 0020 02B0     		add	sp, sp, #8
 3881              		@ sp needed
 3882 0022 80BD     		pop	{r7, pc}
 3883              	.L239:
 3884              		.align	2
 3885              	.L238:
 3886 0024 00E100E0 		.word	-536813312
 3887              		.cfi_endproc
 3888              	.LFE43:
 3889              		.size	CyIntEnable, .-CyIntEnable
 3890              		.section	.text.CyIntGetState,"ax",%progbits
 3891              		.align	2
 3892              		.global	CyIntGetState
 3893              		.code	16
 3894              		.thumb_func
 3895              		.type	CyIntGetState, %function
 3896              	CyIntGetState:
 3897              	.LFB44:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 3898              		.loc 1 2456 0
 3899              		.cfi_startproc
 3900 0000 80B5     		push	{r7, lr}
 3901              		.cfi_def_cfa_offset 8
 3902              		.cfi_offset 7, -8
 3903              		.cfi_offset 14, -4
 3904 0002 82B0     		sub	sp, sp, #8
 3905              		.cfi_def_cfa_offset 16
 3906 0004 00AF     		add	r7, sp, #0
 3907              		.cfi_def_cfa_register 7
 3908 0006 021C     		mov	r2, r0
 3909 0008 FB1D     		add	r3, r7, #7
 3910 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 113


2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 3911              		.loc 1 2458 0
 3912 000c 074B     		ldr	r3, .L242
 3913 000e 1A68     		ldr	r2, [r3]
 3914 0010 FB1D     		add	r3, r7, #7
 3915 0012 1B78     		ldrb	r3, [r3]
 3916 0014 1F21     		mov	r1, #31
 3917 0016 0B40     		and	r3, r1
 3918 0018 DA40     		lsr	r2, r2, r3
 3919 001a 131C     		mov	r3, r2
 3920 001c DBB2     		uxtb	r3, r3
 3921 001e 0122     		mov	r2, #1
 3922 0020 1340     		and	r3, r2
 3923 0022 DBB2     		uxtb	r3, r3
2459:Generated_Source\PSoC4/CyLib.c **** }
 3924              		.loc 1 2459 0
 3925 0024 181C     		mov	r0, r3
 3926 0026 BD46     		mov	sp, r7
 3927 0028 02B0     		add	sp, sp, #8
 3928              		@ sp needed
 3929 002a 80BD     		pop	{r7, pc}
 3930              	.L243:
 3931              		.align	2
 3932              	.L242:
 3933 002c 00E100E0 		.word	-536813312
 3934              		.cfi_endproc
 3935              	.LFE44:
 3936              		.size	CyIntGetState, .-CyIntGetState
 3937              		.section	.text.CyIntDisable,"ax",%progbits
 3938              		.align	2
 3939              		.global	CyIntDisable
 3940              		.code	16
 3941              		.thumb_func
 3942              		.type	CyIntDisable, %function
 3943              	CyIntDisable:
 3944              	.LFB45:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 3945              		.loc 1 2472 0
 3946              		.cfi_startproc
 3947 0000 80B5     		push	{r7, lr}
 3948              		.cfi_def_cfa_offset 8
 3949              		.cfi_offset 7, -8
 3950              		.cfi_offset 14, -4
 3951 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 114


 3952              		.cfi_def_cfa_offset 16
 3953 0004 00AF     		add	r7, sp, #0
 3954              		.cfi_def_cfa_register 7
 3955 0006 021C     		mov	r2, r0
 3956 0008 FB1D     		add	r3, r7, #7
 3957 000a 1A70     		strb	r2, [r3]
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 3958              		.loc 1 2473 0
 3959 000c 054B     		ldr	r3, .L245
 3960 000e FA1D     		add	r2, r7, #7
 3961 0010 1278     		ldrb	r2, [r2]
 3962 0012 1F21     		mov	r1, #31
 3963 0014 0A40     		and	r2, r1
 3964 0016 0121     		mov	r1, #1
 3965 0018 9140     		lsl	r1, r1, r2
 3966 001a 0A1C     		mov	r2, r1
 3967 001c 1A60     		str	r2, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** }
 3968              		.loc 1 2474 0
 3969 001e BD46     		mov	sp, r7
 3970 0020 02B0     		add	sp, sp, #8
 3971              		@ sp needed
 3972 0022 80BD     		pop	{r7, pc}
 3973              	.L246:
 3974              		.align	2
 3975              	.L245:
 3976 0024 80E100E0 		.word	-536813184
 3977              		.cfi_endproc
 3978              	.LFE45:
 3979              		.size	CyIntDisable, .-CyIntDisable
 3980              		.section	.text.CyIntSetPending,"ax",%progbits
 3981              		.align	2
 3982              		.global	CyIntSetPending
 3983              		.code	16
 3984              		.thumb_func
 3985              		.type	CyIntSetPending, %function
 3986              	CyIntSetPending:
 3987              	.LFB46:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 3988              		.loc 1 2486 0
 3989              		.cfi_startproc
 3990 0000 80B5     		push	{r7, lr}
 3991              		.cfi_def_cfa_offset 8
 3992              		.cfi_offset 7, -8
 3993              		.cfi_offset 14, -4
 3994 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 115


 3995              		.cfi_def_cfa_offset 16
 3996 0004 00AF     		add	r7, sp, #0
 3997              		.cfi_def_cfa_register 7
 3998 0006 021C     		mov	r2, r0
 3999 0008 FB1D     		add	r3, r7, #7
 4000 000a 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 4001              		.loc 1 2487 0
 4002 000c 054B     		ldr	r3, .L248
 4003 000e FA1D     		add	r2, r7, #7
 4004 0010 1278     		ldrb	r2, [r2]
 4005 0012 1F21     		mov	r1, #31
 4006 0014 0A40     		and	r2, r1
 4007 0016 0121     		mov	r1, #1
 4008 0018 9140     		lsl	r1, r1, r2
 4009 001a 0A1C     		mov	r2, r1
 4010 001c 1A60     		str	r2, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** }
 4011              		.loc 1 2488 0
 4012 001e BD46     		mov	sp, r7
 4013 0020 02B0     		add	sp, sp, #8
 4014              		@ sp needed
 4015 0022 80BD     		pop	{r7, pc}
 4016              	.L249:
 4017              		.align	2
 4018              	.L248:
 4019 0024 00E200E0 		.word	-536813056
 4020              		.cfi_endproc
 4021              	.LFE46:
 4022              		.size	CyIntSetPending, .-CyIntSetPending
 4023              		.section	.text.CyIntClearPending,"ax",%progbits
 4024              		.align	2
 4025              		.global	CyIntClearPending
 4026              		.code	16
 4027              		.thumb_func
 4028              		.type	CyIntClearPending, %function
 4029              	CyIntClearPending:
 4030              	.LFB47:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 4031              		.loc 1 2501 0
 4032              		.cfi_startproc
 4033 0000 80B5     		push	{r7, lr}
 4034              		.cfi_def_cfa_offset 8
 4035              		.cfi_offset 7, -8
 4036              		.cfi_offset 14, -4
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 116


 4037 0002 82B0     		sub	sp, sp, #8
 4038              		.cfi_def_cfa_offset 16
 4039 0004 00AF     		add	r7, sp, #0
 4040              		.cfi_def_cfa_register 7
 4041 0006 021C     		mov	r2, r0
 4042 0008 FB1D     		add	r3, r7, #7
 4043 000a 1A70     		strb	r2, [r3]
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 4044              		.loc 1 2502 0
 4045 000c 054B     		ldr	r3, .L251
 4046 000e FA1D     		add	r2, r7, #7
 4047 0010 1278     		ldrb	r2, [r2]
 4048 0012 1F21     		mov	r1, #31
 4049 0014 0A40     		and	r2, r1
 4050 0016 0121     		mov	r1, #1
 4051 0018 9140     		lsl	r1, r1, r2
 4052 001a 0A1C     		mov	r2, r1
 4053 001c 1A60     		str	r2, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** }
 4054              		.loc 1 2503 0
 4055 001e BD46     		mov	sp, r7
 4056 0020 02B0     		add	sp, sp, #8
 4057              		@ sp needed
 4058 0022 80BD     		pop	{r7, pc}
 4059              	.L252:
 4060              		.align	2
 4061              	.L251:
 4062 0024 80E200E0 		.word	-536812928
 4063              		.cfi_endproc
 4064              	.LFE47:
 4065              		.size	CyIntClearPending, .-CyIntClearPending
 4066              		.section	.text.CyHalt,"ax",%progbits
 4067              		.align	2
 4068              		.global	CyHalt
 4069              		.code	16
 4070              		.thumb_func
 4071              		.type	CyHalt, %function
 4072              	CyHalt:
 4073              	.LFB48:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 4074              		.loc 1 2516 0
 4075              		.cfi_startproc
 4076 0000 80B5     		push	{r7, lr}
 4077              		.cfi_def_cfa_offset 8
 4078              		.cfi_offset 7, -8
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 117


 4079              		.cfi_offset 14, -4
 4080 0002 82B0     		sub	sp, sp, #8
 4081              		.cfi_def_cfa_offset 16
 4082 0004 00AF     		add	r7, sp, #0
 4083              		.cfi_def_cfa_register 7
 4084 0006 021C     		mov	r2, r0
 4085 0008 FB1D     		add	r3, r7, #7
 4086 000a 1A70     		strb	r2, [r3]
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 4087              		.loc 1 2525 0
 4088              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 4089 000c 01BE     		    bkpt    1
 4090              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 4091              		.loc 1 2529 0
 4092              		.code	16
 4093 000e BD46     		mov	sp, r7
 4094 0010 02B0     		add	sp, sp, #8
 4095              		@ sp needed
 4096 0012 80BD     		pop	{r7, pc}
 4097              		.cfi_endproc
 4098              	.LFE48:
 4099              		.size	CyHalt, .-CyHalt
 4100              		.section	.text.CySoftwareReset,"ax",%progbits
 4101              		.align	2
 4102              		.global	CySoftwareReset
 4103              		.code	16
 4104              		.thumb_func
 4105              		.type	CySoftwareReset, %function
 4106              	CySoftwareReset:
 4107              	.LFB49:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 4108              		.loc 1 2540 0
 4109              		.cfi_startproc
 4110 0000 80B5     		push	{r7, lr}
 4111              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 118


 4112              		.cfi_offset 7, -8
 4113              		.cfi_offset 14, -4
 4114 0002 00AF     		add	r7, sp, #0
 4115              		.cfi_def_cfa_register 7
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 4116              		.loc 1 2545 0
 4117 0004 044B     		ldr	r3, .L255
 4118 0006 044A     		ldr	r2, .L255
 4119 0008 1268     		ldr	r2, [r2]
 4120 000a 1204     		lsl	r2, r2, #16
 4121 000c 120C     		lsr	r2, r2, #16
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 4122              		.loc 1 2546 0
 4123 000e 0349     		ldr	r1, .L255+4
 4124 0010 0A43     		orr	r2, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 4125              		.loc 1 2545 0
 4126 0012 1A60     		str	r2, [r3]
2547:Generated_Source\PSoC4/CyLib.c **** }
 4127              		.loc 1 2547 0
 4128 0014 BD46     		mov	sp, r7
 4129              		@ sp needed
 4130 0016 80BD     		pop	{r7, pc}
 4131              	.L256:
 4132              		.align	2
 4133              	.L255:
 4134 0018 0CED00E0 		.word	-536810228
 4135 001c 0400FA05 		.word	100270084
 4136              		.cfi_endproc
 4137              	.LFE49:
 4138              		.size	CySoftwareReset, .-CySoftwareReset
 4139              		.section	.text.CyDelay,"ax",%progbits
 4140              		.align	2
 4141              		.global	CyDelay
 4142              		.code	16
 4143              		.thumb_func
 4144              		.type	CyDelay, %function
 4145              	CyDelay:
 4146              	.LFB50:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 4147              		.loc 1 2560 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 119


 4148              		.cfi_startproc
 4149 0000 80B5     		push	{r7, lr}
 4150              		.cfi_def_cfa_offset 8
 4151              		.cfi_offset 7, -8
 4152              		.cfi_offset 14, -4
 4153 0002 82B0     		sub	sp, sp, #8
 4154              		.cfi_def_cfa_offset 16
 4155 0004 00AF     		add	r7, sp, #0
 4156              		.cfi_def_cfa_register 7
 4157 0006 7860     		str	r0, [r7, #4]
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 4158              		.loc 1 2561 0
 4159 0008 09E0     		b	.L258
 4160              	.L259:
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 4161              		.loc 1 2566 0
 4162 000a 0C4B     		ldr	r3, .L260
 4163 000c 1B68     		ldr	r3, [r3]
 4164 000e 181C     		mov	r0, r3
 4165 0010 FFF7FEFF 		bl	CyDelayCycles
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 4166              		.loc 1 2567 0
 4167 0014 7B68     		ldr	r3, [r7, #4]
 4168 0016 0A4A     		ldr	r2, .L260+4
 4169 0018 9446     		mov	ip, r2
 4170 001a 6344     		add	r3, r3, ip
 4171 001c 7B60     		str	r3, [r7, #4]
 4172              	.L258:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 4173              		.loc 1 2561 0
 4174 001e 7A68     		ldr	r2, [r7, #4]
 4175 0020 8023     		mov	r3, #128
 4176 0022 1B02     		lsl	r3, r3, #8
 4177 0024 9A42     		cmp	r2, r3
 4178 0026 F0D8     		bhi	.L259
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 4179              		.loc 1 2570 0
 4180 0028 064B     		ldr	r3, .L260+8
 4181 002a 1B68     		ldr	r3, [r3]
 4182 002c 7A68     		ldr	r2, [r7, #4]
 4183 002e 5343     		mul	r3, r2
 4184 0030 181C     		mov	r0, r3
 4185 0032 FFF7FEFF 		bl	CyDelayCycles
2571:Generated_Source\PSoC4/CyLib.c **** }
 4186              		.loc 1 2571 0
 4187 0036 BD46     		mov	sp, r7
 4188 0038 02B0     		add	sp, sp, #8
 4189              		@ sp needed
 4190 003a 80BD     		pop	{r7, pc}
 4191              	.L261:
 4192              		.align	2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 120


 4193              	.L260:
 4194 003c 00000000 		.word	cydelay32kMs
 4195 0040 0080FFFF 		.word	-32768
 4196 0044 00000000 		.word	cydelayFreqKhz
 4197              		.cfi_endproc
 4198              	.LFE50:
 4199              		.size	CyDelay, .-CyDelay
 4200              		.section	.text.CyDelayUs,"ax",%progbits
 4201              		.align	2
 4202              		.global	CyDelayUs
 4203              		.code	16
 4204              		.thumb_func
 4205              		.type	CyDelayUs, %function
 4206              	CyDelayUs:
 4207              	.LFB51:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 4208              		.loc 1 2583 0
 4209              		.cfi_startproc
 4210 0000 80B5     		push	{r7, lr}
 4211              		.cfi_def_cfa_offset 8
 4212              		.cfi_offset 7, -8
 4213              		.cfi_offset 14, -4
 4214 0002 82B0     		sub	sp, sp, #8
 4215              		.cfi_def_cfa_offset 16
 4216 0004 00AF     		add	r7, sp, #0
 4217              		.cfi_def_cfa_register 7
 4218 0006 021C     		mov	r2, r0
 4219 0008 BB1D     		add	r3, r7, #6
 4220 000a 1A80     		strh	r2, [r3]
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 4221              		.loc 1 2584 0
 4222 000c BB1D     		add	r3, r7, #6
 4223 000e 1B88     		ldrh	r3, [r3]
 4224 0010 044A     		ldr	r2, .L263
 4225 0012 1278     		ldrb	r2, [r2]
 4226 0014 5343     		mul	r3, r2
 4227 0016 181C     		mov	r0, r3
 4228 0018 FFF7FEFF 		bl	CyDelayCycles
2585:Generated_Source\PSoC4/CyLib.c **** }
 4229              		.loc 1 2585 0
 4230 001c BD46     		mov	sp, r7
 4231 001e 02B0     		add	sp, sp, #8
 4232              		@ sp needed
 4233 0020 80BD     		pop	{r7, pc}
 4234              	.L264:
 4235 0022 C046     		.align	2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 121


 4236              	.L263:
 4237 0024 00000000 		.word	cydelayFreqMhz
 4238              		.cfi_endproc
 4239              	.LFE51:
 4240              		.size	CyDelayUs, .-CyDelayUs
 4241              		.section	.text.CyDelayFreq,"ax",%progbits
 4242              		.align	2
 4243              		.global	CyDelayFreq
 4244              		.code	16
 4245              		.thumb_func
 4246              		.type	CyDelayFreq, %function
 4247              	CyDelayFreq:
 4248              	.LFB52:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 4249              		.loc 1 2597 0
 4250              		.cfi_startproc
 4251 0000 80B5     		push	{r7, lr}
 4252              		.cfi_def_cfa_offset 8
 4253              		.cfi_offset 7, -8
 4254              		.cfi_offset 14, -4
 4255 0002 82B0     		sub	sp, sp, #8
 4256              		.cfi_def_cfa_offset 16
 4257 0004 00AF     		add	r7, sp, #0
 4258              		.cfi_def_cfa_register 7
 4259 0006 7860     		str	r0, [r7, #4]
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 4260              		.loc 1 2598 0
 4261 0008 7B68     		ldr	r3, [r7, #4]
 4262 000a 002B     		cmp	r3, #0
 4263 000c 03D0     		beq	.L266
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 4264              		.loc 1 2600 0
 4265 000e 154B     		ldr	r3, .L268
 4266 0010 7A68     		ldr	r2, [r7, #4]
 4267 0012 1A60     		str	r2, [r3]
 4268 0014 02E0     		b	.L267
 4269              	.L266:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 4270              		.loc 1 2604 0
 4271 0016 134B     		ldr	r3, .L268
 4272 0018 134A     		ldr	r2, .L268+4
 4273 001a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 122


 4274              	.L267:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 4275              		.loc 1 2607 0
 4276 001c 114B     		ldr	r3, .L268
 4277 001e 1B68     		ldr	r3, [r3]
 4278 0020 124A     		ldr	r2, .L268+8
 4279 0022 9446     		mov	ip, r2
 4280 0024 6344     		add	r3, r3, ip
 4281 0026 181C     		mov	r0, r3
 4282 0028 1149     		ldr	r1, .L268+12
 4283 002a FFF7FEFF 		bl	__aeabi_uidiv
 4284 002e 031C     		mov	r3, r0
 4285 0030 DAB2     		uxtb	r2, r3
 4286 0032 104B     		ldr	r3, .L268+16
 4287 0034 1A70     		strb	r2, [r3]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 4288              		.loc 1 2608 0
 4289 0036 0B4B     		ldr	r3, .L268
 4290 0038 1B68     		ldr	r3, [r3]
 4291 003a 0F4A     		ldr	r2, .L268+20
 4292 003c 9446     		mov	ip, r2
 4293 003e 6344     		add	r3, r3, ip
 4294 0040 181C     		mov	r0, r3
 4295 0042 FA23     		mov	r3, #250
 4296 0044 9900     		lsl	r1, r3, #2
 4297 0046 FFF7FEFF 		bl	__aeabi_uidiv
 4298 004a 031C     		mov	r3, r0
 4299 004c 1A1C     		mov	r2, r3
 4300 004e 0B4B     		ldr	r3, .L268+24
 4301 0050 1A60     		str	r2, [r3]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 4302              		.loc 1 2609 0
 4303 0052 0A4B     		ldr	r3, .L268+24
 4304 0054 1B68     		ldr	r3, [r3]
 4305 0056 DA03     		lsl	r2, r3, #15
 4306 0058 094B     		ldr	r3, .L268+28
 4307 005a 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 4308              		.loc 1 2610 0
 4309 005c BD46     		mov	sp, r7
 4310 005e 02B0     		add	sp, sp, #8
 4311              		@ sp needed
 4312 0060 80BD     		pop	{r7, pc}
 4313              	.L269:
 4314 0062 C046     		.align	2
 4315              	.L268:
 4316 0064 00000000 		.word	cydelayFreqHz
 4317 0068 006CDC02 		.word	48000000
 4318 006c 3F420F00 		.word	999999
 4319 0070 40420F00 		.word	1000000
 4320 0074 00000000 		.word	cydelayFreqMhz
 4321 0078 E7030000 		.word	999
 4322 007c 00000000 		.word	cydelayFreqKhz
 4323 0080 00000000 		.word	cydelay32kMs
 4324              		.cfi_endproc
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 123


 4325              	.LFE52:
 4326              		.size	CyDelayFreq, .-CyDelayFreq
 4327              		.section	.text.CySysTickStart,"ax",%progbits
 4328              		.align	2
 4329              		.global	CySysTickStart
 4330              		.code	16
 4331              		.thumb_func
 4332              		.type	CySysTickStart, %function
 4333              	CySysTickStart:
 4334              	.LFB53:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
 4335              		.loc 1 2629 0
 4336              		.cfi_startproc
 4337 0000 80B5     		push	{r7, lr}
 4338              		.cfi_def_cfa_offset 8
 4339              		.cfi_offset 7, -8
 4340              		.cfi_offset 14, -4
 4341 0002 00AF     		add	r7, sp, #0
 4342              		.cfi_def_cfa_register 7
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 4343              		.loc 1 2630 0
 4344 0004 064B     		ldr	r3, .L272
 4345 0006 1B68     		ldr	r3, [r3]
 4346 0008 002B     		cmp	r3, #0
 4347 000a 04D1     		bne	.L271
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 4348              		.loc 1 2632 0
 4349 000c FFF7FEFF 		bl	CySysTickInit
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 4350              		.loc 1 2633 0
 4351 0010 034B     		ldr	r3, .L272
 4352 0012 0122     		mov	r2, #1
 4353 0014 1A60     		str	r2, [r3]
 4354              	.L271:
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 4355              		.loc 1 2636 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 124


 4356 0016 FFF7FEFF 		bl	CySysTickEnable
2637:Generated_Source\PSoC4/CyLib.c **** }
 4357              		.loc 1 2637 0
 4358 001a BD46     		mov	sp, r7
 4359              		@ sp needed
 4360 001c 80BD     		pop	{r7, pc}
 4361              	.L273:
 4362 001e C046     		.align	2
 4363              	.L272:
 4364 0020 00000000 		.word	CySysTickInitVar
 4365              		.cfi_endproc
 4366              	.LFE53:
 4367              		.size	CySysTickStart, .-CySysTickStart
 4368              		.section	.text.CySysTickInit,"ax",%progbits
 4369              		.align	2
 4370              		.global	CySysTickInit
 4371              		.code	16
 4372              		.thumb_func
 4373              		.type	CySysTickInit, %function
 4374              	CySysTickInit:
 4375              	.LFB54:
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 4376              		.loc 1 2658 0
 4377              		.cfi_startproc
 4378 0000 80B5     		push	{r7, lr}
 4379              		.cfi_def_cfa_offset 8
 4380              		.cfi_offset 7, -8
 4381              		.cfi_offset 14, -4
 4382 0002 82B0     		sub	sp, sp, #8
 4383              		.cfi_def_cfa_offset 16
 4384 0004 00AF     		add	r7, sp, #0
 4385              		.cfi_def_cfa_register 7
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 4386              		.loc 1 2661 0
 4387 0006 0023     		mov	r3, #0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 125


 4388 0008 7B60     		str	r3, [r7, #4]
 4389 000a 07E0     		b	.L275
 4390              	.L276:
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 4391              		.loc 1 2663 0 discriminator 3
 4392 000c 124B     		ldr	r3, .L277
 4393 000e 7A68     		ldr	r2, [r7, #4]
 4394 0010 9200     		lsl	r2, r2, #2
 4395 0012 0021     		mov	r1, #0
 4396 0014 D150     		str	r1, [r2, r3]
2661:Generated_Source\PSoC4/CyLib.c ****     {
 4397              		.loc 1 2661 0 discriminator 3
 4398 0016 7B68     		ldr	r3, [r7, #4]
 4399 0018 0133     		add	r3, r3, #1
 4400 001a 7B60     		str	r3, [r7, #4]
 4401              	.L275:
2661:Generated_Source\PSoC4/CyLib.c ****     {
 4402              		.loc 1 2661 0 is_stmt 0 discriminator 1
 4403 001c 7B68     		ldr	r3, [r7, #4]
 4404 001e 042B     		cmp	r3, #4
 4405 0020 F4D9     		bls	.L276
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 4406              		.loc 1 2666 0 is_stmt 1
 4407 0022 0E4B     		ldr	r3, .L277+4
 4408 0024 0F20     		mov	r0, #15
 4409 0026 191C     		mov	r1, r3
 4410 0028 FFF7FEFF 		bl	CyIntSetSysVector
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 4411              		.loc 1 2669 0
 4412 002c 0120     		mov	r0, #1
 4413 002e FFF7FEFF 		bl	CySysTickSetClockSource
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 4414              		.loc 1 2672 0
 4415 0032 0B4B     		ldr	r3, .L277+8
 4416 0034 1B68     		ldr	r3, [r3]
 4417 0036 181C     		mov	r0, r3
 4418 0038 FA23     		mov	r3, #250
 4419 003a 9900     		lsl	r1, r3, #2
 4420 003c FFF7FEFF 		bl	__aeabi_uidiv
 4421 0040 031C     		mov	r3, r0
 4422 0042 181C     		mov	r0, r3
 4423 0044 FFF7FEFF 		bl	CySysTickSetReload
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 4424              		.loc 1 2673 0
 4425 0048 FFF7FEFF 		bl	CySysTickClear
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 4426              		.loc 1 2674 0
 4427 004c 0F20     		mov	r0, #15
 4428 004e FFF7FEFF 		bl	CyIntEnable
2675:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 126


 4429              		.loc 1 2675 0
 4430 0052 BD46     		mov	sp, r7
 4431 0054 02B0     		add	sp, sp, #8
 4432              		@ sp needed
 4433 0056 80BD     		pop	{r7, pc}
 4434              	.L278:
 4435              		.align	2
 4436              	.L277:
 4437 0058 00000000 		.word	CySysTickCallbacks
 4438 005c 00000000 		.word	CySysTickServiceCallbacks
 4439 0060 00000000 		.word	cydelayFreqHz
 4440              		.cfi_endproc
 4441              	.LFE54:
 4442              		.size	CySysTickInit, .-CySysTickInit
 4443              		.section	.text.CySysTickEnable,"ax",%progbits
 4444              		.align	2
 4445              		.global	CySysTickEnable
 4446              		.code	16
 4447              		.thumb_func
 4448              		.type	CySysTickEnable, %function
 4449              	CySysTickEnable:
 4450              	.LFB55:
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
 4451              		.loc 1 2689 0
 4452              		.cfi_startproc
 4453 0000 80B5     		push	{r7, lr}
 4454              		.cfi_def_cfa_offset 8
 4455              		.cfi_offset 7, -8
 4456              		.cfi_offset 14, -4
 4457 0002 00AF     		add	r7, sp, #0
 4458              		.cfi_def_cfa_register 7
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 4459              		.loc 1 2690 0
 4460 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 4461              		.loc 1 2691 0
 4462 0008 034B     		ldr	r3, .L280
 4463 000a 034A     		ldr	r2, .L280
 4464 000c 1268     		ldr	r2, [r2]
 4465 000e 0121     		mov	r1, #1
 4466 0010 0A43     		orr	r2, r1
 4467 0012 1A60     		str	r2, [r3]
2692:Generated_Source\PSoC4/CyLib.c **** }
 4468              		.loc 1 2692 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 127


 4469 0014 BD46     		mov	sp, r7
 4470              		@ sp needed
 4471 0016 80BD     		pop	{r7, pc}
 4472              	.L281:
 4473              		.align	2
 4474              	.L280:
 4475 0018 10E000E0 		.word	-536813552
 4476              		.cfi_endproc
 4477              	.LFE55:
 4478              		.size	CySysTickEnable, .-CySysTickEnable
 4479              		.section	.text.CySysTickStop,"ax",%progbits
 4480              		.align	2
 4481              		.global	CySysTickStop
 4482              		.code	16
 4483              		.thumb_func
 4484              		.type	CySysTickStop, %function
 4485              	CySysTickStop:
 4486              	.LFB56:
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
 4487              		.loc 1 2706 0
 4488              		.cfi_startproc
 4489 0000 80B5     		push	{r7, lr}
 4490              		.cfi_def_cfa_offset 8
 4491              		.cfi_offset 7, -8
 4492              		.cfi_offset 14, -4
 4493 0002 00AF     		add	r7, sp, #0
 4494              		.cfi_def_cfa_register 7
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 4495              		.loc 1 2707 0
 4496 0004 034B     		ldr	r3, .L283
 4497 0006 034A     		ldr	r2, .L283
 4498 0008 1268     		ldr	r2, [r2]
 4499 000a 0121     		mov	r1, #1
 4500 000c 8A43     		bic	r2, r1
 4501 000e 1A60     		str	r2, [r3]
2708:Generated_Source\PSoC4/CyLib.c **** }
 4502              		.loc 1 2708 0
 4503 0010 BD46     		mov	sp, r7
 4504              		@ sp needed
 4505 0012 80BD     		pop	{r7, pc}
 4506              	.L284:
 4507              		.align	2
 4508              	.L283:
 4509 0014 10E000E0 		.word	-536813552
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 128


 4510              		.cfi_endproc
 4511              	.LFE56:
 4512              		.size	CySysTickStop, .-CySysTickStop
 4513              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 4514              		.align	2
 4515              		.global	CySysTickEnableInterrupt
 4516              		.code	16
 4517              		.thumb_func
 4518              		.type	CySysTickEnableInterrupt, %function
 4519              	CySysTickEnableInterrupt:
 4520              	.LFB57:
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
 4521              		.loc 1 2722 0
 4522              		.cfi_startproc
 4523 0000 80B5     		push	{r7, lr}
 4524              		.cfi_def_cfa_offset 8
 4525              		.cfi_offset 7, -8
 4526              		.cfi_offset 14, -4
 4527 0002 00AF     		add	r7, sp, #0
 4528              		.cfi_def_cfa_register 7
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 4529              		.loc 1 2723 0
 4530 0004 034B     		ldr	r3, .L286
 4531 0006 034A     		ldr	r2, .L286
 4532 0008 1268     		ldr	r2, [r2]
 4533 000a 0221     		mov	r1, #2
 4534 000c 0A43     		orr	r2, r1
 4535 000e 1A60     		str	r2, [r3]
2724:Generated_Source\PSoC4/CyLib.c **** }
 4536              		.loc 1 2724 0
 4537 0010 BD46     		mov	sp, r7
 4538              		@ sp needed
 4539 0012 80BD     		pop	{r7, pc}
 4540              	.L287:
 4541              		.align	2
 4542              	.L286:
 4543 0014 10E000E0 		.word	-536813552
 4544              		.cfi_endproc
 4545              	.LFE57:
 4546              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 4547              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 4548              		.align	2
 4549              		.global	CySysTickDisableInterrupt
 4550              		.code	16
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 129


 4551              		.thumb_func
 4552              		.type	CySysTickDisableInterrupt, %function
 4553              	CySysTickDisableInterrupt:
 4554              	.LFB58:
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
 4555              		.loc 1 2738 0
 4556              		.cfi_startproc
 4557 0000 80B5     		push	{r7, lr}
 4558              		.cfi_def_cfa_offset 8
 4559              		.cfi_offset 7, -8
 4560              		.cfi_offset 14, -4
 4561 0002 00AF     		add	r7, sp, #0
 4562              		.cfi_def_cfa_register 7
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 4563              		.loc 1 2739 0
 4564 0004 034B     		ldr	r3, .L289
 4565 0006 034A     		ldr	r2, .L289
 4566 0008 1268     		ldr	r2, [r2]
 4567 000a 0221     		mov	r1, #2
 4568 000c 8A43     		bic	r2, r1
 4569 000e 1A60     		str	r2, [r3]
2740:Generated_Source\PSoC4/CyLib.c **** }
 4570              		.loc 1 2740 0
 4571 0010 BD46     		mov	sp, r7
 4572              		@ sp needed
 4573 0012 80BD     		pop	{r7, pc}
 4574              	.L290:
 4575              		.align	2
 4576              	.L289:
 4577 0014 10E000E0 		.word	-536813552
 4578              		.cfi_endproc
 4579              	.LFE58:
 4580              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 4581              		.section	.text.CySysTickSetReload,"ax",%progbits
 4582              		.align	2
 4583              		.global	CySysTickSetReload
 4584              		.code	16
 4585              		.thumb_func
 4586              		.type	CySysTickSetReload, %function
 4587              	CySysTickSetReload:
 4588              	.LFB59:
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 130


2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
 4589              		.loc 1 2755 0
 4590              		.cfi_startproc
 4591 0000 80B5     		push	{r7, lr}
 4592              		.cfi_def_cfa_offset 8
 4593              		.cfi_offset 7, -8
 4594              		.cfi_offset 14, -4
 4595 0002 82B0     		sub	sp, sp, #8
 4596              		.cfi_def_cfa_offset 16
 4597 0004 00AF     		add	r7, sp, #0
 4598              		.cfi_def_cfa_register 7
 4599 0006 7860     		str	r0, [r7, #4]
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 4600              		.loc 1 2756 0
 4601 0008 034B     		ldr	r3, .L292
 4602 000a 7A68     		ldr	r2, [r7, #4]
 4603 000c 1202     		lsl	r2, r2, #8
 4604 000e 120A     		lsr	r2, r2, #8
 4605 0010 1A60     		str	r2, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** }
 4606              		.loc 1 2757 0
 4607 0012 BD46     		mov	sp, r7
 4608 0014 02B0     		add	sp, sp, #8
 4609              		@ sp needed
 4610 0016 80BD     		pop	{r7, pc}
 4611              	.L293:
 4612              		.align	2
 4613              	.L292:
 4614 0018 14E000E0 		.word	-536813548
 4615              		.cfi_endproc
 4616              	.LFE59:
 4617              		.size	CySysTickSetReload, .-CySysTickSetReload
 4618              		.section	.text.CySysTickGetReload,"ax",%progbits
 4619              		.align	2
 4620              		.global	CySysTickGetReload
 4621              		.code	16
 4622              		.thumb_func
 4623              		.type	CySysTickGetReload, %function
 4624              	CySysTickGetReload:
 4625              	.LFB60:
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 131


2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
 4626              		.loc 1 2771 0
 4627              		.cfi_startproc
 4628 0000 80B5     		push	{r7, lr}
 4629              		.cfi_def_cfa_offset 8
 4630              		.cfi_offset 7, -8
 4631              		.cfi_offset 14, -4
 4632 0002 00AF     		add	r7, sp, #0
 4633              		.cfi_def_cfa_register 7
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 4634              		.loc 1 2772 0
 4635 0004 034B     		ldr	r3, .L296
 4636 0006 1B68     		ldr	r3, [r3]
 4637 0008 1B02     		lsl	r3, r3, #8
 4638 000a 1B0A     		lsr	r3, r3, #8
2773:Generated_Source\PSoC4/CyLib.c **** }
 4639              		.loc 1 2773 0
 4640 000c 181C     		mov	r0, r3
 4641 000e BD46     		mov	sp, r7
 4642              		@ sp needed
 4643 0010 80BD     		pop	{r7, pc}
 4644              	.L297:
 4645 0012 C046     		.align	2
 4646              	.L296:
 4647 0014 14E000E0 		.word	-536813548
 4648              		.cfi_endproc
 4649              	.LFE60:
 4650              		.size	CySysTickGetReload, .-CySysTickGetReload
 4651              		.section	.text.CySysTickGetValue,"ax",%progbits
 4652              		.align	2
 4653              		.global	CySysTickGetValue
 4654              		.code	16
 4655              		.thumb_func
 4656              		.type	CySysTickGetValue, %function
 4657              	CySysTickGetValue:
 4658              	.LFB61:
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 132


 4659              		.loc 1 2787 0
 4660              		.cfi_startproc
 4661 0000 80B5     		push	{r7, lr}
 4662              		.cfi_def_cfa_offset 8
 4663              		.cfi_offset 7, -8
 4664              		.cfi_offset 14, -4
 4665 0002 00AF     		add	r7, sp, #0
 4666              		.cfi_def_cfa_register 7
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 4667              		.loc 1 2788 0
 4668 0004 034B     		ldr	r3, .L300
 4669 0006 1B68     		ldr	r3, [r3]
 4670 0008 1B02     		lsl	r3, r3, #8
 4671 000a 1B0A     		lsr	r3, r3, #8
2789:Generated_Source\PSoC4/CyLib.c **** }
 4672              		.loc 1 2789 0
 4673 000c 181C     		mov	r0, r3
 4674 000e BD46     		mov	sp, r7
 4675              		@ sp needed
 4676 0010 80BD     		pop	{r7, pc}
 4677              	.L301:
 4678 0012 C046     		.align	2
 4679              	.L300:
 4680 0014 18E000E0 		.word	-536813544
 4681              		.cfi_endproc
 4682              	.LFE61:
 4683              		.size	CySysTickGetValue, .-CySysTickGetValue
 4684              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 4685              		.align	2
 4686              		.global	CySysTickSetClockSource
 4687              		.code	16
 4688              		.thumb_func
 4689              		.type	CySysTickSetClockSource, %function
 4690              	CySysTickSetClockSource:
 4691              	.LFB62:
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 133


2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
 4692              		.loc 1 2819 0
 4693              		.cfi_startproc
 4694 0000 80B5     		push	{r7, lr}
 4695              		.cfi_def_cfa_offset 8
 4696              		.cfi_offset 7, -8
 4697              		.cfi_offset 14, -4
 4698 0002 82B0     		sub	sp, sp, #8
 4699              		.cfi_def_cfa_offset 16
 4700 0004 00AF     		add	r7, sp, #0
 4701              		.cfi_def_cfa_register 7
 4702 0006 7860     		str	r0, [r7, #4]
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 4703              		.loc 1 2820 0
 4704 0008 7B68     		ldr	r3, [r7, #4]
 4705 000a 012B     		cmp	r3, #1
 4706 000c 06D1     		bne	.L303
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 4707              		.loc 1 2822 0
 4708 000e 084B     		ldr	r3, .L305
 4709 0010 074A     		ldr	r2, .L305
 4710 0012 1268     		ldr	r2, [r2]
 4711 0014 0421     		mov	r1, #4
 4712 0016 0A43     		orr	r2, r1
 4713 0018 1A60     		str	r2, [r3]
 4714 001a 05E0     		b	.L302
 4715              	.L303:
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 4716              		.loc 1 2826 0
 4717 001c 044B     		ldr	r3, .L305
 4718 001e 044A     		ldr	r2, .L305
 4719 0020 1268     		ldr	r2, [r2]
 4720 0022 0421     		mov	r1, #4
 4721 0024 8A43     		bic	r2, r1
 4722 0026 1A60     		str	r2, [r3]
 4723              	.L302:
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
 4724              		.loc 1 2828 0
 4725 0028 BD46     		mov	sp, r7
 4726 002a 02B0     		add	sp, sp, #8
 4727              		@ sp needed
 4728 002c 80BD     		pop	{r7, pc}
 4729              	.L306:
 4730 002e C046     		.align	2
 4731              	.L305:
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 134


 4732 0030 10E000E0 		.word	-536813552
 4733              		.cfi_endproc
 4734              	.LFE62:
 4735              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 4736              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 4737              		.align	2
 4738              		.global	CySysTickGetClockSource
 4739              		.code	16
 4740              		.thumb_func
 4741              		.type	CySysTickGetClockSource, %function
 4742              	CySysTickGetClockSource:
 4743              	.LFB63:
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
 4744              		.loc 1 2844 0
 4745              		.cfi_startproc
 4746 0000 80B5     		push	{r7, lr}
 4747              		.cfi_def_cfa_offset 8
 4748              		.cfi_offset 7, -8
 4749              		.cfi_offset 14, -4
 4750 0002 00AF     		add	r7, sp, #0
 4751              		.cfi_def_cfa_register 7
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 4752              		.loc 1 2845 0
 4753 0004 034B     		ldr	r3, .L309
 4754 0006 1B68     		ldr	r3, [r3]
 4755 0008 9B08     		lsr	r3, r3, #2
 4756 000a 0122     		mov	r2, #1
 4757 000c 1340     		and	r3, r2
2846:Generated_Source\PSoC4/CyLib.c ****     }
 4758              		.loc 1 2846 0
 4759 000e 181C     		mov	r0, r3
 4760 0010 BD46     		mov	sp, r7
 4761              		@ sp needed
 4762 0012 80BD     		pop	{r7, pc}
 4763              	.L310:
 4764              		.align	2
 4765              	.L309:
 4766 0014 10E000E0 		.word	-536813552
 4767              		.cfi_endproc
 4768              	.LFE63:
 4769              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 4770              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 135


 4771              		.align	2
 4772              		.global	CySysTickGetCountFlag
 4773              		.code	16
 4774              		.thumb_func
 4775              		.type	CySysTickGetCountFlag, %function
 4776              	CySysTickGetCountFlag:
 4777              	.LFB64:
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
 4778              		.loc 1 2867 0
 4779              		.cfi_startproc
 4780 0000 80B5     		push	{r7, lr}
 4781              		.cfi_def_cfa_offset 8
 4782              		.cfi_offset 7, -8
 4783              		.cfi_offset 14, -4
 4784 0002 00AF     		add	r7, sp, #0
 4785              		.cfi_def_cfa_register 7
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 4786              		.loc 1 2868 0
 4787 0004 034B     		ldr	r3, .L313
 4788 0006 1B68     		ldr	r3, [r3]
 4789 0008 1B0C     		lsr	r3, r3, #16
 4790 000a 0122     		mov	r2, #1
 4791 000c 1340     		and	r3, r2
2869:Generated_Source\PSoC4/CyLib.c **** }
 4792              		.loc 1 2869 0
 4793 000e 181C     		mov	r0, r3
 4794 0010 BD46     		mov	sp, r7
 4795              		@ sp needed
 4796 0012 80BD     		pop	{r7, pc}
 4797              	.L314:
 4798              		.align	2
 4799              	.L313:
 4800 0014 10E000E0 		.word	-536813552
 4801              		.cfi_endproc
 4802              	.LFE64:
 4803              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 4804              		.section	.text.CySysTickClear,"ax",%progbits
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 136


 4805              		.align	2
 4806              		.global	CySysTickClear
 4807              		.code	16
 4808              		.thumb_func
 4809              		.type	CySysTickClear, %function
 4810              	CySysTickClear:
 4811              	.LFB65:
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
 4812              		.loc 1 2880 0
 4813              		.cfi_startproc
 4814 0000 80B5     		push	{r7, lr}
 4815              		.cfi_def_cfa_offset 8
 4816              		.cfi_offset 7, -8
 4817              		.cfi_offset 14, -4
 4818 0002 00AF     		add	r7, sp, #0
 4819              		.cfi_def_cfa_register 7
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 4820              		.loc 1 2881 0
 4821 0004 024B     		ldr	r3, .L316
 4822 0006 0022     		mov	r2, #0
 4823 0008 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** }
 4824              		.loc 1 2882 0
 4825 000a BD46     		mov	sp, r7
 4826              		@ sp needed
 4827 000c 80BD     		pop	{r7, pc}
 4828              	.L317:
 4829 000e C046     		.align	2
 4830              	.L316:
 4831 0010 18E000E0 		.word	-536813544
 4832              		.cfi_endproc
 4833              	.LFE65:
 4834              		.size	CySysTickClear, .-CySysTickClear
 4835              		.section	.text.CySysTickSetCallback,"ax",%progbits
 4836              		.align	2
 4837              		.global	CySysTickSetCallback
 4838              		.code	16
 4839              		.thumb_func
 4840              		.type	CySysTickSetCallback, %function
 4841              	CySysTickSetCallback:
 4842              	.LFB66:
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 137


2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
 4843              		.loc 1 2915 0
 4844              		.cfi_startproc
 4845 0000 80B5     		push	{r7, lr}
 4846              		.cfi_def_cfa_offset 8
 4847              		.cfi_offset 7, -8
 4848              		.cfi_offset 14, -4
 4849 0002 84B0     		sub	sp, sp, #16
 4850              		.cfi_def_cfa_offset 24
 4851 0004 00AF     		add	r7, sp, #0
 4852              		.cfi_def_cfa_register 7
 4853 0006 7860     		str	r0, [r7, #4]
 4854 0008 3960     		str	r1, [r7]
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 4855              		.loc 1 2918 0
 4856 000a 074B     		ldr	r3, .L320
 4857 000c 7A68     		ldr	r2, [r7, #4]
 4858 000e 9200     		lsl	r2, r2, #2
 4859 0010 D358     		ldr	r3, [r2, r3]
 4860 0012 FB60     		str	r3, [r7, #12]
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 4861              		.loc 1 2919 0
 4862 0014 044B     		ldr	r3, .L320
 4863 0016 7A68     		ldr	r2, [r7, #4]
 4864 0018 9200     		lsl	r2, r2, #2
 4865 001a 3968     		ldr	r1, [r7]
 4866 001c D150     		str	r1, [r2, r3]
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 4867              		.loc 1 2920 0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 138


 4868 001e FB68     		ldr	r3, [r7, #12]
2921:Generated_Source\PSoC4/CyLib.c **** }
 4869              		.loc 1 2921 0
 4870 0020 181C     		mov	r0, r3
 4871 0022 BD46     		mov	sp, r7
 4872 0024 04B0     		add	sp, sp, #16
 4873              		@ sp needed
 4874 0026 80BD     		pop	{r7, pc}
 4875              	.L321:
 4876              		.align	2
 4877              	.L320:
 4878 0028 00000000 		.word	CySysTickCallbacks
 4879              		.cfi_endproc
 4880              	.LFE66:
 4881              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 4882              		.section	.text.CySysTickGetCallback,"ax",%progbits
 4883              		.align	2
 4884              		.global	CySysTickGetCallback
 4885              		.code	16
 4886              		.thumb_func
 4887              		.type	CySysTickGetCallback, %function
 4888              	CySysTickGetCallback:
 4889              	.LFB67:
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
 4890              		.loc 1 2939 0
 4891              		.cfi_startproc
 4892 0000 80B5     		push	{r7, lr}
 4893              		.cfi_def_cfa_offset 8
 4894              		.cfi_offset 7, -8
 4895              		.cfi_offset 14, -4
 4896 0002 82B0     		sub	sp, sp, #8
 4897              		.cfi_def_cfa_offset 16
 4898 0004 00AF     		add	r7, sp, #0
 4899              		.cfi_def_cfa_register 7
 4900 0006 7860     		str	r0, [r7, #4]
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 4901              		.loc 1 2940 0
 4902 0008 034B     		ldr	r3, .L324
 4903 000a 7A68     		ldr	r2, [r7, #4]
 4904 000c 9200     		lsl	r2, r2, #2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 139


 4905 000e D358     		ldr	r3, [r2, r3]
2941:Generated_Source\PSoC4/CyLib.c **** }
 4906              		.loc 1 2941 0
 4907 0010 181C     		mov	r0, r3
 4908 0012 BD46     		mov	sp, r7
 4909 0014 02B0     		add	sp, sp, #8
 4910              		@ sp needed
 4911 0016 80BD     		pop	{r7, pc}
 4912              	.L325:
 4913              		.align	2
 4914              	.L324:
 4915 0018 00000000 		.word	CySysTickCallbacks
 4916              		.cfi_endproc
 4917              	.LFE67:
 4918              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 4919              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 4920              		.align	2
 4921              		.code	16
 4922              		.thumb_func
 4923              		.type	CySysTickServiceCallbacks, %function
 4924              	CySysTickServiceCallbacks:
 4925              	.LFB68:
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 4926              		.loc 1 2952 0
 4927              		.cfi_startproc
 4928 0000 80B5     		push	{r7, lr}
 4929              		.cfi_def_cfa_offset 8
 4930              		.cfi_offset 7, -8
 4931              		.cfi_offset 14, -4
 4932 0002 82B0     		sub	sp, sp, #8
 4933              		.cfi_def_cfa_offset 16
 4934 0004 00AF     		add	r7, sp, #0
 4935              		.cfi_def_cfa_register 7
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 4936              		.loc 1 2956 0
 4937 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 4938 000a 031E     		sub	r3, r0, #0
 4939 000c 012B     		cmp	r3, #1
 4940 000e 13D1     		bne	.L326
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 4941              		.loc 1 2958 0
 4942 0010 0023     		mov	r3, #0
 4943 0012 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 140


 4944 0014 0DE0     		b	.L328
 4945              	.L330:
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 4946              		.loc 1 2960 0
 4947 0016 0A4B     		ldr	r3, .L331
 4948 0018 7A68     		ldr	r2, [r7, #4]
 4949 001a 9200     		lsl	r2, r2, #2
 4950 001c D358     		ldr	r3, [r2, r3]
 4951 001e 002B     		cmp	r3, #0
 4952 0020 04D0     		beq	.L329
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 4953              		.loc 1 2962 0
 4954 0022 074B     		ldr	r3, .L331
 4955 0024 7A68     		ldr	r2, [r7, #4]
 4956 0026 9200     		lsl	r2, r2, #2
 4957 0028 D358     		ldr	r3, [r2, r3]
 4958 002a 9847     		blx	r3
 4959              	.L329:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 4960              		.loc 1 2958 0 discriminator 2
 4961 002c 7B68     		ldr	r3, [r7, #4]
 4962 002e 0133     		add	r3, r3, #1
 4963 0030 7B60     		str	r3, [r7, #4]
 4964              	.L328:
2958:Generated_Source\PSoC4/CyLib.c ****         {
 4965              		.loc 1 2958 0 is_stmt 0 discriminator 1
 4966 0032 7B68     		ldr	r3, [r7, #4]
 4967 0034 042B     		cmp	r3, #4
 4968 0036 EED9     		bls	.L330
 4969              	.L326:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 4970              		.loc 1 2966 0 is_stmt 1
 4971 0038 BD46     		mov	sp, r7
 4972 003a 02B0     		add	sp, sp, #8
 4973              		@ sp needed
 4974 003c 80BD     		pop	{r7, pc}
 4975              	.L332:
 4976 003e C046     		.align	2
 4977              	.L331:
 4978 0040 00000000 		.word	CySysTickCallbacks
 4979              		.cfi_endproc
 4980              	.LFE68:
 4981              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 4982              		.section	.text.CyGetUniqueId,"ax",%progbits
 4983              		.align	2
 4984              		.global	CyGetUniqueId
 4985              		.code	16
 4986              		.thumb_func
 4987              		.type	CyGetUniqueId, %function
 4988              	CyGetUniqueId:
 4989              	.LFB69:
2967:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 141


2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 4990              		.loc 1 2984 0
 4991              		.cfi_startproc
 4992 0000 80B5     		push	{r7, lr}
 4993              		.cfi_def_cfa_offset 8
 4994              		.cfi_offset 7, -8
 4995              		.cfi_offset 14, -4
 4996 0002 82B0     		sub	sp, sp, #8
 4997              		.cfi_def_cfa_offset 16
 4998 0004 00AF     		add	r7, sp, #0
 4999              		.cfi_def_cfa_register 7
 5000 0006 7860     		str	r0, [r7, #4]
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 5001              		.loc 1 2986 0
 5002 0008 254B     		ldr	r3, .L334
 5003 000a 1B78     		ldrb	r3, [r3]
 5004 000c DBB2     		uxtb	r3, r3
 5005 000e 1A1C     		mov	r2, r3
 5006 0010 7B68     		ldr	r3, [r7, #4]
 5007 0012 1A60     		str	r2, [r3]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 5008              		.loc 1 2987 0
 5009 0014 234B     		ldr	r3, .L334+4
 5010 0016 1B78     		ldrb	r3, [r3]
 5011 0018 DBB2     		uxtb	r3, r3
 5012 001a 1A02     		lsl	r2, r3, #8
 5013 001c 7B68     		ldr	r3, [r7, #4]
 5014 001e 1B68     		ldr	r3, [r3]
 5015 0020 1A43     		orr	r2, r3
 5016 0022 7B68     		ldr	r3, [r7, #4]
 5017 0024 1A60     		str	r2, [r3]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 5018              		.loc 1 2988 0
 5019 0026 204B     		ldr	r3, .L334+8
 5020 0028 1B78     		ldrb	r3, [r3]
 5021 002a DBB2     		uxtb	r3, r3
 5022 002c 1A04     		lsl	r2, r3, #16
 5023 002e 7B68     		ldr	r3, [r7, #4]
 5024 0030 1B68     		ldr	r3, [r3]
 5025 0032 1A43     		orr	r2, r3
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 142


 5026 0034 7B68     		ldr	r3, [r7, #4]
 5027 0036 1A60     		str	r2, [r3]
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 5028              		.loc 1 2989 0
 5029 0038 1C4B     		ldr	r3, .L334+12
 5030 003a 1B78     		ldrb	r3, [r3]
 5031 003c DBB2     		uxtb	r3, r3
 5032 003e 1A06     		lsl	r2, r3, #24
 5033 0040 7B68     		ldr	r3, [r7, #4]
 5034 0042 1B68     		ldr	r3, [r3]
 5035 0044 1A43     		orr	r2, r3
 5036 0046 7B68     		ldr	r3, [r7, #4]
 5037 0048 1A60     		str	r2, [r3]
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 5038              		.loc 1 2991 0
 5039 004a 7B68     		ldr	r3, [r7, #4]
 5040 004c 0433     		add	r3, r3, #4
 5041 004e 184A     		ldr	r2, .L334+16
 5042 0050 1278     		ldrb	r2, [r2]
 5043 0052 D2B2     		uxtb	r2, r2
 5044 0054 1A60     		str	r2, [r3]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 5045              		.loc 1 2992 0
 5046 0056 174B     		ldr	r3, .L334+20
 5047 0058 1B78     		ldrb	r3, [r3]
 5048 005a DBB2     		uxtb	r3, r3
 5049 005c 1902     		lsl	r1, r3, #8
 5050 005e 7B68     		ldr	r3, [r7, #4]
 5051 0060 0433     		add	r3, r3, #4
 5052 0062 7A68     		ldr	r2, [r7, #4]
 5053 0064 0432     		add	r2, r2, #4
 5054 0066 1268     		ldr	r2, [r2]
 5055 0068 0A43     		orr	r2, r1
 5056 006a 1A60     		str	r2, [r3]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 5057              		.loc 1 2993 0
 5058 006c 124B     		ldr	r3, .L334+24
 5059 006e 1B78     		ldrb	r3, [r3]
 5060 0070 DBB2     		uxtb	r3, r3
 5061 0072 1904     		lsl	r1, r3, #16
 5062 0074 7B68     		ldr	r3, [r7, #4]
 5063 0076 0433     		add	r3, r3, #4
 5064 0078 7A68     		ldr	r2, [r7, #4]
 5065 007a 0432     		add	r2, r2, #4
 5066 007c 1268     		ldr	r2, [r2]
 5067 007e 0A43     		orr	r2, r1
 5068 0080 1A60     		str	r2, [r3]
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 5069              		.loc 1 2994 0
 5070 0082 0E4B     		ldr	r3, .L334+28
 5071 0084 1B78     		ldrb	r3, [r3]
 5072 0086 DBB2     		uxtb	r3, r3
 5073 0088 1906     		lsl	r1, r3, #24
 5074 008a 7B68     		ldr	r3, [r7, #4]
 5075 008c 0433     		add	r3, r3, #4
 5076 008e 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 143


 5077 0090 0432     		add	r2, r2, #4
 5078 0092 1268     		ldr	r2, [r2]
 5079 0094 0A43     		orr	r2, r1
 5080 0096 1A60     		str	r2, [r3]
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 5081              		.loc 1 3006 0
 5082 0098 BD46     		mov	sp, r7
 5083 009a 02B0     		add	sp, sp, #8
 5084              		@ sp needed
 5085 009c 80BD     		pop	{r7, pc}
 5086              	.L335:
 5087 009e C046     		.align	2
 5088              	.L334:
 5089 00a0 78F2FF0F 		.word	268431992
 5090 00a4 79F2FF0F 		.word	268431993
 5091 00a8 7AF2FF0F 		.word	268431994
 5092 00ac 7BF2FF0F 		.word	268431995
 5093 00b0 7CF2FF0F 		.word	268431996
 5094 00b4 7DF2FF0F 		.word	268431997
 5095 00b8 7EF2FF0F 		.word	268431998
 5096 00bc 7FF2FF0F 		.word	268431999
 5097              		.cfi_endproc
 5098              	.LFE69:
 5099              		.size	CyGetUniqueId, .-CyGetUniqueId
 5100              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 5101              		.align	2
 5102              		.global	CySysSetRamAccessArbPriority
 5103              		.code	16
 5104              		.thumb_func
 5105              		.type	CySysSetRamAccessArbPriority, %function
 5106              	CySysSetRamAccessArbPriority:
 5107              	.LFB70:
3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** 
3009:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3010:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3011:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3012:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3013:Generated_Source\PSoC4/CyLib.c ****     *
3014:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3015:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3016:Generated_Source\PSoC4/CyLib.c ****     *  details.
3017:Generated_Source\PSoC4/CyLib.c ****     *
3018:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3019:Generated_Source\PSoC4/CyLib.c ****     *
3020:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 144


3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3024:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3025:Generated_Source\PSoC4/CyLib.c ****     *
3026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3027:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3028:Generated_Source\PSoC4/CyLib.c ****     {
 5108              		.loc 1 3028 0
 5109              		.cfi_startproc
 5110 0000 80B5     		push	{r7, lr}
 5111              		.cfi_def_cfa_offset 8
 5112              		.cfi_offset 7, -8
 5113              		.cfi_offset 14, -4
 5114 0002 84B0     		sub	sp, sp, #16
 5115              		.cfi_def_cfa_offset 24
 5116 0004 00AF     		add	r7, sp, #0
 5117              		.cfi_def_cfa_register 7
 5118 0006 7860     		str	r0, [r7, #4]
3029:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 5119              		.loc 1 3031 0
 5120 0008 094B     		ldr	r3, .L337
 5121 000a 1B68     		ldr	r3, [r3]
 5122 000c 094A     		ldr	r2, .L337+4
 5123 000e 1340     		and	r3, r2
 5124 0010 FB60     		str	r3, [r7, #12]
3032:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 5125              		.loc 1 3032 0
 5126 0012 7B68     		ldr	r3, [r7, #4]
 5127 0014 5A04     		lsl	r2, r3, #17
 5128 0016 C023     		mov	r3, #192
 5129 0018 DB02     		lsl	r3, r3, #11
 5130 001a 1340     		and	r3, r2
 5131 001c FA68     		ldr	r2, [r7, #12]
 5132 001e 1343     		orr	r3, r2
 5133 0020 FB60     		str	r3, [r7, #12]
3033:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 5134              		.loc 1 3033 0
 5135 0022 034B     		ldr	r3, .L337
 5136 0024 FA68     		ldr	r2, [r7, #12]
 5137 0026 1A60     		str	r2, [r3]
3034:Generated_Source\PSoC4/CyLib.c ****     }
 5138              		.loc 1 3034 0
 5139 0028 BD46     		mov	sp, r7
 5140 002a 04B0     		add	sp, sp, #16
 5141              		@ sp needed
 5142 002c 80BD     		pop	{r7, pc}
 5143              	.L338:
 5144 002e C046     		.align	2
 5145              	.L337:
 5146 0030 38001040 		.word	1074790456
 5147 0034 FFFFF9FF 		.word	-393217
 5148              		.cfi_endproc
 5149              	.LFE70:
 5150              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 145


 5151              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 5152              		.align	2
 5153              		.global	CySysSetFlashAccessArbPriority
 5154              		.code	16
 5155              		.thumb_func
 5156              		.type	CySysSetFlashAccessArbPriority, %function
 5157              	CySysSetFlashAccessArbPriority:
 5158              	.LFB71:
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c **** 
3037:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3038:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3039:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3040:Generated_Source\PSoC4/CyLib.c ****     *
3041:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3042:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3043:Generated_Source\PSoC4/CyLib.c ****     *  details.
3044:Generated_Source\PSoC4/CyLib.c ****     *
3045:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3046:Generated_Source\PSoC4/CyLib.c ****     *
3047:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3051:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3052:Generated_Source\PSoC4/CyLib.c ****     *
3053:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3054:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3055:Generated_Source\PSoC4/CyLib.c ****     {
 5159              		.loc 1 3055 0
 5160              		.cfi_startproc
 5161 0000 80B5     		push	{r7, lr}
 5162              		.cfi_def_cfa_offset 8
 5163              		.cfi_offset 7, -8
 5164              		.cfi_offset 14, -4
 5165 0002 84B0     		sub	sp, sp, #16
 5166              		.cfi_def_cfa_offset 24
 5167 0004 00AF     		add	r7, sp, #0
 5168              		.cfi_def_cfa_register 7
 5169 0006 7860     		str	r0, [r7, #4]
3056:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3057:Generated_Source\PSoC4/CyLib.c **** 
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 5170              		.loc 1 3058 0
 5171 0008 094B     		ldr	r3, .L340
 5172 000a 1B68     		ldr	r3, [r3]
 5173 000c 094A     		ldr	r2, .L340+4
 5174 000e 1340     		and	r3, r2
 5175 0010 FB60     		str	r3, [r7, #12]
3059:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 5176              		.loc 1 3059 0
 5177 0012 7B68     		ldr	r3, [r7, #4]
 5178 0014 5A04     		lsl	r2, r3, #17
 5179 0016 C023     		mov	r3, #192
 5180 0018 DB02     		lsl	r3, r3, #11
 5181 001a 1340     		and	r3, r2
 5182 001c FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 146


 5183 001e 1343     		orr	r3, r2
 5184 0020 FB60     		str	r3, [r7, #12]
3060:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 5185              		.loc 1 3060 0
 5186 0022 034B     		ldr	r3, .L340
 5187 0024 FA68     		ldr	r2, [r7, #12]
 5188 0026 1A60     		str	r2, [r3]
3061:Generated_Source\PSoC4/CyLib.c ****     }
 5189              		.loc 1 3061 0
 5190 0028 BD46     		mov	sp, r7
 5191 002a 04B0     		add	sp, sp, #16
 5192              		@ sp needed
 5193 002c 80BD     		pop	{r7, pc}
 5194              	.L341:
 5195 002e C046     		.align	2
 5196              	.L340:
 5197 0030 30001040 		.word	1074790448
 5198 0034 FFFFF9FF 		.word	-393217
 5199              		.cfi_endproc
 5200              	.LFE71:
 5201              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 5202              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 5203              		.align	2
 5204              		.global	CySysSetDmacAccessArbPriority
 5205              		.code	16
 5206              		.thumb_func
 5207              		.type	CySysSetDmacAccessArbPriority, %function
 5208              	CySysSetDmacAccessArbPriority:
 5209              	.LFB72:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3066:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c ****     *
3068:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3069:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3070:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3071:Generated_Source\PSoC4/CyLib.c ****     *
3072:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3073:Generated_Source\PSoC4/CyLib.c ****     *
3074:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3078:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3079:Generated_Source\PSoC4/CyLib.c ****     *
3080:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3081:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3082:Generated_Source\PSoC4/CyLib.c ****     {
 5210              		.loc 1 3082 0
 5211              		.cfi_startproc
 5212 0000 80B5     		push	{r7, lr}
 5213              		.cfi_def_cfa_offset 8
 5214              		.cfi_offset 7, -8
 5215              		.cfi_offset 14, -4
 5216 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 147


 5217              		.cfi_def_cfa_offset 24
 5218 0004 00AF     		add	r7, sp, #0
 5219              		.cfi_def_cfa_register 7
 5220 0006 7860     		str	r0, [r7, #4]
3083:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3084:Generated_Source\PSoC4/CyLib.c **** 
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 5221              		.loc 1 3085 0
 5222 0008 094B     		ldr	r3, .L343
 5223 000a 1B68     		ldr	r3, [r3]
 5224 000c 094A     		ldr	r2, .L343+4
 5225 000e 1340     		and	r3, r2
 5226 0010 FB60     		str	r3, [r7, #12]
3086:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 5227              		.loc 1 3086 0
 5228 0012 7B68     		ldr	r3, [r7, #4]
 5229 0014 5A04     		lsl	r2, r3, #17
 5230 0016 C023     		mov	r3, #192
 5231 0018 DB02     		lsl	r3, r3, #11
 5232 001a 1340     		and	r3, r2
 5233 001c FA68     		ldr	r2, [r7, #12]
 5234 001e 1343     		orr	r3, r2
 5235 0020 FB60     		str	r3, [r7, #12]
3087:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 5236              		.loc 1 3087 0
 5237 0022 034B     		ldr	r3, .L343
 5238 0024 FA68     		ldr	r2, [r7, #12]
 5239 0026 1A60     		str	r2, [r3]
3088:Generated_Source\PSoC4/CyLib.c ****     }
 5240              		.loc 1 3088 0
 5241 0028 BD46     		mov	sp, r7
 5242 002a 04B0     		add	sp, sp, #16
 5243              		@ sp needed
 5244 002c 80BD     		pop	{r7, pc}
 5245              	.L344:
 5246 002e C046     		.align	2
 5247              	.L343:
 5248 0030 3C001040 		.word	1074790460
 5249 0034 FFFFF9FF 		.word	-393217
 5250              		.cfi_endproc
 5251              	.LFE72:
 5252              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 5253              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 5254              		.align	2
 5255              		.global	CySysSetPeripheralAccessArbPriority
 5256              		.code	16
 5257              		.thumb_func
 5258              		.type	CySysSetPeripheralAccessArbPriority, %function
 5259              	CySysSetPeripheralAccessArbPriority:
 5260              	.LFB73:
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c ****     *
3095:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 148


3096:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3097:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3098:Generated_Source\PSoC4/CyLib.c ****     *
3099:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3100:Generated_Source\PSoC4/CyLib.c ****     *
3101:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3102:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3103:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3107:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3108:Generated_Source\PSoC4/CyLib.c ****     *
3109:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3110:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3111:Generated_Source\PSoC4/CyLib.c ****     {
 5261              		.loc 1 3111 0
 5262              		.cfi_startproc
 5263 0000 80B5     		push	{r7, lr}
 5264              		.cfi_def_cfa_offset 8
 5265              		.cfi_offset 7, -8
 5266              		.cfi_offset 14, -4
 5267 0002 84B0     		sub	sp, sp, #16
 5268              		.cfi_def_cfa_offset 24
 5269 0004 00AF     		add	r7, sp, #0
 5270              		.cfi_def_cfa_register 7
 5271 0006 7860     		str	r0, [r7, #4]
 5272 0008 3960     		str	r1, [r7]
3112:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 5273              		.loc 1 3114 0
 5274 000a 7B68     		ldr	r3, [r7, #4]
 5275 000c 002B     		cmp	r3, #0
 5276 000e 10D1     		bne	.L346
3115:Generated_Source\PSoC4/CyLib.c ****         {
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 5277              		.loc 1 3116 0
 5278 0010 1F4B     		ldr	r3, .L350
 5279 0012 1B68     		ldr	r3, [r3]
 5280 0014 1F4A     		ldr	r2, .L350+4
 5281 0016 1340     		and	r3, r2
 5282 0018 FB60     		str	r3, [r7, #12]
3117:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 5283              		.loc 1 3117 0
 5284 001a 3B68     		ldr	r3, [r7]
 5285 001c 5A04     		lsl	r2, r3, #17
 5286 001e C023     		mov	r3, #192
 5287 0020 DB02     		lsl	r3, r3, #11
 5288 0022 1340     		and	r3, r2
 5289 0024 FA68     		ldr	r2, [r7, #12]
 5290 0026 1343     		orr	r3, r2
 5291 0028 FB60     		str	r3, [r7, #12]
3118:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 5292              		.loc 1 3118 0
 5293 002a 194B     		ldr	r3, .L350
 5294 002c FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 149


 5295 002e 1A60     		str	r2, [r3]
 5296 0030 2AE0     		b	.L345
 5297              	.L346:
3119:Generated_Source\PSoC4/CyLib.c ****         } else
3120:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3121:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 5298              		.loc 1 3121 0
 5299 0032 7B68     		ldr	r3, [r7, #4]
 5300 0034 012B     		cmp	r3, #1
 5301 0036 10D1     		bne	.L348
3122:Generated_Source\PSoC4/CyLib.c ****         {
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 5302              		.loc 1 3123 0
 5303 0038 174B     		ldr	r3, .L350+8
 5304 003a 1B68     		ldr	r3, [r3]
 5305 003c 154A     		ldr	r2, .L350+4
 5306 003e 1340     		and	r3, r2
 5307 0040 FB60     		str	r3, [r7, #12]
3124:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 5308              		.loc 1 3124 0
 5309 0042 3B68     		ldr	r3, [r7]
 5310 0044 5A04     		lsl	r2, r3, #17
 5311 0046 C023     		mov	r3, #192
 5312 0048 DB02     		lsl	r3, r3, #11
 5313 004a 1340     		and	r3, r2
 5314 004c FA68     		ldr	r2, [r7, #12]
 5315 004e 1343     		orr	r3, r2
 5316 0050 FB60     		str	r3, [r7, #12]
3125:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 5317              		.loc 1 3125 0
 5318 0052 114B     		ldr	r3, .L350+8
 5319 0054 FA68     		ldr	r2, [r7, #12]
 5320 0056 1A60     		str	r2, [r3]
 5321 0058 16E0     		b	.L345
 5322              	.L348:
3126:Generated_Source\PSoC4/CyLib.c ****         } else
3127:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3128:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3129:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 5323              		.loc 1 3129 0
 5324 005a 7B68     		ldr	r3, [r7, #4]
 5325 005c 022B     		cmp	r3, #2
 5326 005e 10D1     		bne	.L349
3130:Generated_Source\PSoC4/CyLib.c ****         {
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 5327              		.loc 1 3131 0
 5328 0060 0E4B     		ldr	r3, .L350+12
 5329 0062 1B68     		ldr	r3, [r3]
 5330 0064 0B4A     		ldr	r2, .L350+4
 5331 0066 1340     		and	r3, r2
 5332 0068 FB60     		str	r3, [r7, #12]
3132:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 5333              		.loc 1 3132 0
 5334 006a 3B68     		ldr	r3, [r7]
 5335 006c 5A04     		lsl	r2, r3, #17
 5336 006e C023     		mov	r3, #192
 5337 0070 DB02     		lsl	r3, r3, #11
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 150


 5338 0072 1340     		and	r3, r2
 5339 0074 FA68     		ldr	r2, [r7, #12]
 5340 0076 1343     		orr	r3, r2
 5341 0078 FB60     		str	r3, [r7, #12]
3133:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 5342              		.loc 1 3133 0
 5343 007a 084B     		ldr	r3, .L350+12
 5344 007c FA68     		ldr	r2, [r7, #12]
 5345 007e 1A60     		str	r2, [r3]
 5346 0080 02E0     		b	.L345
 5347              	.L349:
3134:Generated_Source\PSoC4/CyLib.c ****         } else
3135:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3136:Generated_Source\PSoC4/CyLib.c ****         {
3137:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3138:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 5348              		.loc 1 3138 0 discriminator 1
 5349 0082 0020     		mov	r0, #0
 5350 0084 FFF7FEFF 		bl	CyHalt
 5351              	.L345:
3139:Generated_Source\PSoC4/CyLib.c ****         }
3140:Generated_Source\PSoC4/CyLib.c ****     }
 5352              		.loc 1 3140 0
 5353 0088 BD46     		mov	sp, r7
 5354 008a 04B0     		add	sp, sp, #16
 5355              		@ sp needed
 5356 008c 80BD     		pop	{r7, pc}
 5357              	.L351:
 5358 008e C046     		.align	2
 5359              	.L350:
 5360 0090 00011040 		.word	1074790656
 5361 0094 FFFFF9FF 		.word	-393217
 5362 0098 04011040 		.word	1074790660
 5363 009c 08011040 		.word	1074790664
 5364              		.cfi_endproc
 5365              	.LFE73:
 5366              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 5367              		.text
 5368              	.Letext0:
 5369              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 5370              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 5371              		.section	.debug_info,"",%progbits
 5372              	.Ldebug_info0:
 5373 0000 CA110000 		.4byte	0x11ca
 5374 0004 0400     		.2byte	0x4
 5375 0006 00000000 		.4byte	.Ldebug_abbrev0
 5376 000a 04       		.byte	0x4
 5377 000b 01       		.uleb128 0x1
 5378 000c 73090000 		.4byte	.LASF172
 5379 0010 01       		.byte	0x1
 5380 0011 3F0A0000 		.4byte	.LASF173
 5381 0015 24040000 		.4byte	.LASF174
 5382 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5383 001d 00000000 		.4byte	0
 5384 0021 00000000 		.4byte	.Ldebug_line0
 5385 0025 02       		.uleb128 0x2
 5386 0026 01       		.byte	0x1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 151


 5387 0027 06       		.byte	0x6
 5388 0028 86010000 		.4byte	.LASF0
 5389 002c 02       		.uleb128 0x2
 5390 002d 01       		.byte	0x1
 5391 002e 08       		.byte	0x8
 5392 002f 3C070000 		.4byte	.LASF1
 5393 0033 02       		.uleb128 0x2
 5394 0034 02       		.byte	0x2
 5395 0035 05       		.byte	0x5
 5396 0036 4A070000 		.4byte	.LASF2
 5397 003a 02       		.uleb128 0x2
 5398 003b 02       		.byte	0x2
 5399 003c 07       		.byte	0x7
 5400 003d 0A040000 		.4byte	.LASF3
 5401 0041 02       		.uleb128 0x2
 5402 0042 04       		.byte	0x4
 5403 0043 05       		.byte	0x5
 5404 0044 F8010000 		.4byte	.LASF4
 5405 0048 02       		.uleb128 0x2
 5406 0049 04       		.byte	0x4
 5407 004a 07       		.byte	0x7
 5408 004b 63030000 		.4byte	.LASF5
 5409 004f 02       		.uleb128 0x2
 5410 0050 08       		.byte	0x8
 5411 0051 05       		.byte	0x5
 5412 0052 78010000 		.4byte	.LASF6
 5413 0056 02       		.uleb128 0x2
 5414 0057 08       		.byte	0x8
 5415 0058 07       		.byte	0x7
 5416 0059 E9000000 		.4byte	.LASF7
 5417 005d 03       		.uleb128 0x3
 5418 005e 04       		.byte	0x4
 5419 005f 05       		.byte	0x5
 5420 0060 696E7400 		.ascii	"int\000"
 5421 0064 02       		.uleb128 0x2
 5422 0065 04       		.byte	0x4
 5423 0066 07       		.byte	0x7
 5424 0067 47030000 		.4byte	.LASF8
 5425 006b 04       		.uleb128 0x4
 5426 006c 1C020000 		.4byte	.LASF9
 5427 0070 02       		.byte	0x2
 5428 0071 B901     		.2byte	0x1b9
 5429 0073 2C000000 		.4byte	0x2c
 5430 0077 04       		.uleb128 0x4
 5431 0078 17000000 		.4byte	.LASF10
 5432 007c 02       		.byte	0x2
 5433 007d BA01     		.2byte	0x1ba
 5434 007f 3A000000 		.4byte	0x3a
 5435 0083 04       		.uleb128 0x4
 5436 0084 7A020000 		.4byte	.LASF11
 5437 0088 02       		.byte	0x2
 5438 0089 BB01     		.2byte	0x1bb
 5439 008b 48000000 		.4byte	0x48
 5440 008f 04       		.uleb128 0x4
 5441 0090 B7010000 		.4byte	.LASF12
 5442 0094 02       		.byte	0x2
 5443 0095 BE01     		.2byte	0x1be
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 152


 5444 0097 41000000 		.4byte	0x41
 5445 009b 02       		.uleb128 0x2
 5446 009c 04       		.byte	0x4
 5447 009d 04       		.byte	0x4
 5448 009e 8D060000 		.4byte	.LASF13
 5449 00a2 02       		.uleb128 0x2
 5450 00a3 08       		.byte	0x8
 5451 00a4 04       		.byte	0x4
 5452 00a5 3D020000 		.4byte	.LASF14
 5453 00a9 02       		.uleb128 0x2
 5454 00aa 01       		.byte	0x1
 5455 00ab 08       		.byte	0x8
 5456 00ac 0C080000 		.4byte	.LASF15
 5457 00b0 04       		.uleb128 0x4
 5458 00b1 6A090000 		.4byte	.LASF16
 5459 00b5 02       		.byte	0x2
 5460 00b6 5B02     		.2byte	0x25b
 5461 00b8 48000000 		.4byte	0x48
 5462 00bc 04       		.uleb128 0x4
 5463 00bd FF060000 		.4byte	.LASF17
 5464 00c1 02       		.byte	0x2
 5465 00c2 6302     		.2byte	0x263
 5466 00c4 C8000000 		.4byte	0xc8
 5467 00c8 05       		.uleb128 0x5
 5468 00c9 6B000000 		.4byte	0x6b
 5469 00cd 04       		.uleb128 0x4
 5470 00ce 89050000 		.4byte	.LASF18
 5471 00d2 02       		.byte	0x2
 5472 00d3 6502     		.2byte	0x265
 5473 00d5 D9000000 		.4byte	0xd9
 5474 00d9 05       		.uleb128 0x5
 5475 00da 83000000 		.4byte	0x83
 5476 00de 04       		.uleb128 0x4
 5477 00df 29080000 		.4byte	.LASF19
 5478 00e3 02       		.byte	0x2
 5479 00e4 7502     		.2byte	0x275
 5480 00e6 EA000000 		.4byte	0xea
 5481 00ea 06       		.uleb128 0x6
 5482 00eb 04       		.byte	0x4
 5483 00ec F0000000 		.4byte	0xf0
 5484 00f0 07       		.uleb128 0x7
 5485 00f1 02       		.uleb128 0x2
 5486 00f2 04       		.byte	0x4
 5487 00f3 07       		.byte	0x7
 5488 00f4 B2050000 		.4byte	.LASF20
 5489 00f8 08       		.uleb128 0x8
 5490 00f9 A2060000 		.4byte	.LASF21
 5491 00fd 03       		.byte	0x3
 5492 00fe F5       		.byte	0xf5
 5493 00ff EA000000 		.4byte	0xea
 5494 0103 09       		.uleb128 0x9
 5495 0104 0C       		.byte	0xc
 5496 0105 03       		.byte	0x3
 5497 0106 9601     		.2byte	0x196
 5498 0108 34010000 		.4byte	0x134
 5499 010c 0A       		.uleb128 0xa
 5500 010d 46080000 		.4byte	.LASF22
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 153


 5501 0111 03       		.byte	0x3
 5502 0112 9801     		.2byte	0x198
 5503 0114 83000000 		.4byte	0x83
 5504 0118 00       		.byte	0
 5505 0119 0A       		.uleb128 0xa
 5506 011a 18090000 		.4byte	.LASF23
 5507 011e 03       		.byte	0x3
 5508 011f 9901     		.2byte	0x199
 5509 0121 83000000 		.4byte	0x83
 5510 0125 04       		.byte	0x4
 5511 0126 0A       		.uleb128 0xa
 5512 0127 19010000 		.4byte	.LASF24
 5513 012b 03       		.byte	0x3
 5514 012c 9A01     		.2byte	0x19a
 5515 012e 83000000 		.4byte	0x83
 5516 0132 08       		.byte	0x8
 5517 0133 00       		.byte	0
 5518 0134 04       		.uleb128 0x4
 5519 0135 B9000000 		.4byte	.LASF25
 5520 0139 03       		.byte	0x3
 5521 013a 9B01     		.2byte	0x19b
 5522 013c 03010000 		.4byte	0x103
 5523 0140 09       		.uleb128 0x9
 5524 0141 18       		.byte	0x18
 5525 0142 03       		.byte	0x3
 5526 0143 9E01     		.2byte	0x19e
 5527 0145 57010000 		.4byte	0x157
 5528 0149 0B       		.uleb128 0xb
 5529 014a 706C6C00 		.ascii	"pll\000"
 5530 014e 03       		.byte	0x3
 5531 014f A001     		.2byte	0x1a0
 5532 0151 57010000 		.4byte	0x157
 5533 0155 00       		.byte	0
 5534 0156 00       		.byte	0
 5535 0157 0C       		.uleb128 0xc
 5536 0158 34010000 		.4byte	0x134
 5537 015c 67010000 		.4byte	0x167
 5538 0160 0D       		.uleb128 0xd
 5539 0161 F1000000 		.4byte	0xf1
 5540 0165 01       		.byte	0x1
 5541 0166 00       		.byte	0
 5542 0167 04       		.uleb128 0x4
 5543 0168 AF0A0000 		.4byte	.LASF26
 5544 016c 03       		.byte	0x3
 5545 016d A101     		.2byte	0x1a1
 5546 016f 40010000 		.4byte	0x140
 5547 0173 0E       		.uleb128 0xe
 5548 0174 160A0000 		.4byte	.LASF27
 5549 0178 01       		.byte	0x1
 5550 0179 6B       		.byte	0x6b
 5551 017a 00000000 		.4byte	.LFB1
 5552 017e 20000000 		.4byte	.LFE1-.LFB1
 5553 0182 01       		.uleb128 0x1
 5554 0183 9C       		.byte	0x9c
 5555 0184 0E       		.uleb128 0xe
 5556 0185 96030000 		.4byte	.LASF28
 5557 0189 01       		.byte	0x1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 154


 5558 018a 8B       		.byte	0x8b
 5559 018b 00000000 		.4byte	.LFB2
 5560 018f 20000000 		.4byte	.LFE2-.LFB2
 5561 0193 01       		.uleb128 0x1
 5562 0194 9C       		.byte	0x9c
 5563 0195 0F       		.uleb128 0xf
 5564 0196 CA020000 		.4byte	.LASF39
 5565 019a 01       		.byte	0x1
 5566 019b AF       		.byte	0xaf
 5567 019c 00000000 		.4byte	.LFB3
 5568 01a0 54010000 		.4byte	.LFE3-.LFB3
 5569 01a4 01       		.uleb128 0x1
 5570 01a5 9C       		.byte	0x9c
 5571 01a6 FD010000 		.4byte	0x1fd
 5572 01aa 10       		.uleb128 0x10
 5573 01ab 6900     		.ascii	"i\000"
 5574 01ad 01       		.byte	0x1
 5575 01ae B2       		.byte	0xb2
 5576 01af 83000000 		.4byte	0x83
 5577 01b3 02       		.uleb128 0x2
 5578 01b4 91       		.byte	0x91
 5579 01b5 6C       		.sleb128 -20
 5580 01b6 11       		.uleb128 0x11
 5581 01b7 92010000 		.4byte	.LASF29
 5582 01bb 01       		.byte	0x1
 5583 01bc B5       		.byte	0xb5
 5584 01bd 83000000 		.4byte	0x83
 5585 01c1 02       		.uleb128 0x2
 5586 01c2 91       		.byte	0x91
 5587 01c3 68       		.sleb128 -24
 5588 01c4 11       		.uleb128 0x11
 5589 01c5 A8010000 		.4byte	.LASF30
 5590 01c9 01       		.byte	0x1
 5591 01ca B6       		.byte	0xb6
 5592 01cb 6B000000 		.4byte	0x6b
 5593 01cf 02       		.uleb128 0x2
 5594 01d0 91       		.byte	0x91
 5595 01d1 5F       		.sleb128 -33
 5596 01d2 11       		.uleb128 0x11
 5597 01d3 1D040000 		.4byte	.LASF31
 5598 01d7 01       		.byte	0x1
 5599 01d8 B7       		.byte	0xb7
 5600 01d9 83000000 		.4byte	0x83
 5601 01dd 02       		.uleb128 0x2
 5602 01de 91       		.byte	0x91
 5603 01df 64       		.sleb128 -28
 5604 01e0 11       		.uleb128 0x11
 5605 01e1 E1030000 		.4byte	.LASF32
 5606 01e5 01       		.byte	0x1
 5607 01e6 B8       		.byte	0xb8
 5608 01e7 83000000 		.4byte	0x83
 5609 01eb 02       		.uleb128 0x2
 5610 01ec 91       		.byte	0x91
 5611 01ed 60       		.sleb128 -32
 5612 01ee 11       		.uleb128 0x11
 5613 01ef 9E080000 		.4byte	.LASF33
 5614 01f3 01       		.byte	0x1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 155


 5615 01f4 B9       		.byte	0xb9
 5616 01f5 D9000000 		.4byte	0xd9
 5617 01f9 02       		.uleb128 0x2
 5618 01fa 91       		.byte	0x91
 5619 01fb 58       		.sleb128 -40
 5620 01fc 00       		.byte	0
 5621 01fd 12       		.uleb128 0x12
 5622 01fe 5F050000 		.4byte	.LASF34
 5623 0202 01       		.byte	0x1
 5624 0203 1D01     		.2byte	0x11d
 5625 0205 00000000 		.4byte	.LFB4
 5626 0209 1C000000 		.4byte	.LFE4-.LFB4
 5627 020d 01       		.uleb128 0x1
 5628 020e 9C       		.byte	0x9c
 5629 020f 13       		.uleb128 0x13
 5630 0210 DA010000 		.4byte	.LASF37
 5631 0214 01       		.byte	0x1
 5632 0215 3001     		.2byte	0x130
 5633 0217 83000000 		.4byte	0x83
 5634 021b 00000000 		.4byte	.LFB5
 5635 021f 20000000 		.4byte	.LFE5-.LFB5
 5636 0223 01       		.uleb128 0x1
 5637 0224 9C       		.byte	0x9c
 5638 0225 12       		.uleb128 0x12
 5639 0226 44020000 		.4byte	.LASF35
 5640 022a 01       		.byte	0x1
 5641 022b 4B01     		.2byte	0x14b
 5642 022d 00000000 		.4byte	.LFB6
 5643 0231 50000000 		.4byte	.LFE6-.LFB6
 5644 0235 01       		.uleb128 0x1
 5645 0236 9C       		.byte	0x9c
 5646 0237 12       		.uleb128 0x12
 5647 0238 95040000 		.4byte	.LASF36
 5648 023c 01       		.byte	0x1
 5649 023d 6B01     		.2byte	0x16b
 5650 023f 00000000 		.4byte	.LFB7
 5651 0243 34000000 		.4byte	.LFE7-.LFB7
 5652 0247 01       		.uleb128 0x1
 5653 0248 9C       		.byte	0x9c
 5654 0249 13       		.uleb128 0x13
 5655 024a EB040000 		.4byte	.LASF38
 5656 024e 01       		.byte	0x1
 5657 024f 8401     		.2byte	0x184
 5658 0251 83000000 		.4byte	0x83
 5659 0255 00000000 		.4byte	.LFB8
 5660 0259 20000000 		.4byte	.LFE8-.LFB8
 5661 025d 01       		.uleb128 0x1
 5662 025e 9C       		.byte	0x9c
 5663 025f 14       		.uleb128 0x14
 5664 0260 2D000000 		.4byte	.LASF40
 5665 0264 01       		.byte	0x1
 5666 0265 AD01     		.2byte	0x1ad
 5667 0267 00000000 		.4byte	.LFB9
 5668 026b 70000000 		.4byte	.LFE9-.LFB9
 5669 026f 01       		.uleb128 0x1
 5670 0270 9C       		.byte	0x9c
 5671 0271 A3020000 		.4byte	0x2a3
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 156


 5672 0275 15       		.uleb128 0x15
 5673 0276 85070000 		.4byte	.LASF43
 5674 027a 01       		.byte	0x1
 5675 027b AD01     		.2byte	0x1ad
 5676 027d 83000000 		.4byte	0x83
 5677 0281 02       		.uleb128 0x2
 5678 0282 91       		.byte	0x91
 5679 0283 64       		.sleb128 -28
 5680 0284 16       		.uleb128 0x16
 5681 0285 A8010000 		.4byte	.LASF30
 5682 0289 01       		.byte	0x1
 5683 028a AF01     		.2byte	0x1af
 5684 028c 6B000000 		.4byte	0x6b
 5685 0290 02       		.uleb128 0x2
 5686 0291 91       		.byte	0x91
 5687 0292 6B       		.sleb128 -21
 5688 0293 16       		.uleb128 0x16
 5689 0294 5E0A0000 		.4byte	.LASF41
 5690 0298 01       		.byte	0x1
 5691 0299 B001     		.2byte	0x1b0
 5692 029b 83000000 		.4byte	0x83
 5693 029f 02       		.uleb128 0x2
 5694 02a0 91       		.byte	0x91
 5695 02a1 6C       		.sleb128 -20
 5696 02a2 00       		.byte	0
 5697 02a3 17       		.uleb128 0x17
 5698 02a4 75000000 		.4byte	.LASF42
 5699 02a8 01       		.byte	0x1
 5700 02a9 D901     		.2byte	0x1d9
 5701 02ab 00000000 		.4byte	.LFB10
 5702 02af 50000000 		.4byte	.LFE10-.LFB10
 5703 02b3 01       		.uleb128 0x1
 5704 02b4 9C       		.byte	0x9c
 5705 02b5 C9020000 		.4byte	0x2c9
 5706 02b9 15       		.uleb128 0x15
 5707 02ba 36020000 		.4byte	.LASF44
 5708 02be 01       		.byte	0x1
 5709 02bf D901     		.2byte	0x1d9
 5710 02c1 83000000 		.4byte	0x83
 5711 02c5 02       		.uleb128 0x2
 5712 02c6 91       		.byte	0x91
 5713 02c7 74       		.sleb128 -12
 5714 02c8 00       		.byte	0
 5715 02c9 18       		.uleb128 0x18
 5716 02ca B2020000 		.4byte	.LASF56
 5717 02ce 01       		.byte	0x1
 5718 02cf FE01     		.2byte	0x1fe
 5719 02d1 83000000 		.4byte	0x83
 5720 02d5 00000000 		.4byte	.LFB11
 5721 02d9 4C000000 		.4byte	.LFE11-.LFB11
 5722 02dd 01       		.uleb128 0x1
 5723 02de 9C       		.byte	0x9c
 5724 02df 02030000 		.4byte	0x302
 5725 02e3 16       		.uleb128 0x16
 5726 02e4 A8010000 		.4byte	.LASF30
 5727 02e8 01       		.byte	0x1
 5728 02e9 0002     		.2byte	0x200
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 157


 5729 02eb 6B000000 		.4byte	0x6b
 5730 02ef 02       		.uleb128 0x2
 5731 02f0 91       		.byte	0x91
 5732 02f1 6B       		.sleb128 -21
 5733 02f2 16       		.uleb128 0x16
 5734 02f3 05060000 		.4byte	.LASF45
 5735 02f7 01       		.byte	0x1
 5736 02f8 0102     		.2byte	0x201
 5737 02fa 83000000 		.4byte	0x83
 5738 02fe 02       		.uleb128 0x2
 5739 02ff 91       		.byte	0x91
 5740 0300 6C       		.sleb128 -20
 5741 0301 00       		.byte	0
 5742 0302 14       		.uleb128 0x14
 5743 0303 4D080000 		.4byte	.LASF46
 5744 0307 01       		.byte	0x1
 5745 0308 3502     		.2byte	0x235
 5746 030a 00000000 		.4byte	.LFB12
 5747 030e 44000000 		.4byte	.LFE12-.LFB12
 5748 0312 01       		.uleb128 0x1
 5749 0313 9C       		.byte	0x9c
 5750 0314 37030000 		.4byte	0x337
 5751 0318 15       		.uleb128 0x15
 5752 0319 62090000 		.4byte	.LASF47
 5753 031d 01       		.byte	0x1
 5754 031e 3502     		.2byte	0x235
 5755 0320 83000000 		.4byte	0x83
 5756 0324 02       		.uleb128 0x2
 5757 0325 91       		.byte	0x91
 5758 0326 64       		.sleb128 -28
 5759 0327 16       		.uleb128 0x16
 5760 0328 A8010000 		.4byte	.LASF30
 5761 032c 01       		.byte	0x1
 5762 032d 3702     		.2byte	0x237
 5763 032f 6B000000 		.4byte	0x6b
 5764 0333 02       		.uleb128 0x2
 5765 0334 91       		.byte	0x91
 5766 0335 6F       		.sleb128 -17
 5767 0336 00       		.byte	0
 5768 0337 14       		.uleb128 0x14
 5769 0338 C5040000 		.4byte	.LASF48
 5770 033c 01       		.byte	0x1
 5771 033d 6F02     		.2byte	0x26f
 5772 033f 00000000 		.4byte	.LFB13
 5773 0343 64020000 		.4byte	.LFE13-.LFB13
 5774 0347 01       		.uleb128 0x1
 5775 0348 9C       		.byte	0x9c
 5776 0349 D5030000 		.4byte	0x3d5
 5777 034d 15       		.uleb128 0x15
 5778 034e 92010000 		.4byte	.LASF29
 5779 0352 01       		.byte	0x1
 5780 0353 6F02     		.2byte	0x26f
 5781 0355 83000000 		.4byte	0x83
 5782 0359 02       		.uleb128 0x2
 5783 035a 91       		.byte	0x91
 5784 035b 5C       		.sleb128 -36
 5785 035c 16       		.uleb128 0x16
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 158


 5786 035d 0F000000 		.4byte	.LASF49
 5787 0361 01       		.byte	0x1
 5788 0362 7502     		.2byte	0x275
 5789 0364 6B000000 		.4byte	0x6b
 5790 0368 02       		.uleb128 0x2
 5791 0369 91       		.byte	0x91
 5792 036a 6F       		.sleb128 -17
 5793 036b 16       		.uleb128 0x16
 5794 036c FD050000 		.4byte	.LASF50
 5795 0370 01       		.byte	0x1
 5796 0371 7602     		.2byte	0x276
 5797 0373 6B000000 		.4byte	0x6b
 5798 0377 02       		.uleb128 0x2
 5799 0378 91       		.byte	0x91
 5800 0379 6E       		.sleb128 -18
 5801 037a 16       		.uleb128 0x16
 5802 037b 270A0000 		.4byte	.LASF51
 5803 037f 01       		.byte	0x1
 5804 0380 7702     		.2byte	0x277
 5805 0382 6B000000 		.4byte	0x6b
 5806 0386 02       		.uleb128 0x2
 5807 0387 91       		.byte	0x91
 5808 0388 62       		.sleb128 -30
 5809 0389 16       		.uleb128 0x16
 5810 038a D4000000 		.4byte	.LASF52
 5811 038e 01       		.byte	0x1
 5812 038f 7802     		.2byte	0x278
 5813 0391 6B000000 		.4byte	0x6b
 5814 0395 02       		.uleb128 0x2
 5815 0396 91       		.byte	0x91
 5816 0397 6D       		.sleb128 -19
 5817 0398 16       		.uleb128 0x16
 5818 0399 87080000 		.4byte	.LASF53
 5819 039d 01       		.byte	0x1
 5820 039e 7902     		.2byte	0x279
 5821 03a0 6B000000 		.4byte	0x6b
 5822 03a4 02       		.uleb128 0x2
 5823 03a5 91       		.byte	0x91
 5824 03a6 6C       		.sleb128 -20
 5825 03a7 16       		.uleb128 0x16
 5826 03a8 F0010000 		.4byte	.LASF54
 5827 03ac 01       		.byte	0x1
 5828 03ad 7D02     		.2byte	0x27d
 5829 03af 83000000 		.4byte	0x83
 5830 03b3 02       		.uleb128 0x2
 5831 03b4 91       		.byte	0x91
 5832 03b5 68       		.sleb128 -24
 5833 03b6 16       		.uleb128 0x16
 5834 03b7 01050000 		.4byte	.LASF55
 5835 03bb 01       		.byte	0x1
 5836 03bc 8102     		.2byte	0x281
 5837 03be 83000000 		.4byte	0x83
 5838 03c2 02       		.uleb128 0x2
 5839 03c3 91       		.byte	0x91
 5840 03c4 64       		.sleb128 -28
 5841 03c5 16       		.uleb128 0x16
 5842 03c6 A8010000 		.4byte	.LASF30
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 159


 5843 03ca 01       		.byte	0x1
 5844 03cb 8402     		.2byte	0x284
 5845 03cd 6B000000 		.4byte	0x6b
 5846 03d1 02       		.uleb128 0x2
 5847 03d2 91       		.byte	0x91
 5848 03d3 63       		.sleb128 -29
 5849 03d4 00       		.byte	0
 5850 03d5 18       		.uleb128 0x18
 5851 03d6 96070000 		.4byte	.LASF57
 5852 03da 01       		.byte	0x1
 5853 03db 0304     		.2byte	0x403
 5854 03dd B0000000 		.4byte	0xb0
 5855 03e1 00000000 		.4byte	.LFB14
 5856 03e5 68000000 		.4byte	.LFE14-.LFB14
 5857 03e9 01       		.uleb128 0x1
 5858 03ea 9C       		.byte	0x9c
 5859 03eb 0E040000 		.4byte	0x40e
 5860 03ef 15       		.uleb128 0x15
 5861 03f0 58090000 		.4byte	.LASF58
 5862 03f4 01       		.byte	0x1
 5863 03f5 0304     		.2byte	0x403
 5864 03f7 83000000 		.4byte	0x83
 5865 03fb 02       		.uleb128 0x2
 5866 03fc 91       		.byte	0x91
 5867 03fd 6C       		.sleb128 -20
 5868 03fe 16       		.uleb128 0x16
 5869 03ff 9E050000 		.4byte	.LASF59
 5870 0403 01       		.byte	0x1
 5871 0404 0504     		.2byte	0x405
 5872 0406 B0000000 		.4byte	0xb0
 5873 040a 02       		.uleb128 0x2
 5874 040b 91       		.byte	0x91
 5875 040c 74       		.sleb128 -12
 5876 040d 00       		.byte	0
 5877 040e 12       		.uleb128 0x12
 5878 040f 64080000 		.4byte	.LASF60
 5879 0413 01       		.byte	0x1
 5880 0414 9104     		.2byte	0x491
 5881 0416 00000000 		.4byte	.LFB15
 5882 041a 1C000000 		.4byte	.LFE15-.LFB15
 5883 041e 01       		.uleb128 0x1
 5884 041f 9C       		.byte	0x9c
 5885 0420 19       		.uleb128 0x19
 5886 0421 90020000 		.4byte	.LASF61
 5887 0425 01       		.byte	0x1
 5888 0426 B304     		.2byte	0x4b3
 5889 0428 83000000 		.4byte	0x83
 5890 042c 00000000 		.4byte	.LFB16
 5891 0430 24000000 		.4byte	.LFE16-.LFB16
 5892 0434 01       		.uleb128 0x1
 5893 0435 9C       		.byte	0x9c
 5894 0436 4A040000 		.4byte	0x44a
 5895 043a 16       		.uleb128 0x16
 5896 043b 9A0A0000 		.4byte	.LASF62
 5897 043f 01       		.byte	0x1
 5898 0440 B504     		.2byte	0x4b5
 5899 0442 83000000 		.4byte	0x83
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 160


 5900 0446 02       		.uleb128 0x2
 5901 0447 91       		.byte	0x91
 5902 0448 74       		.sleb128 -12
 5903 0449 00       		.byte	0
 5904 044a 14       		.uleb128 0x14
 5905 044b DA070000 		.4byte	.LASF63
 5906 044f 01       		.byte	0x1
 5907 0450 3B05     		.2byte	0x53b
 5908 0452 00000000 		.4byte	.LFB17
 5909 0456 98000000 		.4byte	.LFE17-.LFB17
 5910 045a 01       		.uleb128 0x1
 5911 045b 9C       		.byte	0x9c
 5912 045c CA040000 		.4byte	0x4ca
 5913 0460 15       		.uleb128 0x15
 5914 0461 8F070000 		.4byte	.LASF64
 5915 0465 01       		.byte	0x1
 5916 0466 3B05     		.2byte	0x53b
 5917 0468 83000000 		.4byte	0x83
 5918 046c 02       		.uleb128 0x2
 5919 046d 91       		.byte	0x91
 5920 046e 64       		.sleb128 -28
 5921 046f 15       		.uleb128 0x15
 5922 0470 87060000 		.4byte	.LASF65
 5923 0474 01       		.byte	0x1
 5924 0475 3B05     		.2byte	0x53b
 5925 0477 83000000 		.4byte	0x83
 5926 047b 02       		.uleb128 0x2
 5927 047c 91       		.byte	0x91
 5928 047d 60       		.sleb128 -32
 5929 047e 15       		.uleb128 0x15
 5930 047f BB070000 		.4byte	.LASF66
 5931 0483 01       		.byte	0x1
 5932 0484 3B05     		.2byte	0x53b
 5933 0486 83000000 		.4byte	0x83
 5934 048a 02       		.uleb128 0x2
 5935 048b 91       		.byte	0x91
 5936 048c 5C       		.sleb128 -36
 5937 048d 15       		.uleb128 0x15
 5938 048e 71060000 		.4byte	.LASF67
 5939 0492 01       		.byte	0x1
 5940 0493 3B05     		.2byte	0x53b
 5941 0495 83000000 		.4byte	0x83
 5942 0499 02       		.uleb128 0x2
 5943 049a 91       		.byte	0x91
 5944 049b 58       		.sleb128 -40
 5945 049c 15       		.uleb128 0x15
 5946 049d 90030000 		.4byte	.LASF68
 5947 04a1 01       		.byte	0x1
 5948 04a2 3B05     		.2byte	0x53b
 5949 04a4 83000000 		.4byte	0x83
 5950 04a8 02       		.uleb128 0x2
 5951 04a9 91       		.byte	0x91
 5952 04aa 00       		.sleb128 0
 5953 04ab 16       		.uleb128 0x16
 5954 04ac A8010000 		.4byte	.LASF30
 5955 04b0 01       		.byte	0x1
 5956 04b1 3D05     		.2byte	0x53d
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 161


 5957 04b3 6B000000 		.4byte	0x6b
 5958 04b7 02       		.uleb128 0x2
 5959 04b8 91       		.byte	0x91
 5960 04b9 6F       		.sleb128 -17
 5961 04ba 16       		.uleb128 0x16
 5962 04bb 1D040000 		.4byte	.LASF31
 5963 04bf 01       		.byte	0x1
 5964 04c0 3E05     		.2byte	0x53e
 5965 04c2 83000000 		.4byte	0x83
 5966 04c6 02       		.uleb128 0x2
 5967 04c7 91       		.byte	0x91
 5968 04c8 68       		.sleb128 -24
 5969 04c9 00       		.byte	0
 5970 04ca 18       		.uleb128 0x18
 5971 04cb 8A000000 		.4byte	.LASF69
 5972 04cf 01       		.byte	0x1
 5973 04d0 6E05     		.2byte	0x56e
 5974 04d2 B0000000 		.4byte	0xb0
 5975 04d6 00000000 		.4byte	.LFB18
 5976 04da E4010000 		.4byte	.LFE18-.LFB18
 5977 04de 01       		.uleb128 0x1
 5978 04df 9C       		.byte	0x9c
 5979 04e0 8A050000 		.4byte	0x58a
 5980 04e4 15       		.uleb128 0x15
 5981 04e5 92010000 		.4byte	.LASF29
 5982 04e9 01       		.byte	0x1
 5983 04ea 6E05     		.2byte	0x56e
 5984 04ec 83000000 		.4byte	0x83
 5985 04f0 02       		.uleb128 0x2
 5986 04f1 91       		.byte	0x91
 5987 04f2 4C       		.sleb128 -52
 5988 04f3 15       		.uleb128 0x15
 5989 04f4 01020000 		.4byte	.LASF70
 5990 04f8 01       		.byte	0x1
 5991 04f9 6E05     		.2byte	0x56e
 5992 04fb 83000000 		.4byte	0x83
 5993 04ff 02       		.uleb128 0x2
 5994 0500 91       		.byte	0x91
 5995 0501 48       		.sleb128 -56
 5996 0502 1A       		.uleb128 0x1a
 5997 0503 65737200 		.ascii	"esr\000"
 5998 0507 01       		.byte	0x1
 5999 0508 6E05     		.2byte	0x56e
 6000 050a 83000000 		.4byte	0x83
 6001 050e 02       		.uleb128 0x2
 6002 050f 91       		.byte	0x91
 6003 0510 44       		.sleb128 -60
 6004 0511 15       		.uleb128 0x15
 6005 0512 E9030000 		.4byte	.LASF71
 6006 0516 01       		.byte	0x1
 6007 0517 6E05     		.2byte	0x56e
 6008 0519 83000000 		.4byte	0x83
 6009 051d 02       		.uleb128 0x2
 6010 051e 91       		.byte	0x91
 6011 051f 40       		.sleb128 -64
 6012 0520 16       		.uleb128 0x16
 6013 0521 9E050000 		.4byte	.LASF59
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 162


 6014 0525 01       		.byte	0x1
 6015 0526 7005     		.2byte	0x570
 6016 0528 B0000000 		.4byte	0xb0
 6017 052c 02       		.uleb128 0x2
 6018 052d 91       		.byte	0x91
 6019 052e 6C       		.sleb128 -20
 6020 052f 16       		.uleb128 0x16
 6021 0530 8F070000 		.4byte	.LASF64
 6022 0534 01       		.byte	0x1
 6023 0535 7205     		.2byte	0x572
 6024 0537 83000000 		.4byte	0x83
 6025 053b 02       		.uleb128 0x2
 6026 053c 91       		.byte	0x91
 6027 053d 5C       		.sleb128 -36
 6028 053e 16       		.uleb128 0x16
 6029 053f 87060000 		.4byte	.LASF65
 6030 0543 01       		.byte	0x1
 6031 0544 7305     		.2byte	0x573
 6032 0546 83000000 		.4byte	0x83
 6033 054a 02       		.uleb128 0x2
 6034 054b 91       		.byte	0x91
 6035 054c 68       		.sleb128 -24
 6036 054d 16       		.uleb128 0x16
 6037 054e BB070000 		.4byte	.LASF66
 6038 0552 01       		.byte	0x1
 6039 0553 7405     		.2byte	0x574
 6040 0555 83000000 		.4byte	0x83
 6041 0559 02       		.uleb128 0x2
 6042 055a 91       		.byte	0x91
 6043 055b 54       		.sleb128 -44
 6044 055c 16       		.uleb128 0x16
 6045 055d 71060000 		.4byte	.LASF67
 6046 0561 01       		.byte	0x1
 6047 0562 7505     		.2byte	0x575
 6048 0564 83000000 		.4byte	0x83
 6049 0568 02       		.uleb128 0x2
 6050 0569 91       		.byte	0x91
 6051 056a 64       		.sleb128 -28
 6052 056b 16       		.uleb128 0x16
 6053 056c 90030000 		.4byte	.LASF68
 6054 0570 01       		.byte	0x1
 6055 0571 7605     		.2byte	0x576
 6056 0573 83000000 		.4byte	0x83
 6057 0577 02       		.uleb128 0x2
 6058 0578 91       		.byte	0x91
 6059 0579 60       		.sleb128 -32
 6060 057a 16       		.uleb128 0x16
 6061 057b 01030000 		.4byte	.LASF72
 6062 057f 01       		.byte	0x1
 6063 0580 7805     		.2byte	0x578
 6064 0582 83000000 		.4byte	0x83
 6065 0586 02       		.uleb128 0x2
 6066 0587 91       		.byte	0x91
 6067 0588 58       		.sleb128 -40
 6068 0589 00       		.byte	0
 6069 058a 18       		.uleb128 0x18
 6070 058b 0E070000 		.4byte	.LASF73
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 163


 6071 058f 01       		.byte	0x1
 6072 0590 0506     		.2byte	0x605
 6073 0592 B0000000 		.4byte	0xb0
 6074 0596 00000000 		.4byte	.LFB19
 6075 059a 10010000 		.4byte	.LFE19-.LFB19
 6076 059e 01       		.uleb128 0x1
 6077 059f 9C       		.byte	0x9c
 6078 05a0 F0050000 		.4byte	0x5f0
 6079 05a4 1A       		.uleb128 0x1a
 6080 05a5 706C6C00 		.ascii	"pll\000"
 6081 05a9 01       		.byte	0x1
 6082 05aa 0506     		.2byte	0x605
 6083 05ac 83000000 		.4byte	0x83
 6084 05b0 02       		.uleb128 0x2
 6085 05b1 91       		.byte	0x91
 6086 05b2 5C       		.sleb128 -36
 6087 05b3 15       		.uleb128 0x15
 6088 05b4 90040000 		.4byte	.LASF74
 6089 05b8 01       		.byte	0x1
 6090 05b9 0506     		.2byte	0x605
 6091 05bb 83000000 		.4byte	0x83
 6092 05bf 02       		.uleb128 0x2
 6093 05c0 91       		.byte	0x91
 6094 05c1 58       		.sleb128 -40
 6095 05c2 16       		.uleb128 0x16
 6096 05c3 46000000 		.4byte	.LASF75
 6097 05c7 01       		.byte	0x1
 6098 05c8 0706     		.2byte	0x607
 6099 05ca 83000000 		.4byte	0x83
 6100 05ce 02       		.uleb128 0x2
 6101 05cf 91       		.byte	0x91
 6102 05d0 6C       		.sleb128 -20
 6103 05d1 16       		.uleb128 0x16
 6104 05d2 A8010000 		.4byte	.LASF30
 6105 05d6 01       		.byte	0x1
 6106 05d7 0806     		.2byte	0x608
 6107 05d9 6B000000 		.4byte	0x6b
 6108 05dd 02       		.uleb128 0x2
 6109 05de 91       		.byte	0x91
 6110 05df 67       		.sleb128 -25
 6111 05e0 16       		.uleb128 0x16
 6112 05e1 9E050000 		.4byte	.LASF59
 6113 05e5 01       		.byte	0x1
 6114 05e6 0906     		.2byte	0x609
 6115 05e8 B0000000 		.4byte	0xb0
 6116 05ec 02       		.uleb128 0x2
 6117 05ed 91       		.byte	0x91
 6118 05ee 68       		.sleb128 -24
 6119 05ef 00       		.byte	0
 6120 05f0 18       		.uleb128 0x18
 6121 05f1 E6060000 		.4byte	.LASF76
 6122 05f5 01       		.byte	0x1
 6123 05f6 4806     		.2byte	0x648
 6124 05f8 83000000 		.4byte	0x83
 6125 05fc 00000000 		.4byte	.LFB20
 6126 0600 6C000000 		.4byte	.LFE20-.LFB20
 6127 0604 01       		.uleb128 0x1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 164


 6128 0605 9C       		.byte	0x9c
 6129 0606 38060000 		.4byte	0x638
 6130 060a 1A       		.uleb128 0x1a
 6131 060b 706C6C00 		.ascii	"pll\000"
 6132 060f 01       		.byte	0x1
 6133 0610 4806     		.2byte	0x648
 6134 0612 83000000 		.4byte	0x83
 6135 0616 02       		.uleb128 0x2
 6136 0617 91       		.byte	0x91
 6137 0618 64       		.sleb128 -28
 6138 0619 16       		.uleb128 0x16
 6139 061a A8010000 		.4byte	.LASF30
 6140 061e 01       		.byte	0x1
 6141 061f 4A06     		.2byte	0x64a
 6142 0621 6B000000 		.4byte	0x6b
 6143 0625 02       		.uleb128 0x2
 6144 0626 91       		.byte	0x91
 6145 0627 6B       		.sleb128 -21
 6146 0628 16       		.uleb128 0x16
 6147 0629 9E050000 		.4byte	.LASF59
 6148 062d 01       		.byte	0x1
 6149 062e 4B06     		.2byte	0x64b
 6150 0630 83000000 		.4byte	0x83
 6151 0634 02       		.uleb128 0x2
 6152 0635 91       		.byte	0x91
 6153 0636 6C       		.sleb128 -20
 6154 0637 00       		.byte	0
 6155 0638 14       		.uleb128 0x14
 6156 0639 79050000 		.4byte	.LASF77
 6157 063d 01       		.byte	0x1
 6158 063e 6D06     		.2byte	0x66d
 6159 0640 00000000 		.4byte	.LFB21
 6160 0644 50000000 		.4byte	.LFE21-.LFB21
 6161 0648 01       		.uleb128 0x1
 6162 0649 9C       		.byte	0x9c
 6163 064a 6D060000 		.4byte	0x66d
 6164 064e 1A       		.uleb128 0x1a
 6165 064f 706C6C00 		.ascii	"pll\000"
 6166 0653 01       		.byte	0x1
 6167 0654 6D06     		.2byte	0x66d
 6168 0656 83000000 		.4byte	0x83
 6169 065a 02       		.uleb128 0x2
 6170 065b 91       		.byte	0x91
 6171 065c 64       		.sleb128 -28
 6172 065d 16       		.uleb128 0x16
 6173 065e A8010000 		.4byte	.LASF30
 6174 0662 01       		.byte	0x1
 6175 0663 6F06     		.2byte	0x66f
 6176 0665 6B000000 		.4byte	0x6b
 6177 0669 02       		.uleb128 0x2
 6178 066a 91       		.byte	0x91
 6179 066b 6F       		.sleb128 -17
 6180 066c 00       		.byte	0
 6181 066d 18       		.uleb128 0x18
 6182 066e 15030000 		.4byte	.LASF78
 6183 0672 01       		.byte	0x1
 6184 0673 9A06     		.2byte	0x69a
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 165


 6185 0675 B0000000 		.4byte	0xb0
 6186 0679 00000000 		.4byte	.LFB22
 6187 067d D4000000 		.4byte	.LFE22-.LFB22
 6188 0681 01       		.uleb128 0x1
 6189 0682 9C       		.byte	0x9c
 6190 0683 00070000 		.4byte	0x700
 6191 0687 1A       		.uleb128 0x1a
 6192 0688 706C6C00 		.ascii	"pll\000"
 6193 068c 01       		.byte	0x1
 6194 068d 9A06     		.2byte	0x69a
 6195 068f 83000000 		.4byte	0x83
 6196 0693 02       		.uleb128 0x2
 6197 0694 91       		.byte	0x91
 6198 0695 5C       		.sleb128 -36
 6199 0696 15       		.uleb128 0x15
 6200 0697 A60A0000 		.4byte	.LASF79
 6201 069b 01       		.byte	0x1
 6202 069c 9A06     		.2byte	0x69a
 6203 069e 83000000 		.4byte	0x83
 6204 06a2 02       		.uleb128 0x2
 6205 06a3 91       		.byte	0x91
 6206 06a4 58       		.sleb128 -40
 6207 06a5 15       		.uleb128 0x15
 6208 06a6 DF050000 		.4byte	.LASF80
 6209 06aa 01       		.byte	0x1
 6210 06ab 9A06     		.2byte	0x69a
 6211 06ad 83000000 		.4byte	0x83
 6212 06b1 02       		.uleb128 0x2
 6213 06b2 91       		.byte	0x91
 6214 06b3 54       		.sleb128 -44
 6215 06b4 15       		.uleb128 0x15
 6216 06b5 77060000 		.4byte	.LASF81
 6217 06b9 01       		.byte	0x1
 6218 06ba 9A06     		.2byte	0x69a
 6219 06bc 83000000 		.4byte	0x83
 6220 06c0 02       		.uleb128 0x2
 6221 06c1 91       		.byte	0x91
 6222 06c2 50       		.sleb128 -48
 6223 06c3 16       		.uleb128 0x16
 6224 06c4 1D040000 		.4byte	.LASF31
 6225 06c8 01       		.byte	0x1
 6226 06c9 9C06     		.2byte	0x69c
 6227 06cb 83000000 		.4byte	0x83
 6228 06cf 02       		.uleb128 0x2
 6229 06d0 91       		.byte	0x91
 6230 06d1 60       		.sleb128 -32
 6231 06d2 1B       		.uleb128 0x1b
 6232 06d3 746D7000 		.ascii	"tmp\000"
 6233 06d7 01       		.byte	0x1
 6234 06d8 9D06     		.2byte	0x69d
 6235 06da B0000000 		.4byte	0xb0
 6236 06de 02       		.uleb128 0x2
 6237 06df 91       		.byte	0x91
 6238 06e0 64       		.sleb128 -28
 6239 06e1 16       		.uleb128 0x16
 6240 06e2 A8010000 		.4byte	.LASF30
 6241 06e6 01       		.byte	0x1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 166


 6242 06e7 9E06     		.2byte	0x69e
 6243 06e9 6B000000 		.4byte	0x6b
 6244 06ed 02       		.uleb128 0x2
 6245 06ee 91       		.byte	0x91
 6246 06ef 6B       		.sleb128 -21
 6247 06f0 16       		.uleb128 0x16
 6248 06f1 9E050000 		.4byte	.LASF59
 6249 06f5 01       		.byte	0x1
 6250 06f6 9F06     		.2byte	0x69f
 6251 06f8 B0000000 		.4byte	0xb0
 6252 06fc 02       		.uleb128 0x2
 6253 06fd 91       		.byte	0x91
 6254 06fe 6C       		.sleb128 -20
 6255 06ff 00       		.byte	0
 6256 0700 14       		.uleb128 0x14
 6257 0701 F3070000 		.4byte	.LASF82
 6258 0705 01       		.byte	0x1
 6259 0706 DE06     		.2byte	0x6de
 6260 0708 00000000 		.4byte	.LFB23
 6261 070c 6C000000 		.4byte	.LFE23-.LFB23
 6262 0710 01       		.uleb128 0x1
 6263 0711 9C       		.byte	0x9c
 6264 0712 53070000 		.4byte	0x753
 6265 0716 1A       		.uleb128 0x1a
 6266 0717 706C6C00 		.ascii	"pll\000"
 6267 071b 01       		.byte	0x1
 6268 071c DE06     		.2byte	0x6de
 6269 071e 83000000 		.4byte	0x83
 6270 0722 02       		.uleb128 0x2
 6271 0723 91       		.byte	0x91
 6272 0724 64       		.sleb128 -28
 6273 0725 15       		.uleb128 0x15
 6274 0726 380A0000 		.4byte	.LASF83
 6275 072a 01       		.byte	0x1
 6276 072b DE06     		.2byte	0x6de
 6277 072d 83000000 		.4byte	0x83
 6278 0731 02       		.uleb128 0x2
 6279 0732 91       		.byte	0x91
 6280 0733 60       		.sleb128 -32
 6281 0734 16       		.uleb128 0x16
 6282 0735 1D040000 		.4byte	.LASF31
 6283 0739 01       		.byte	0x1
 6284 073a E006     		.2byte	0x6e0
 6285 073c 83000000 		.4byte	0x83
 6286 0740 02       		.uleb128 0x2
 6287 0741 91       		.byte	0x91
 6288 0742 68       		.sleb128 -24
 6289 0743 16       		.uleb128 0x16
 6290 0744 A8010000 		.4byte	.LASF30
 6291 0748 01       		.byte	0x1
 6292 0749 E106     		.2byte	0x6e1
 6293 074b 6B000000 		.4byte	0x6b
 6294 074f 02       		.uleb128 0x2
 6295 0750 91       		.byte	0x91
 6296 0751 6F       		.sleb128 -17
 6297 0752 00       		.byte	0
 6298 0753 1C       		.uleb128 0x1c
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 167


 6299 0754 C1070000 		.4byte	.LASF84
 6300 0758 01       		.byte	0x1
 6301 0759 FF06     		.2byte	0x6ff
 6302 075b 83000000 		.4byte	0x83
 6303 075f 00000000 		.4byte	.LFB24
 6304 0763 58000000 		.4byte	.LFE24-.LFB24
 6305 0767 01       		.uleb128 0x1
 6306 0768 9C       		.byte	0x9c
 6307 0769 9B070000 		.4byte	0x79b
 6308 076d 1A       		.uleb128 0x1a
 6309 076e 706C6C00 		.ascii	"pll\000"
 6310 0772 01       		.byte	0x1
 6311 0773 FF06     		.2byte	0x6ff
 6312 0775 83000000 		.4byte	0x83
 6313 0779 02       		.uleb128 0x2
 6314 077a 91       		.byte	0x91
 6315 077b 64       		.sleb128 -28
 6316 077c 16       		.uleb128 0x16
 6317 077d 9A0A0000 		.4byte	.LASF62
 6318 0781 01       		.byte	0x1
 6319 0782 0107     		.2byte	0x701
 6320 0784 83000000 		.4byte	0x83
 6321 0788 02       		.uleb128 0x2
 6322 0789 91       		.byte	0x91
 6323 078a 68       		.sleb128 -24
 6324 078b 16       		.uleb128 0x16
 6325 078c A8010000 		.4byte	.LASF30
 6326 0790 01       		.byte	0x1
 6327 0791 0207     		.2byte	0x702
 6328 0793 6B000000 		.4byte	0x6b
 6329 0797 02       		.uleb128 0x2
 6330 0798 91       		.byte	0x91
 6331 0799 6F       		.sleb128 -17
 6332 079a 00       		.byte	0
 6333 079b 1C       		.uleb128 0x1c
 6334 079c 54070000 		.4byte	.LASF85
 6335 07a0 01       		.byte	0x1
 6336 07a1 2207     		.2byte	0x722
 6337 07a3 B0000000 		.4byte	0xb0
 6338 07a7 00000000 		.4byte	.LFB25
 6339 07ab 54000000 		.4byte	.LFE25-.LFB25
 6340 07af 01       		.uleb128 0x1
 6341 07b0 9C       		.byte	0x9c
 6342 07b1 F2070000 		.4byte	0x7f2
 6343 07b5 1A       		.uleb128 0x1a
 6344 07b6 706C6C00 		.ascii	"pll\000"
 6345 07ba 01       		.byte	0x1
 6346 07bb 2207     		.2byte	0x722
 6347 07bd 83000000 		.4byte	0x83
 6348 07c1 02       		.uleb128 0x2
 6349 07c2 91       		.byte	0x91
 6350 07c3 64       		.sleb128 -28
 6351 07c4 16       		.uleb128 0x16
 6352 07c5 3A050000 		.4byte	.LASF86
 6353 07c9 01       		.byte	0x1
 6354 07ca 2407     		.2byte	0x724
 6355 07cc 83000000 		.4byte	0x83
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 168


 6356 07d0 02       		.uleb128 0x2
 6357 07d1 91       		.byte	0x91
 6358 07d2 6C       		.sleb128 -20
 6359 07d3 16       		.uleb128 0x16
 6360 07d4 05060000 		.4byte	.LASF45
 6361 07d8 01       		.byte	0x1
 6362 07d9 2507     		.2byte	0x725
 6363 07db 83000000 		.4byte	0x83
 6364 07df 02       		.uleb128 0x2
 6365 07e0 91       		.byte	0x91
 6366 07e1 70       		.sleb128 -16
 6367 07e2 16       		.uleb128 0x16
 6368 07e3 9A0A0000 		.4byte	.LASF62
 6369 07e7 01       		.byte	0x1
 6370 07e8 2607     		.2byte	0x726
 6371 07ea B0000000 		.4byte	0xb0
 6372 07ee 02       		.uleb128 0x2
 6373 07ef 91       		.byte	0x91
 6374 07f0 74       		.sleb128 -12
 6375 07f1 00       		.byte	0
 6376 07f2 18       		.uleb128 0x18
 6377 07f3 650A0000 		.4byte	.LASF87
 6378 07f7 01       		.byte	0x1
 6379 07f8 4807     		.2byte	0x748
 6380 07fa 83000000 		.4byte	0x83
 6381 07fe 00000000 		.4byte	.LFB26
 6382 0802 74000000 		.4byte	.LFE26-.LFB26
 6383 0806 01       		.uleb128 0x1
 6384 0807 9C       		.byte	0x9c
 6385 0808 3A080000 		.4byte	0x83a
 6386 080c 1A       		.uleb128 0x1a
 6387 080d 706C6C00 		.ascii	"pll\000"
 6388 0811 01       		.byte	0x1
 6389 0812 4807     		.2byte	0x748
 6390 0814 83000000 		.4byte	0x83
 6391 0818 02       		.uleb128 0x2
 6392 0819 91       		.byte	0x91
 6393 081a 64       		.sleb128 -28
 6394 081b 16       		.uleb128 0x16
 6395 081c 9E050000 		.4byte	.LASF59
 6396 0820 01       		.byte	0x1
 6397 0821 4A07     		.2byte	0x74a
 6398 0823 83000000 		.4byte	0x83
 6399 0827 02       		.uleb128 0x2
 6400 0828 91       		.byte	0x91
 6401 0829 6C       		.sleb128 -20
 6402 082a 16       		.uleb128 0x16
 6403 082b A8010000 		.4byte	.LASF30
 6404 082f 01       		.byte	0x1
 6405 0830 4B07     		.2byte	0x74b
 6406 0832 6B000000 		.4byte	0x6b
 6407 0836 02       		.uleb128 0x2
 6408 0837 91       		.byte	0x91
 6409 0838 6B       		.sleb128 -21
 6410 0839 00       		.byte	0
 6411 083a 18       		.uleb128 0x18
 6412 083b C9030000 		.4byte	.LASF88
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 169


 6413 083f 01       		.byte	0x1
 6414 0840 7C07     		.2byte	0x77c
 6415 0842 B0000000 		.4byte	0xb0
 6416 0846 00000000 		.4byte	.LFB27
 6417 084a 70010000 		.4byte	.LFE27-.LFB27
 6418 084e 01       		.uleb128 0x1
 6419 084f 9C       		.byte	0x9c
 6420 0850 32090000 		.4byte	0x932
 6421 0854 1A       		.uleb128 0x1a
 6422 0855 706C6C00 		.ascii	"pll\000"
 6423 0859 01       		.byte	0x1
 6424 085a 7C07     		.2byte	0x77c
 6425 085c 83000000 		.4byte	0x83
 6426 0860 02       		.uleb128 0x2
 6427 0861 91       		.byte	0x91
 6428 0862 4C       		.sleb128 -52
 6429 0863 15       		.uleb128 0x15
 6430 0864 1B060000 		.4byte	.LASF89
 6431 0868 01       		.byte	0x1
 6432 0869 7C07     		.2byte	0x77c
 6433 086b 83000000 		.4byte	0x83
 6434 086f 02       		.uleb128 0x2
 6435 0870 91       		.byte	0x91
 6436 0871 48       		.sleb128 -56
 6437 0872 15       		.uleb128 0x15
 6438 0873 00010000 		.4byte	.LASF90
 6439 0877 01       		.byte	0x1
 6440 0878 7C07     		.2byte	0x77c
 6441 087a 83000000 		.4byte	0x83
 6442 087e 02       		.uleb128 0x2
 6443 087f 91       		.byte	0x91
 6444 0880 44       		.sleb128 -60
 6445 0881 15       		.uleb128 0x15
 6446 0882 62090000 		.4byte	.LASF47
 6447 0886 01       		.byte	0x1
 6448 0887 7C07     		.2byte	0x77c
 6449 0889 83000000 		.4byte	0x83
 6450 088d 02       		.uleb128 0x2
 6451 088e 91       		.byte	0x91
 6452 088f 40       		.sleb128 -64
 6453 0890 15       		.uleb128 0x15
 6454 0891 7F060000 		.4byte	.LASF91
 6455 0895 01       		.byte	0x1
 6456 0896 7C07     		.2byte	0x77c
 6457 0898 83000000 		.4byte	0x83
 6458 089c 02       		.uleb128 0x2
 6459 089d 91       		.byte	0x91
 6460 089e 00       		.sleb128 0
 6461 089f 16       		.uleb128 0x16
 6462 08a0 31020000 		.4byte	.LASF92
 6463 08a4 01       		.byte	0x1
 6464 08a5 7E07     		.2byte	0x77e
 6465 08a7 83000000 		.4byte	0x83
 6466 08ab 02       		.uleb128 0x2
 6467 08ac 91       		.byte	0x91
 6468 08ad 60       		.sleb128 -32
 6469 08ae 16       		.uleb128 0x16
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 170


 6470 08af 2E010000 		.4byte	.LASF93
 6471 08b3 01       		.byte	0x1
 6472 08b4 7F07     		.2byte	0x77f
 6473 08b6 83000000 		.4byte	0x83
 6474 08ba 02       		.uleb128 0x2
 6475 08bb 91       		.byte	0x91
 6476 08bc 5C       		.sleb128 -36
 6477 08bd 16       		.uleb128 0x16
 6478 08be 5A050000 		.4byte	.LASF94
 6479 08c2 01       		.byte	0x1
 6480 08c3 8107     		.2byte	0x781
 6481 08c5 83000000 		.4byte	0x83
 6482 08c9 02       		.uleb128 0x2
 6483 08ca 91       		.byte	0x91
 6484 08cb 74       		.sleb128 -12
 6485 08cc 16       		.uleb128 0x16
 6486 08cd 6C060000 		.4byte	.LASF95
 6487 08d1 01       		.byte	0x1
 6488 08d2 8207     		.2byte	0x782
 6489 08d4 83000000 		.4byte	0x83
 6490 08d8 02       		.uleb128 0x2
 6491 08d9 91       		.byte	0x91
 6492 08da 70       		.sleb128 -16
 6493 08db 1B       		.uleb128 0x1b
 6494 08dc 7100     		.ascii	"q\000"
 6495 08de 01       		.byte	0x1
 6496 08df 8407     		.2byte	0x784
 6497 08e1 83000000 		.4byte	0x83
 6498 08e5 02       		.uleb128 0x2
 6499 08e6 91       		.byte	0x91
 6500 08e7 6C       		.sleb128 -20
 6501 08e8 1B       		.uleb128 0x1b
 6502 08e9 7000     		.ascii	"p\000"
 6503 08eb 01       		.byte	0x1
 6504 08ec 8507     		.2byte	0x785
 6505 08ee 83000000 		.4byte	0x83
 6506 08f2 02       		.uleb128 0x2
 6507 08f3 91       		.byte	0x91
 6508 08f4 58       		.sleb128 -40
 6509 08f5 16       		.uleb128 0x16
 6510 08f6 97010000 		.4byte	.LASF96
 6511 08fa 01       		.byte	0x1
 6512 08fb 8707     		.2byte	0x787
 6513 08fd 83000000 		.4byte	0x83
 6514 0901 02       		.uleb128 0x2
 6515 0902 91       		.byte	0x91
 6516 0903 54       		.sleb128 -44
 6517 0904 16       		.uleb128 0x16
 6518 0905 36060000 		.4byte	.LASF97
 6519 0909 01       		.byte	0x1
 6520 090a 8807     		.2byte	0x788
 6521 090c 8F000000 		.4byte	0x8f
 6522 0910 02       		.uleb128 0x2
 6523 0911 91       		.byte	0x91
 6524 0912 50       		.sleb128 -48
 6525 0913 1B       		.uleb128 0x1b
 6526 0914 746D7000 		.ascii	"tmp\000"
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 171


 6527 0918 01       		.byte	0x1
 6528 0919 8A07     		.2byte	0x78a
 6529 091b B0000000 		.4byte	0xb0
 6530 091f 02       		.uleb128 0x2
 6531 0920 91       		.byte	0x91
 6532 0921 64       		.sleb128 -28
 6533 0922 16       		.uleb128 0x16
 6534 0923 9E050000 		.4byte	.LASF59
 6535 0927 01       		.byte	0x1
 6536 0928 8B07     		.2byte	0x78b
 6537 092a B0000000 		.4byte	0xb0
 6538 092e 02       		.uleb128 0x2
 6539 092f 91       		.byte	0x91
 6540 0930 68       		.sleb128 -24
 6541 0931 00       		.byte	0
 6542 0932 14       		.uleb128 0x14
 6543 0933 4D000000 		.4byte	.LASF98
 6544 0937 01       		.byte	0x1
 6545 0938 DE07     		.2byte	0x7de
 6546 093a 00000000 		.4byte	.LFB28
 6547 093e 7C000000 		.4byte	.LFE28-.LFB28
 6548 0942 01       		.uleb128 0x1
 6549 0943 9C       		.byte	0x9c
 6550 0944 85090000 		.4byte	0x985
 6551 0948 1A       		.uleb128 0x1a
 6552 0949 706C6C00 		.ascii	"pll\000"
 6553 094d 01       		.byte	0x1
 6554 094e DE07     		.2byte	0x7de
 6555 0950 83000000 		.4byte	0x83
 6556 0954 02       		.uleb128 0x2
 6557 0955 91       		.byte	0x91
 6558 0956 64       		.sleb128 -28
 6559 0957 15       		.uleb128 0x15
 6560 0958 AB050000 		.4byte	.LASF99
 6561 095c 01       		.byte	0x1
 6562 095d DE07     		.2byte	0x7de
 6563 095f 83000000 		.4byte	0x83
 6564 0963 02       		.uleb128 0x2
 6565 0964 91       		.byte	0x91
 6566 0965 60       		.sleb128 -32
 6567 0966 16       		.uleb128 0x16
 6568 0967 1D040000 		.4byte	.LASF31
 6569 096b 01       		.byte	0x1
 6570 096c E007     		.2byte	0x7e0
 6571 096e 83000000 		.4byte	0x83
 6572 0972 02       		.uleb128 0x2
 6573 0973 91       		.byte	0x91
 6574 0974 68       		.sleb128 -24
 6575 0975 16       		.uleb128 0x16
 6576 0976 A8010000 		.4byte	.LASF30
 6577 097a 01       		.byte	0x1
 6578 097b E107     		.2byte	0x7e1
 6579 097d 6B000000 		.4byte	0x6b
 6580 0981 02       		.uleb128 0x2
 6581 0982 91       		.byte	0x91
 6582 0983 6F       		.sleb128 -17
 6583 0984 00       		.byte	0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 172


 6584 0985 18       		.uleb128 0x18
 6585 0986 33010000 		.4byte	.LASF100
 6586 098a 01       		.byte	0x1
 6587 098b 0A08     		.2byte	0x80a
 6588 098d B0000000 		.4byte	0xb0
 6589 0991 00000000 		.4byte	.LFB29
 6590 0995 8C000000 		.4byte	.LFE29-.LFB29
 6591 0999 01       		.uleb128 0x1
 6592 099a 9C       		.byte	0x9c
 6593 099b FA090000 		.4byte	0x9fa
 6594 099f 1A       		.uleb128 0x1a
 6595 09a0 706C6C00 		.ascii	"pll\000"
 6596 09a4 01       		.byte	0x1
 6597 09a5 0A08     		.2byte	0x80a
 6598 09a7 83000000 		.4byte	0x83
 6599 09ab 02       		.uleb128 0x2
 6600 09ac 91       		.byte	0x91
 6601 09ad 5C       		.sleb128 -36
 6602 09ae 15       		.uleb128 0x15
 6603 09af 62090000 		.4byte	.LASF47
 6604 09b3 01       		.byte	0x1
 6605 09b4 0A08     		.2byte	0x80a
 6606 09b6 83000000 		.4byte	0x83
 6607 09ba 02       		.uleb128 0x2
 6608 09bb 91       		.byte	0x91
 6609 09bc 58       		.sleb128 -40
 6610 09bd 16       		.uleb128 0x16
 6611 09be 5E0A0000 		.4byte	.LASF41
 6612 09c2 01       		.byte	0x1
 6613 09c3 0C08     		.2byte	0x80c
 6614 09c5 83000000 		.4byte	0x83
 6615 09c9 02       		.uleb128 0x2
 6616 09ca 91       		.byte	0x91
 6617 09cb 60       		.sleb128 -32
 6618 09cc 16       		.uleb128 0x16
 6619 09cd A8010000 		.4byte	.LASF30
 6620 09d1 01       		.byte	0x1
 6621 09d2 0D08     		.2byte	0x80d
 6622 09d4 6B000000 		.4byte	0x6b
 6623 09d8 02       		.uleb128 0x2
 6624 09d9 91       		.byte	0x91
 6625 09da 6B       		.sleb128 -21
 6626 09db 16       		.uleb128 0x16
 6627 09dc 9E050000 		.4byte	.LASF59
 6628 09e0 01       		.byte	0x1
 6629 09e1 0E08     		.2byte	0x80e
 6630 09e3 B0000000 		.4byte	0xb0
 6631 09e7 02       		.uleb128 0x2
 6632 09e8 91       		.byte	0x91
 6633 09e9 6C       		.sleb128 -20
 6634 09ea 1B       		.uleb128 0x1b
 6635 09eb 746D7000 		.ascii	"tmp\000"
 6636 09ef 01       		.byte	0x1
 6637 09f0 0F08     		.2byte	0x80f
 6638 09f2 B0000000 		.4byte	0xb0
 6639 09f6 02       		.uleb128 0x2
 6640 09f7 91       		.byte	0x91
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 173


 6641 09f8 64       		.sleb128 -28
 6642 09f9 00       		.byte	0
 6643 09fa 14       		.uleb128 0x14
 6644 09fb 93060000 		.4byte	.LASF101
 6645 09ff 01       		.byte	0x1
 6646 0a00 4608     		.2byte	0x846
 6647 0a02 00000000 		.4byte	.LFB30
 6648 0a06 60000000 		.4byte	.LFE30-.LFB30
 6649 0a0a 01       		.uleb128 0x1
 6650 0a0b 9C       		.byte	0x9c
 6651 0a0c 200A0000 		.4byte	0xa20
 6652 0a10 15       		.uleb128 0x15
 6653 0a11 04070000 		.4byte	.LASF102
 6654 0a15 01       		.byte	0x1
 6655 0a16 4608     		.2byte	0x846
 6656 0a18 83000000 		.4byte	0x83
 6657 0a1c 02       		.uleb128 0x2
 6658 0a1d 91       		.byte	0x91
 6659 0a1e 74       		.sleb128 -12
 6660 0a1f 00       		.byte	0
 6661 0a20 12       		.uleb128 0x12
 6662 0a21 F2080000 		.4byte	.LASF103
 6663 0a25 01       		.byte	0x1
 6664 0a26 6408     		.2byte	0x864
 6665 0a28 00000000 		.4byte	.LFB31
 6666 0a2c 28000000 		.4byte	.LFE31-.LFB31
 6667 0a30 01       		.uleb128 0x1
 6668 0a31 9C       		.byte	0x9c
 6669 0a32 13       		.uleb128 0x13
 6670 0a33 75030000 		.4byte	.LASF104
 6671 0a37 01       		.byte	0x1
 6672 0a38 7608     		.2byte	0x876
 6673 0a3a 83000000 		.4byte	0x83
 6674 0a3e 00000000 		.4byte	.LFB32
 6675 0a42 18000000 		.4byte	.LFE32-.LFB32
 6676 0a46 01       		.uleb128 0x1
 6677 0a47 9C       		.byte	0x9c
 6678 0a48 12       		.uleb128 0x12
 6679 0a49 63020000 		.4byte	.LASF105
 6680 0a4d 01       		.byte	0x1
 6681 0a4e 8608     		.2byte	0x886
 6682 0a50 00000000 		.4byte	.LFB33
 6683 0a54 14000000 		.4byte	.LFE33-.LFB33
 6684 0a58 01       		.uleb128 0x1
 6685 0a59 9C       		.byte	0x9c
 6686 0a5a 19       		.uleb128 0x19
 6687 0a5b F6030000 		.4byte	.LASF106
 6688 0a5f 01       		.byte	0x1
 6689 0a60 A008     		.2byte	0x8a0
 6690 0a62 83000000 		.4byte	0x83
 6691 0a66 00000000 		.4byte	.LFB34
 6692 0a6a 30000000 		.4byte	.LFE34-.LFB34
 6693 0a6e 01       		.uleb128 0x1
 6694 0a6f 9C       		.byte	0x9c
 6695 0a70 930A0000 		.4byte	0xa93
 6696 0a74 15       		.uleb128 0x15
 6697 0a75 B4070000 		.4byte	.LASF107
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 174


 6698 0a79 01       		.byte	0x1
 6699 0a7a A008     		.2byte	0x8a0
 6700 0a7c 83000000 		.4byte	0x83
 6701 0a80 02       		.uleb128 0x2
 6702 0a81 91       		.byte	0x91
 6703 0a82 6C       		.sleb128 -20
 6704 0a83 16       		.uleb128 0x16
 6705 0a84 9E050000 		.4byte	.LASF59
 6706 0a88 01       		.byte	0x1
 6707 0a89 A208     		.2byte	0x8a2
 6708 0a8b 83000000 		.4byte	0x83
 6709 0a8f 02       		.uleb128 0x2
 6710 0a90 91       		.byte	0x91
 6711 0a91 74       		.sleb128 -12
 6712 0a92 00       		.byte	0
 6713 0a93 19       		.uleb128 0x19
 6714 0a94 AB000000 		.4byte	.LASF108
 6715 0a98 01       		.byte	0x1
 6716 0a99 B708     		.2byte	0x8b7
 6717 0a9b 83000000 		.4byte	0x83
 6718 0a9f 00000000 		.4byte	.LFB35
 6719 0aa3 24000000 		.4byte	.LFE35-.LFB35
 6720 0aa7 01       		.uleb128 0x1
 6721 0aa8 9C       		.byte	0x9c
 6722 0aa9 BD0A0000 		.4byte	0xabd
 6723 0aad 16       		.uleb128 0x16
 6724 0aae 1E000000 		.4byte	.LASF109
 6725 0ab2 01       		.byte	0x1
 6726 0ab3 B908     		.2byte	0x8b9
 6727 0ab5 83000000 		.4byte	0x83
 6728 0ab9 02       		.uleb128 0x2
 6729 0aba 91       		.byte	0x91
 6730 0abb 74       		.sleb128 -12
 6731 0abc 00       		.byte	0
 6732 0abd 17       		.uleb128 0x17
 6733 0abe B8040000 		.4byte	.LASF110
 6734 0ac2 01       		.byte	0x1
 6735 0ac3 CE08     		.2byte	0x8ce
 6736 0ac5 00000000 		.4byte	.LFB36
 6737 0ac9 18000000 		.4byte	.LFE36-.LFB36
 6738 0acd 01       		.uleb128 0x1
 6739 0ace 9C       		.byte	0x9c
 6740 0acf E30A0000 		.4byte	0xae3
 6741 0ad3 15       		.uleb128 0x15
 6742 0ad4 AD020000 		.4byte	.LASF111
 6743 0ad8 01       		.byte	0x1
 6744 0ad9 CE08     		.2byte	0x8ce
 6745 0adb 83000000 		.4byte	0x83
 6746 0adf 02       		.uleb128 0x2
 6747 0ae0 91       		.byte	0x91
 6748 0ae1 74       		.sleb128 -12
 6749 0ae2 00       		.byte	0
 6750 0ae3 18       		.uleb128 0x18
 6751 0ae4 48050000 		.4byte	.LASF112
 6752 0ae8 01       		.byte	0x1
 6753 0ae9 E708     		.2byte	0x8e7
 6754 0aeb DE000000 		.4byte	0xde
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 175


 6755 0aef 00000000 		.4byte	.LFB37
 6756 0af3 48000000 		.4byte	.LFE37-.LFB37
 6757 0af7 01       		.uleb128 0x1
 6758 0af8 9C       		.byte	0x9c
 6759 0af9 3A0B0000 		.4byte	0xb3a
 6760 0afd 15       		.uleb128 0x15
 6761 0afe A6020000 		.4byte	.LASF113
 6762 0b02 01       		.byte	0x1
 6763 0b03 E708     		.2byte	0x8e7
 6764 0b05 6B000000 		.4byte	0x6b
 6765 0b09 02       		.uleb128 0x2
 6766 0b0a 91       		.byte	0x91
 6767 0b0b 6F       		.sleb128 -17
 6768 0b0c 15       		.uleb128 0x15
 6769 0b0d E9050000 		.4byte	.LASF114
 6770 0b11 01       		.byte	0x1
 6771 0b12 E708     		.2byte	0x8e7
 6772 0b14 DE000000 		.4byte	0xde
 6773 0b18 02       		.uleb128 0x2
 6774 0b19 91       		.byte	0x91
 6775 0b1a 68       		.sleb128 -24
 6776 0b1b 16       		.uleb128 0x16
 6777 0b1c 02090000 		.4byte	.LASF115
 6778 0b20 01       		.byte	0x1
 6779 0b21 E908     		.2byte	0x8e9
 6780 0b23 DE000000 		.4byte	0xde
 6781 0b27 02       		.uleb128 0x2
 6782 0b28 91       		.byte	0x91
 6783 0b29 70       		.sleb128 -16
 6784 0b2a 16       		.uleb128 0x16
 6785 0b2b 00000000 		.4byte	.LASF116
 6786 0b2f 01       		.byte	0x1
 6787 0b30 EA08     		.2byte	0x8ea
 6788 0b32 3A0B0000 		.4byte	0xb3a
 6789 0b36 02       		.uleb128 0x2
 6790 0b37 91       		.byte	0x91
 6791 0b38 74       		.sleb128 -12
 6792 0b39 00       		.byte	0
 6793 0b3a 06       		.uleb128 0x6
 6794 0b3b 04       		.byte	0x4
 6795 0b3c DE000000 		.4byte	0xde
 6796 0b40 18       		.uleb128 0x18
 6797 0b41 73070000 		.4byte	.LASF117
 6798 0b45 01       		.byte	0x1
 6799 0b46 0909     		.2byte	0x909
 6800 0b48 DE000000 		.4byte	0xde
 6801 0b4c 00000000 		.4byte	.LFB38
 6802 0b50 34000000 		.4byte	.LFE38-.LFB38
 6803 0b54 01       		.uleb128 0x1
 6804 0b55 9C       		.byte	0x9c
 6805 0b56 790B0000 		.4byte	0xb79
 6806 0b5a 15       		.uleb128 0x15
 6807 0b5b A6020000 		.4byte	.LASF113
 6808 0b5f 01       		.byte	0x1
 6809 0b60 0909     		.2byte	0x909
 6810 0b62 6B000000 		.4byte	0x6b
 6811 0b66 02       		.uleb128 0x2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 176


 6812 0b67 91       		.byte	0x91
 6813 0b68 6F       		.sleb128 -17
 6814 0b69 16       		.uleb128 0x16
 6815 0b6a 00000000 		.4byte	.LASF116
 6816 0b6e 01       		.byte	0x1
 6817 0b6f 0B09     		.2byte	0x90b
 6818 0b71 3A0B0000 		.4byte	0xb3a
 6819 0b75 02       		.uleb128 0x2
 6820 0b76 91       		.byte	0x91
 6821 0b77 74       		.sleb128 -12
 6822 0b78 00       		.byte	0
 6823 0b79 18       		.uleb128 0x18
 6824 0b7a 81020000 		.4byte	.LASF118
 6825 0b7e 01       		.byte	0x1
 6826 0b7f 1F09     		.2byte	0x91f
 6827 0b81 DE000000 		.4byte	0xde
 6828 0b85 00000000 		.4byte	.LFB39
 6829 0b89 4C000000 		.4byte	.LFE39-.LFB39
 6830 0b8d 01       		.uleb128 0x1
 6831 0b8e 9C       		.byte	0x9c
 6832 0b8f D00B0000 		.4byte	0xbd0
 6833 0b93 15       		.uleb128 0x15
 6834 0b94 A6020000 		.4byte	.LASF113
 6835 0b98 01       		.byte	0x1
 6836 0b99 1F09     		.2byte	0x91f
 6837 0b9b 6B000000 		.4byte	0x6b
 6838 0b9f 02       		.uleb128 0x2
 6839 0ba0 91       		.byte	0x91
 6840 0ba1 6F       		.sleb128 -17
 6841 0ba2 15       		.uleb128 0x15
 6842 0ba3 E9050000 		.4byte	.LASF114
 6843 0ba7 01       		.byte	0x1
 6844 0ba8 1F09     		.2byte	0x91f
 6845 0baa DE000000 		.4byte	0xde
 6846 0bae 02       		.uleb128 0x2
 6847 0baf 91       		.byte	0x91
 6848 0bb0 68       		.sleb128 -24
 6849 0bb1 16       		.uleb128 0x16
 6850 0bb2 02090000 		.4byte	.LASF115
 6851 0bb6 01       		.byte	0x1
 6852 0bb7 2109     		.2byte	0x921
 6853 0bb9 DE000000 		.4byte	0xde
 6854 0bbd 02       		.uleb128 0x2
 6855 0bbe 91       		.byte	0x91
 6856 0bbf 70       		.sleb128 -16
 6857 0bc0 16       		.uleb128 0x16
 6858 0bc1 00000000 		.4byte	.LASF116
 6859 0bc5 01       		.byte	0x1
 6860 0bc6 2209     		.2byte	0x922
 6861 0bc8 3A0B0000 		.4byte	0xb3a
 6862 0bcc 02       		.uleb128 0x2
 6863 0bcd 91       		.byte	0x91
 6864 0bce 74       		.sleb128 -12
 6865 0bcf 00       		.byte	0
 6866 0bd0 18       		.uleb128 0x18
 6867 0bd1 CA060000 		.4byte	.LASF119
 6868 0bd5 01       		.byte	0x1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 177


 6869 0bd6 3B09     		.2byte	0x93b
 6870 0bd8 DE000000 		.4byte	0xde
 6871 0bdc 00000000 		.4byte	.LFB40
 6872 0be0 36000000 		.4byte	.LFE40-.LFB40
 6873 0be4 01       		.uleb128 0x1
 6874 0be5 9C       		.byte	0x9c
 6875 0be6 090C0000 		.4byte	0xc09
 6876 0bea 15       		.uleb128 0x15
 6877 0beb A6020000 		.4byte	.LASF113
 6878 0bef 01       		.byte	0x1
 6879 0bf0 3B09     		.2byte	0x93b
 6880 0bf2 6B000000 		.4byte	0x6b
 6881 0bf6 02       		.uleb128 0x2
 6882 0bf7 91       		.byte	0x91
 6883 0bf8 6F       		.sleb128 -17
 6884 0bf9 16       		.uleb128 0x16
 6885 0bfa 00000000 		.4byte	.LASF116
 6886 0bfe 01       		.byte	0x1
 6887 0bff 3D09     		.2byte	0x93d
 6888 0c01 3A0B0000 		.4byte	0xb3a
 6889 0c05 02       		.uleb128 0x2
 6890 0c06 91       		.byte	0x91
 6891 0c07 74       		.sleb128 -12
 6892 0c08 00       		.byte	0
 6893 0c09 14       		.uleb128 0x14
 6894 0c0a DA040000 		.4byte	.LASF120
 6895 0c0e 01       		.byte	0x1
 6896 0c0f 4E09     		.2byte	0x94e
 6897 0c11 00000000 		.4byte	.LFB41
 6898 0c15 A8000000 		.4byte	.LFE41-.LFB41
 6899 0c19 01       		.uleb128 0x1
 6900 0c1a 9C       		.byte	0x9c
 6901 0c1b 6B0C0000 		.4byte	0xc6b
 6902 0c1f 15       		.uleb128 0x15
 6903 0c20 A6020000 		.4byte	.LASF113
 6904 0c24 01       		.byte	0x1
 6905 0c25 4E09     		.2byte	0x94e
 6906 0c27 6B000000 		.4byte	0x6b
 6907 0c2b 02       		.uleb128 0x2
 6908 0c2c 91       		.byte	0x91
 6909 0c2d 5F       		.sleb128 -33
 6910 0c2e 15       		.uleb128 0x15
 6911 0c2f AF040000 		.4byte	.LASF121
 6912 0c33 01       		.byte	0x1
 6913 0c34 4E09     		.2byte	0x94e
 6914 0c36 6B000000 		.4byte	0x6b
 6915 0c3a 02       		.uleb128 0x2
 6916 0c3b 91       		.byte	0x91
 6917 0c3c 5E       		.sleb128 -34
 6918 0c3d 16       		.uleb128 0x16
 6919 0c3e A8010000 		.4byte	.LASF30
 6920 0c42 01       		.byte	0x1
 6921 0c43 5009     		.2byte	0x950
 6922 0c45 6B000000 		.4byte	0x6b
 6923 0c49 02       		.uleb128 0x2
 6924 0c4a 91       		.byte	0x91
 6925 0c4b 6B       		.sleb128 -21
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 178


 6926 0c4c 16       		.uleb128 0x16
 6927 0c4d 5D020000 		.4byte	.LASF122
 6928 0c51 01       		.byte	0x1
 6929 0c52 5109     		.2byte	0x951
 6930 0c54 83000000 		.4byte	0x83
 6931 0c58 02       		.uleb128 0x2
 6932 0c59 91       		.byte	0x91
 6933 0c5a 6C       		.sleb128 -20
 6934 0c5b 16       		.uleb128 0x16
 6935 0c5c 27000000 		.4byte	.LASF123
 6936 0c60 01       		.byte	0x1
 6937 0c61 5209     		.2byte	0x952
 6938 0c63 83000000 		.4byte	0x83
 6939 0c67 02       		.uleb128 0x2
 6940 0c68 91       		.byte	0x91
 6941 0c69 64       		.sleb128 -28
 6942 0c6a 00       		.byte	0
 6943 0c6b 18       		.uleb128 0x18
 6944 0c6c E3020000 		.4byte	.LASF124
 6945 0c70 01       		.byte	0x1
 6946 0c71 7009     		.2byte	0x970
 6947 0c73 6B000000 		.4byte	0x6b
 6948 0c77 00000000 		.4byte	.LFB42
 6949 0c7b 5C000000 		.4byte	.LFE42-.LFB42
 6950 0c7f 01       		.uleb128 0x1
 6951 0c80 9C       		.byte	0x9c
 6952 0c81 A40C0000 		.4byte	0xca4
 6953 0c85 15       		.uleb128 0x15
 6954 0c86 A6020000 		.4byte	.LASF113
 6955 0c8a 01       		.byte	0x1
 6956 0c8b 7009     		.2byte	0x970
 6957 0c8d 6B000000 		.4byte	0x6b
 6958 0c91 02       		.uleb128 0x2
 6959 0c92 91       		.byte	0x91
 6960 0c93 6F       		.sleb128 -17
 6961 0c94 16       		.uleb128 0x16
 6962 0c95 AF040000 		.4byte	.LASF121
 6963 0c99 01       		.byte	0x1
 6964 0c9a 7209     		.2byte	0x972
 6965 0c9c 6B000000 		.4byte	0x6b
 6966 0ca0 02       		.uleb128 0x2
 6967 0ca1 91       		.byte	0x91
 6968 0ca2 77       		.sleb128 -9
 6969 0ca3 00       		.byte	0
 6970 0ca4 17       		.uleb128 0x17
 6971 0ca5 F1050000 		.4byte	.LASF125
 6972 0ca9 01       		.byte	0x1
 6973 0caa 8509     		.2byte	0x985
 6974 0cac 00000000 		.4byte	.LFB43
 6975 0cb0 28000000 		.4byte	.LFE43-.LFB43
 6976 0cb4 01       		.uleb128 0x1
 6977 0cb5 9C       		.byte	0x9c
 6978 0cb6 CA0C0000 		.4byte	0xcca
 6979 0cba 15       		.uleb128 0x15
 6980 0cbb A6020000 		.4byte	.LASF113
 6981 0cbf 01       		.byte	0x1
 6982 0cc0 8509     		.2byte	0x985
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 179


 6983 0cc2 6B000000 		.4byte	0x6b
 6984 0cc6 02       		.uleb128 0x2
 6985 0cc7 91       		.byte	0x91
 6986 0cc8 77       		.sleb128 -9
 6987 0cc9 00       		.byte	0
 6988 0cca 19       		.uleb128 0x19
 6989 0ccb AA080000 		.4byte	.LASF126
 6990 0ccf 01       		.byte	0x1
 6991 0cd0 9709     		.2byte	0x997
 6992 0cd2 6B000000 		.4byte	0x6b
 6993 0cd6 00000000 		.4byte	.LFB44
 6994 0cda 30000000 		.4byte	.LFE44-.LFB44
 6995 0cde 01       		.uleb128 0x1
 6996 0cdf 9C       		.byte	0x9c
 6997 0ce0 F40C0000 		.4byte	0xcf4
 6998 0ce4 15       		.uleb128 0x15
 6999 0ce5 A6020000 		.4byte	.LASF113
 7000 0ce9 01       		.byte	0x1
 7001 0cea 9709     		.2byte	0x997
 7002 0cec 6B000000 		.4byte	0x6b
 7003 0cf0 02       		.uleb128 0x2
 7004 0cf1 91       		.byte	0x91
 7005 0cf2 77       		.sleb128 -9
 7006 0cf3 00       		.byte	0
 7007 0cf4 17       		.uleb128 0x17
 7008 0cf5 A7070000 		.4byte	.LASF127
 7009 0cf9 01       		.byte	0x1
 7010 0cfa A709     		.2byte	0x9a7
 7011 0cfc 00000000 		.4byte	.LFB45
 7012 0d00 28000000 		.4byte	.LFE45-.LFB45
 7013 0d04 01       		.uleb128 0x1
 7014 0d05 9C       		.byte	0x9c
 7015 0d06 1A0D0000 		.4byte	0xd1a
 7016 0d0a 15       		.uleb128 0x15
 7017 0d0b A6020000 		.4byte	.LASF113
 7018 0d0f 01       		.byte	0x1
 7019 0d10 A709     		.2byte	0x9a7
 7020 0d12 6B000000 		.4byte	0x6b
 7021 0d16 02       		.uleb128 0x2
 7022 0d17 91       		.byte	0x91
 7023 0d18 77       		.sleb128 -9
 7024 0d19 00       		.byte	0
 7025 0d1a 17       		.uleb128 0x17
 7026 0d1b A6030000 		.4byte	.LASF128
 7027 0d1f 01       		.byte	0x1
 7028 0d20 B509     		.2byte	0x9b5
 7029 0d22 00000000 		.4byte	.LFB46
 7030 0d26 28000000 		.4byte	.LFE46-.LFB46
 7031 0d2a 01       		.uleb128 0x1
 7032 0d2b 9C       		.byte	0x9c
 7033 0d2c 400D0000 		.4byte	0xd40
 7034 0d30 15       		.uleb128 0x15
 7035 0d31 A6020000 		.4byte	.LASF113
 7036 0d35 01       		.byte	0x1
 7037 0d36 B509     		.2byte	0x9b5
 7038 0d38 6B000000 		.4byte	0x6b
 7039 0d3c 02       		.uleb128 0x2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 180


 7040 0d3d 91       		.byte	0x91
 7041 0d3e 77       		.sleb128 -9
 7042 0d3f 00       		.byte	0
 7043 0d40 17       		.uleb128 0x17
 7044 0d41 28050000 		.4byte	.LASF129
 7045 0d45 01       		.byte	0x1
 7046 0d46 C409     		.2byte	0x9c4
 7047 0d48 00000000 		.4byte	.LFB47
 7048 0d4c 28000000 		.4byte	.LFE47-.LFB47
 7049 0d50 01       		.uleb128 0x1
 7050 0d51 9C       		.byte	0x9c
 7051 0d52 660D0000 		.4byte	0xd66
 7052 0d56 15       		.uleb128 0x15
 7053 0d57 A6020000 		.4byte	.LASF113
 7054 0d5b 01       		.byte	0x1
 7055 0d5c C409     		.2byte	0x9c4
 7056 0d5e 6B000000 		.4byte	0x6b
 7057 0d62 02       		.uleb128 0x2
 7058 0d63 91       		.byte	0x91
 7059 0d64 77       		.sleb128 -9
 7060 0d65 00       		.byte	0
 7061 0d66 17       		.uleb128 0x17
 7062 0d67 40030000 		.4byte	.LASF130
 7063 0d6b 01       		.byte	0x1
 7064 0d6c D309     		.2byte	0x9d3
 7065 0d6e 00000000 		.4byte	.LFB48
 7066 0d72 14000000 		.4byte	.LFE48-.LFB48
 7067 0d76 01       		.uleb128 0x1
 7068 0d77 9C       		.byte	0x9c
 7069 0d78 8C0D0000 		.4byte	0xd8c
 7070 0d7c 15       		.uleb128 0x15
 7071 0d7d B4070000 		.4byte	.LASF107
 7072 0d81 01       		.byte	0x1
 7073 0d82 D309     		.2byte	0x9d3
 7074 0d84 6B000000 		.4byte	0x6b
 7075 0d88 02       		.uleb128 0x2
 7076 0d89 91       		.byte	0x91
 7077 0d8a 77       		.sleb128 -9
 7078 0d8b 00       		.byte	0
 7079 0d8c 12       		.uleb128 0x12
 7080 0d8d 4F010000 		.4byte	.LASF131
 7081 0d91 01       		.byte	0x1
 7082 0d92 EB09     		.2byte	0x9eb
 7083 0d94 00000000 		.4byte	.LFB49
 7084 0d98 20000000 		.4byte	.LFE49-.LFB49
 7085 0d9c 01       		.uleb128 0x1
 7086 0d9d 9C       		.byte	0x9c
 7087 0d9e 14       		.uleb128 0x14
 7088 0d9f B8080000 		.4byte	.LASF132
 7089 0da3 01       		.byte	0x1
 7090 0da4 FF09     		.2byte	0x9ff
 7091 0da6 00000000 		.4byte	.LFB50
 7092 0daa 48000000 		.4byte	.LFE50-.LFB50
 7093 0dae 01       		.uleb128 0x1
 7094 0daf 9C       		.byte	0x9c
 7095 0db0 C40D0000 		.4byte	0xdc4
 7096 0db4 15       		.uleb128 0x15
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 181


 7097 0db5 D9060000 		.4byte	.LASF133
 7098 0db9 01       		.byte	0x1
 7099 0dba FF09     		.2byte	0x9ff
 7100 0dbc 83000000 		.4byte	0x83
 7101 0dc0 02       		.uleb128 0x2
 7102 0dc1 91       		.byte	0x91
 7103 0dc2 74       		.sleb128 -12
 7104 0dc3 00       		.byte	0
 7105 0dc4 14       		.uleb128 0x14
 7106 0dc5 BD010000 		.4byte	.LASF134
 7107 0dc9 01       		.byte	0x1
 7108 0dca 160A     		.2byte	0xa16
 7109 0dcc 00000000 		.4byte	.LFB51
 7110 0dd0 28000000 		.4byte	.LFE51-.LFB51
 7111 0dd4 01       		.uleb128 0x1
 7112 0dd5 9C       		.byte	0x9c
 7113 0dd6 EA0D0000 		.4byte	0xdea
 7114 0dda 15       		.uleb128 0x15
 7115 0ddb 1F090000 		.4byte	.LASF135
 7116 0ddf 01       		.byte	0x1
 7117 0de0 160A     		.2byte	0xa16
 7118 0de2 77000000 		.4byte	0x77
 7119 0de6 02       		.uleb128 0x2
 7120 0de7 91       		.byte	0x91
 7121 0de8 76       		.sleb128 -10
 7122 0de9 00       		.byte	0
 7123 0dea 14       		.uleb128 0x14
 7124 0deb 9C010000 		.4byte	.LASF136
 7125 0def 01       		.byte	0x1
 7126 0df0 240A     		.2byte	0xa24
 7127 0df2 00000000 		.4byte	.LFB52
 7128 0df6 84000000 		.4byte	.LFE52-.LFB52
 7129 0dfa 01       		.uleb128 0x1
 7130 0dfb 9C       		.byte	0x9c
 7131 0dfc 100E0000 		.4byte	0xe10
 7132 0e00 15       		.uleb128 0x15
 7133 0e01 92010000 		.4byte	.LASF29
 7134 0e05 01       		.byte	0x1
 7135 0e06 240A     		.2byte	0xa24
 7136 0e08 83000000 		.4byte	0x83
 7137 0e0c 02       		.uleb128 0x2
 7138 0e0d 91       		.byte	0x91
 7139 0e0e 74       		.sleb128 -12
 7140 0e0f 00       		.byte	0
 7141 0e10 1D       		.uleb128 0x1d
 7142 0e11 8F050000 		.4byte	.LASF137
 7143 0e15 01       		.byte	0x1
 7144 0e16 440A     		.2byte	0xa44
 7145 0e18 00000000 		.4byte	.LFB53
 7146 0e1c 24000000 		.4byte	.LFE53-.LFB53
 7147 0e20 01       		.uleb128 0x1
 7148 0e21 9C       		.byte	0x9c
 7149 0e22 14       		.uleb128 0x14
 7150 0e23 07030000 		.4byte	.LASF138
 7151 0e27 01       		.byte	0x1
 7152 0e28 610A     		.2byte	0xa61
 7153 0e2a 00000000 		.4byte	.LFB54
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 182


 7154 0e2e 64000000 		.4byte	.LFE54-.LFB54
 7155 0e32 01       		.uleb128 0x1
 7156 0e33 9C       		.byte	0x9c
 7157 0e34 460E0000 		.4byte	0xe46
 7158 0e38 1B       		.uleb128 0x1b
 7159 0e39 6900     		.ascii	"i\000"
 7160 0e3b 01       		.byte	0x1
 7161 0e3c 630A     		.2byte	0xa63
 7162 0e3e 83000000 		.4byte	0x83
 7163 0e42 02       		.uleb128 0x2
 7164 0e43 91       		.byte	0x91
 7165 0e44 74       		.sleb128 -12
 7166 0e45 00       		.byte	0
 7167 0e46 1D       		.uleb128 0x1d
 7168 0e47 36080000 		.4byte	.LASF139
 7169 0e4b 01       		.byte	0x1
 7170 0e4c 800A     		.2byte	0xa80
 7171 0e4e 00000000 		.4byte	.LFB55
 7172 0e52 1C000000 		.4byte	.LFE55-.LFB55
 7173 0e56 01       		.uleb128 0x1
 7174 0e57 9C       		.byte	0x9c
 7175 0e58 12       		.uleb128 0x12
 7176 0e59 4A090000 		.4byte	.LASF140
 7177 0e5d 01       		.byte	0x1
 7178 0e5e 910A     		.2byte	0xa91
 7179 0e60 00000000 		.4byte	.LFB56
 7180 0e64 18000000 		.4byte	.LFE56-.LFB56
 7181 0e68 01       		.uleb128 0x1
 7182 0e69 9C       		.byte	0x9c
 7183 0e6a 12       		.uleb128 0x12
 7184 0e6b 5F010000 		.4byte	.LASF141
 7185 0e6f 01       		.byte	0x1
 7186 0e70 A10A     		.2byte	0xaa1
 7187 0e72 00000000 		.4byte	.LFB57
 7188 0e76 18000000 		.4byte	.LFE57-.LFB57
 7189 0e7a 01       		.uleb128 0x1
 7190 0e7b 9C       		.byte	0x9c
 7191 0e7c 12       		.uleb128 0x12
 7192 0e7d D8080000 		.4byte	.LASF142
 7193 0e81 01       		.byte	0x1
 7194 0e82 B10A     		.2byte	0xab1
 7195 0e84 00000000 		.4byte	.LFB58
 7196 0e88 18000000 		.4byte	.LFE58-.LFB58
 7197 0e8c 01       		.uleb128 0x1
 7198 0e8d 9C       		.byte	0x9c
 7199 0e8e 17       		.uleb128 0x17
 7200 0e8f B6030000 		.4byte	.LASF143
 7201 0e93 01       		.byte	0x1
 7202 0e94 C20A     		.2byte	0xac2
 7203 0e96 00000000 		.4byte	.LFB59
 7204 0e9a 1C000000 		.4byte	.LFE59-.LFB59
 7205 0e9e 01       		.uleb128 0x1
 7206 0e9f 9C       		.byte	0x9c
 7207 0ea0 B40E0000 		.4byte	0xeb4
 7208 0ea4 15       		.uleb128 0x15
 7209 0ea5 27000000 		.4byte	.LASF123
 7210 0ea9 01       		.byte	0x1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 183


 7211 0eaa C20A     		.2byte	0xac2
 7212 0eac 83000000 		.4byte	0x83
 7213 0eb0 02       		.uleb128 0x2
 7214 0eb1 91       		.byte	0x91
 7215 0eb2 74       		.sleb128 -12
 7216 0eb3 00       		.byte	0
 7217 0eb4 13       		.uleb128 0x13
 7218 0eb5 C7010000 		.4byte	.LASF144
 7219 0eb9 01       		.byte	0x1
 7220 0eba D20A     		.2byte	0xad2
 7221 0ebc 83000000 		.4byte	0x83
 7222 0ec0 00000000 		.4byte	.LFB60
 7223 0ec4 18000000 		.4byte	.LFE60-.LFB60
 7224 0ec8 01       		.uleb128 0x1
 7225 0ec9 9C       		.byte	0x9c
 7226 0eca 13       		.uleb128 0x13
 7227 0ecb 4C060000 		.4byte	.LASF145
 7228 0ecf 01       		.byte	0x1
 7229 0ed0 E20A     		.2byte	0xae2
 7230 0ed2 83000000 		.4byte	0x83
 7231 0ed6 00000000 		.4byte	.LFB61
 7232 0eda 18000000 		.4byte	.LFE61-.LFB61
 7233 0ede 01       		.uleb128 0x1
 7234 0edf 9C       		.byte	0x9c
 7235 0ee0 17       		.uleb128 0x17
 7236 0ee1 78040000 		.4byte	.LASF146
 7237 0ee5 01       		.byte	0x1
 7238 0ee6 020B     		.2byte	0xb02
 7239 0ee8 00000000 		.4byte	.LFB62
 7240 0eec 34000000 		.4byte	.LFE62-.LFB62
 7241 0ef0 01       		.uleb128 0x1
 7242 0ef1 9C       		.byte	0x9c
 7243 0ef2 060F0000 		.4byte	0xf06
 7244 0ef6 15       		.uleb128 0x15
 7245 0ef7 26030000 		.4byte	.LASF147
 7246 0efb 01       		.byte	0x1
 7247 0efc 020B     		.2byte	0xb02
 7248 0efe 83000000 		.4byte	0x83
 7249 0f02 02       		.uleb128 0x2
 7250 0f03 91       		.byte	0x91
 7251 0f04 74       		.sleb128 -12
 7252 0f05 00       		.byte	0
 7253 0f06 13       		.uleb128 0x13
 7254 0f07 C0080000 		.4byte	.LASF148
 7255 0f0b 01       		.byte	0x1
 7256 0f0c 1B0B     		.2byte	0xb1b
 7257 0f0e 83000000 		.4byte	0x83
 7258 0f12 00000000 		.4byte	.LFB63
 7259 0f16 18000000 		.4byte	.LFE63-.LFB63
 7260 0f1a 01       		.uleb128 0x1
 7261 0f1b 9C       		.byte	0x9c
 7262 0f1c 13       		.uleb128 0x13
 7263 0f1d B4060000 		.4byte	.LASF149
 7264 0f21 01       		.byte	0x1
 7265 0f22 320B     		.2byte	0xb32
 7266 0f24 83000000 		.4byte	0x83
 7267 0f28 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 184


 7268 0f2c 18000000 		.4byte	.LFE64-.LFB64
 7269 0f30 01       		.uleb128 0x1
 7270 0f31 9C       		.byte	0x9c
 7271 0f32 12       		.uleb128 0x12
 7272 0f33 54030000 		.4byte	.LASF150
 7273 0f37 01       		.byte	0x1
 7274 0f38 3F0B     		.2byte	0xb3f
 7275 0f3a 00000000 		.4byte	.LFB65
 7276 0f3e 14000000 		.4byte	.LFE65-.LFB65
 7277 0f42 01       		.uleb128 0x1
 7278 0f43 9C       		.byte	0x9c
 7279 0f44 19       		.uleb128 0x19
 7280 0f45 010A0000 		.4byte	.LASF151
 7281 0f49 01       		.byte	0x1
 7282 0f4a 620B     		.2byte	0xb62
 7283 0f4c F8000000 		.4byte	0xf8
 7284 0f50 00000000 		.4byte	.LFB66
 7285 0f54 2C000000 		.4byte	.LFE66-.LFB66
 7286 0f58 01       		.uleb128 0x1
 7287 0f59 9C       		.byte	0x9c
 7288 0f5a 8C0F0000 		.4byte	0xf8c
 7289 0f5e 15       		.uleb128 0x15
 7290 0f5f A6020000 		.4byte	.LASF113
 7291 0f63 01       		.byte	0x1
 7292 0f64 620B     		.2byte	0xb62
 7293 0f66 83000000 		.4byte	0x83
 7294 0f6a 02       		.uleb128 0x2
 7295 0f6b 91       		.byte	0x91
 7296 0f6c 6C       		.sleb128 -20
 7297 0f6d 15       		.uleb128 0x15
 7298 0f6e 12060000 		.4byte	.LASF152
 7299 0f72 01       		.byte	0x1
 7300 0f73 620B     		.2byte	0xb62
 7301 0f75 F8000000 		.4byte	0xf8
 7302 0f79 02       		.uleb128 0x2
 7303 0f7a 91       		.byte	0x91
 7304 0f7b 68       		.sleb128 -24
 7305 0f7c 16       		.uleb128 0x16
 7306 0f7d A4000000 		.4byte	.LASF153
 7307 0f81 01       		.byte	0x1
 7308 0f82 640B     		.2byte	0xb64
 7309 0f84 F8000000 		.4byte	0xf8
 7310 0f88 02       		.uleb128 0x2
 7311 0f89 91       		.byte	0x91
 7312 0f8a 74       		.sleb128 -12
 7313 0f8b 00       		.byte	0
 7314 0f8c 19       		.uleb128 0x19
 7315 0f8d 07020000 		.4byte	.LASF154
 7316 0f91 01       		.byte	0x1
 7317 0f92 7A0B     		.2byte	0xb7a
 7318 0f94 F8000000 		.4byte	0xf8
 7319 0f98 00000000 		.4byte	.LFB67
 7320 0f9c 1C000000 		.4byte	.LFE67-.LFB67
 7321 0fa0 01       		.uleb128 0x1
 7322 0fa1 9C       		.byte	0x9c
 7323 0fa2 B60F0000 		.4byte	0xfb6
 7324 0fa6 15       		.uleb128 0x15
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 185


 7325 0fa7 A6020000 		.4byte	.LASF113
 7326 0fab 01       		.byte	0x1
 7327 0fac 7A0B     		.2byte	0xb7a
 7328 0fae 83000000 		.4byte	0x83
 7329 0fb2 02       		.uleb128 0x2
 7330 0fb3 91       		.byte	0x91
 7331 0fb4 74       		.sleb128 -12
 7332 0fb5 00       		.byte	0
 7333 0fb6 1E       		.uleb128 0x1e
 7334 0fb7 800A0000 		.4byte	.LASF175
 7335 0fbb 01       		.byte	0x1
 7336 0fbc 870B     		.2byte	0xb87
 7337 0fbe 00000000 		.4byte	.LFB68
 7338 0fc2 44000000 		.4byte	.LFE68-.LFB68
 7339 0fc6 01       		.uleb128 0x1
 7340 0fc7 9C       		.byte	0x9c
 7341 0fc8 DA0F0000 		.4byte	0xfda
 7342 0fcc 1B       		.uleb128 0x1b
 7343 0fcd 6900     		.ascii	"i\000"
 7344 0fcf 01       		.byte	0x1
 7345 0fd0 890B     		.2byte	0xb89
 7346 0fd2 83000000 		.4byte	0x83
 7347 0fd6 02       		.uleb128 0x2
 7348 0fd7 91       		.byte	0x91
 7349 0fd8 74       		.sleb128 -12
 7350 0fd9 00       		.byte	0
 7351 0fda 17       		.uleb128 0x17
 7352 0fdb 32030000 		.4byte	.LASF155
 7353 0fdf 01       		.byte	0x1
 7354 0fe0 A70B     		.2byte	0xba7
 7355 0fe2 00000000 		.4byte	.LFB69
 7356 0fe6 C0000000 		.4byte	.LFE69-.LFB69
 7357 0fea 01       		.uleb128 0x1
 7358 0feb 9C       		.byte	0x9c
 7359 0fec 00100000 		.4byte	0x1000
 7360 0ff0 15       		.uleb128 0x15
 7361 0ff1 95080000 		.4byte	.LASF156
 7362 0ff5 01       		.byte	0x1
 7363 0ff6 A70B     		.2byte	0xba7
 7364 0ff8 00100000 		.4byte	0x1000
 7365 0ffc 02       		.uleb128 0x2
 7366 0ffd 91       		.byte	0x91
 7367 0ffe 74       		.sleb128 -12
 7368 0fff 00       		.byte	0
 7369 1000 06       		.uleb128 0x6
 7370 1001 04       		.byte	0x4
 7371 1002 83000000 		.4byte	0x83
 7372 1006 17       		.uleb128 0x17
 7373 1007 1F070000 		.4byte	.LASF157
 7374 100b 01       		.byte	0x1
 7375 100c D30B     		.2byte	0xbd3
 7376 100e 00000000 		.4byte	.LFB70
 7377 1012 38000000 		.4byte	.LFE70-.LFB70
 7378 1016 01       		.uleb128 0x1
 7379 1017 9C       		.byte	0x9c
 7380 1018 3B100000 		.4byte	0x103b
 7381 101c 15       		.uleb128 0x15
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 186


 7382 101d AB050000 		.4byte	.LASF99
 7383 1021 01       		.byte	0x1
 7384 1022 D30B     		.2byte	0xbd3
 7385 1024 83000000 		.4byte	0x83
 7386 1028 02       		.uleb128 0x2
 7387 1029 91       		.byte	0x91
 7388 102a 6C       		.sleb128 -20
 7389 102b 16       		.uleb128 0x16
 7390 102c 1D040000 		.4byte	.LASF31
 7391 1030 01       		.byte	0x1
 7392 1031 D50B     		.2byte	0xbd5
 7393 1033 83000000 		.4byte	0x83
 7394 1037 02       		.uleb128 0x2
 7395 1038 91       		.byte	0x91
 7396 1039 74       		.sleb128 -12
 7397 103a 00       		.byte	0
 7398 103b 17       		.uleb128 0x17
 7399 103c 09050000 		.4byte	.LASF158
 7400 1040 01       		.byte	0x1
 7401 1041 EE0B     		.2byte	0xbee
 7402 1043 00000000 		.4byte	.LFB71
 7403 1047 38000000 		.4byte	.LFE71-.LFB71
 7404 104b 01       		.uleb128 0x1
 7405 104c 9C       		.byte	0x9c
 7406 104d 70100000 		.4byte	0x1070
 7407 1051 15       		.uleb128 0x15
 7408 1052 AB050000 		.4byte	.LASF99
 7409 1056 01       		.byte	0x1
 7410 1057 EE0B     		.2byte	0xbee
 7411 1059 83000000 		.4byte	0x83
 7412 105d 02       		.uleb128 0x2
 7413 105e 91       		.byte	0x91
 7414 105f 6C       		.sleb128 -20
 7415 1060 16       		.uleb128 0x16
 7416 1061 1D040000 		.4byte	.LASF31
 7417 1065 01       		.byte	0x1
 7418 1066 F00B     		.2byte	0xbf0
 7419 1068 83000000 		.4byte	0x83
 7420 106c 02       		.uleb128 0x2
 7421 106d 91       		.byte	0x91
 7422 106e 74       		.sleb128 -12
 7423 106f 00       		.byte	0
 7424 1070 17       		.uleb128 0x17
 7425 1071 2C090000 		.4byte	.LASF159
 7426 1075 01       		.byte	0x1
 7427 1076 090C     		.2byte	0xc09
 7428 1078 00000000 		.4byte	.LFB72
 7429 107c 38000000 		.4byte	.LFE72-.LFB72
 7430 1080 01       		.uleb128 0x1
 7431 1081 9C       		.byte	0x9c
 7432 1082 A5100000 		.4byte	0x10a5
 7433 1086 15       		.uleb128 0x15
 7434 1087 AB050000 		.4byte	.LASF99
 7435 108b 01       		.byte	0x1
 7436 108c 090C     		.2byte	0xc09
 7437 108e 83000000 		.4byte	0x83
 7438 1092 02       		.uleb128 0x2
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 187


 7439 1093 91       		.byte	0x91
 7440 1094 6C       		.sleb128 -20
 7441 1095 16       		.uleb128 0x16
 7442 1096 1D040000 		.4byte	.LASF31
 7443 109a 01       		.byte	0x1
 7444 109b 0B0C     		.2byte	0xc0b
 7445 109d 83000000 		.4byte	0x83
 7446 10a1 02       		.uleb128 0x2
 7447 10a2 91       		.byte	0x91
 7448 10a3 74       		.sleb128 -12
 7449 10a4 00       		.byte	0
 7450 10a5 14       		.uleb128 0x14
 7451 10a6 BB050000 		.4byte	.LASF160
 7452 10aa 01       		.byte	0x1
 7453 10ab 260C     		.2byte	0xc26
 7454 10ad 00000000 		.4byte	.LFB73
 7455 10b1 A0000000 		.4byte	.LFE73-.LFB73
 7456 10b5 01       		.uleb128 0x1
 7457 10b6 9C       		.byte	0x9c
 7458 10b7 E9100000 		.4byte	0x10e9
 7459 10bb 15       		.uleb128 0x15
 7460 10bc 1E010000 		.4byte	.LASF161
 7461 10c0 01       		.byte	0x1
 7462 10c1 260C     		.2byte	0xc26
 7463 10c3 83000000 		.4byte	0x83
 7464 10c7 02       		.uleb128 0x2
 7465 10c8 91       		.byte	0x91
 7466 10c9 6C       		.sleb128 -20
 7467 10ca 15       		.uleb128 0x15
 7468 10cb AB050000 		.4byte	.LASF99
 7469 10cf 01       		.byte	0x1
 7470 10d0 260C     		.2byte	0xc26
 7471 10d2 83000000 		.4byte	0x83
 7472 10d6 02       		.uleb128 0x2
 7473 10d7 91       		.byte	0x91
 7474 10d8 68       		.sleb128 -24
 7475 10d9 16       		.uleb128 0x16
 7476 10da 1D040000 		.4byte	.LASF31
 7477 10de 01       		.byte	0x1
 7478 10df 280C     		.2byte	0xc28
 7479 10e1 83000000 		.4byte	0x83
 7480 10e5 02       		.uleb128 0x2
 7481 10e6 91       		.byte	0x91
 7482 10e7 74       		.sleb128 -12
 7483 10e8 00       		.byte	0
 7484 10e9 0C       		.uleb128 0xc
 7485 10ea F8000000 		.4byte	0xf8
 7486 10ee F9100000 		.4byte	0x10f9
 7487 10f2 0D       		.uleb128 0xd
 7488 10f3 F1000000 		.4byte	0xf1
 7489 10f7 04       		.byte	0x4
 7490 10f8 00       		.byte	0
 7491 10f9 11       		.uleb128 0x11
 7492 10fa 74080000 		.4byte	.LASF162
 7493 10fe 01       		.byte	0x1
 7494 10ff 22       		.byte	0x22
 7495 1100 E9100000 		.4byte	0x10e9
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 188


 7496 1104 05       		.uleb128 0x5
 7497 1105 03       		.byte	0x3
 7498 1106 00000000 		.4byte	CySysTickCallbacks
 7499 110a 1F       		.uleb128 0x1f
 7500 110b 5E060000 		.4byte	.LASF163
 7501 110f 01       		.byte	0x1
 7502 1110 1B       		.byte	0x1b
 7503 1111 83000000 		.4byte	0x83
 7504 1115 05       		.uleb128 0x5
 7505 1116 03       		.byte	0x3
 7506 1117 00000000 		.4byte	cydelayFreqHz
 7507 111b 1F       		.uleb128 0x1f
 7508 111c 22020000 		.4byte	.LASF164
 7509 1120 01       		.byte	0x1
 7510 1121 1C       		.byte	0x1c
 7511 1122 83000000 		.4byte	0x83
 7512 1126 05       		.uleb128 0x5
 7513 1127 03       		.byte	0x3
 7514 1128 00000000 		.4byte	cydelayFreqKhz
 7515 112c 1F       		.uleb128 0x1f
 7516 112d 09090000 		.4byte	.LASF165
 7517 1131 01       		.byte	0x1
 7518 1132 1D       		.byte	0x1d
 7519 1133 6B000000 		.4byte	0x6b
 7520 1137 05       		.uleb128 0x5
 7521 1138 03       		.byte	0x3
 7522 1139 00000000 		.4byte	cydelayFreqMhz
 7523 113d 1F       		.uleb128 0x1f
 7524 113e F4020000 		.4byte	.LASF166
 7525 1142 01       		.byte	0x1
 7526 1143 1E       		.byte	0x1e
 7527 1144 83000000 		.4byte	0x83
 7528 1148 05       		.uleb128 0x5
 7529 1149 03       		.byte	0x3
 7530 114a 00000000 		.4byte	cydelay32kMs
 7531 114e 1F       		.uleb128 0x1f
 7532 114f 08010000 		.4byte	.LASF167
 7533 1153 01       		.byte	0x1
 7534 1154 36       		.byte	0x36
 7535 1155 83000000 		.4byte	0x83
 7536 1159 05       		.uleb128 0x5
 7537 115a 03       		.byte	0x3
 7538 115b 00000000 		.4byte	CySysTickInitVar
 7539 115f 0C       		.uleb128 0xc
 7540 1160 6B000000 		.4byte	0x6b
 7541 1164 6F110000 		.4byte	0x116f
 7542 1168 0D       		.uleb128 0xd
 7543 1169 F1000000 		.4byte	0xf1
 7544 116d 2D       		.byte	0x2d
 7545 116e 00       		.byte	0
 7546 116f 1F       		.uleb128 0x1f
 7547 1170 25060000 		.4byte	.LASF168
 7548 1174 01       		.byte	0x1
 7549 1175 3B       		.byte	0x3b
 7550 1176 80110000 		.4byte	0x1180
 7551 117a 05       		.uleb128 0x5
 7552 117b 03       		.byte	0x3
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 189


 7553 117c 00000000 		.4byte	cyImoFreqMhz2Reg
 7554 1180 20       		.uleb128 0x20
 7555 1181 5F110000 		.4byte	0x115f
 7556 1185 0C       		.uleb128 0xc
 7557 1186 6B000000 		.4byte	0x6b
 7558 118a 95110000 		.4byte	0x1195
 7559 118e 0D       		.uleb128 0xd
 7560 118f F1000000 		.4byte	0xf1
 7561 1193 16       		.byte	0x16
 7562 1194 00       		.byte	0
 7563 1195 1F       		.uleb128 0x1f
 7564 1196 11080000 		.4byte	.LASF169
 7565 119a 01       		.byte	0x1
 7566 119b 4C       		.byte	0x4c
 7567 119c A6110000 		.4byte	0x11a6
 7568 11a0 05       		.uleb128 0x5
 7569 11a1 03       		.byte	0x3
 7570 11a2 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 7571 11a6 20       		.uleb128 0x20
 7572 11a7 85110000 		.4byte	0x1185
 7573 11ab 1F       		.uleb128 0x1f
 7574 11ac 3B060000 		.4byte	.LASF170
 7575 11b0 01       		.byte	0x1
 7576 11b1 57       		.byte	0x57
 7577 11b2 83000000 		.4byte	0x83
 7578 11b6 05       		.uleb128 0x5
 7579 11b7 03       		.byte	0x3
 7580 11b8 00000000 		.4byte	CySysClkImoTrim4
 7581 11bc 1F       		.uleb128 0x1f
 7582 11bd 62000000 		.4byte	.LASF171
 7583 11c1 01       		.byte	0x1
 7584 11c2 5B       		.byte	0x5b
 7585 11c3 83000000 		.4byte	0x83
 7586 11c7 05       		.uleb128 0x5
 7587 11c8 03       		.byte	0x3
 7588 11c9 00000000 		.4byte	CySysClkPumpConfig
 7589 11cd 00       		.byte	0
 7590              		.section	.debug_abbrev,"",%progbits
 7591              	.Ldebug_abbrev0:
 7592 0000 01       		.uleb128 0x1
 7593 0001 11       		.uleb128 0x11
 7594 0002 01       		.byte	0x1
 7595 0003 25       		.uleb128 0x25
 7596 0004 0E       		.uleb128 0xe
 7597 0005 13       		.uleb128 0x13
 7598 0006 0B       		.uleb128 0xb
 7599 0007 03       		.uleb128 0x3
 7600 0008 0E       		.uleb128 0xe
 7601 0009 1B       		.uleb128 0x1b
 7602 000a 0E       		.uleb128 0xe
 7603 000b 55       		.uleb128 0x55
 7604 000c 17       		.uleb128 0x17
 7605 000d 11       		.uleb128 0x11
 7606 000e 01       		.uleb128 0x1
 7607 000f 10       		.uleb128 0x10
 7608 0010 17       		.uleb128 0x17
 7609 0011 00       		.byte	0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 190


 7610 0012 00       		.byte	0
 7611 0013 02       		.uleb128 0x2
 7612 0014 24       		.uleb128 0x24
 7613 0015 00       		.byte	0
 7614 0016 0B       		.uleb128 0xb
 7615 0017 0B       		.uleb128 0xb
 7616 0018 3E       		.uleb128 0x3e
 7617 0019 0B       		.uleb128 0xb
 7618 001a 03       		.uleb128 0x3
 7619 001b 0E       		.uleb128 0xe
 7620 001c 00       		.byte	0
 7621 001d 00       		.byte	0
 7622 001e 03       		.uleb128 0x3
 7623 001f 24       		.uleb128 0x24
 7624 0020 00       		.byte	0
 7625 0021 0B       		.uleb128 0xb
 7626 0022 0B       		.uleb128 0xb
 7627 0023 3E       		.uleb128 0x3e
 7628 0024 0B       		.uleb128 0xb
 7629 0025 03       		.uleb128 0x3
 7630 0026 08       		.uleb128 0x8
 7631 0027 00       		.byte	0
 7632 0028 00       		.byte	0
 7633 0029 04       		.uleb128 0x4
 7634 002a 16       		.uleb128 0x16
 7635 002b 00       		.byte	0
 7636 002c 03       		.uleb128 0x3
 7637 002d 0E       		.uleb128 0xe
 7638 002e 3A       		.uleb128 0x3a
 7639 002f 0B       		.uleb128 0xb
 7640 0030 3B       		.uleb128 0x3b
 7641 0031 05       		.uleb128 0x5
 7642 0032 49       		.uleb128 0x49
 7643 0033 13       		.uleb128 0x13
 7644 0034 00       		.byte	0
 7645 0035 00       		.byte	0
 7646 0036 05       		.uleb128 0x5
 7647 0037 35       		.uleb128 0x35
 7648 0038 00       		.byte	0
 7649 0039 49       		.uleb128 0x49
 7650 003a 13       		.uleb128 0x13
 7651 003b 00       		.byte	0
 7652 003c 00       		.byte	0
 7653 003d 06       		.uleb128 0x6
 7654 003e 0F       		.uleb128 0xf
 7655 003f 00       		.byte	0
 7656 0040 0B       		.uleb128 0xb
 7657 0041 0B       		.uleb128 0xb
 7658 0042 49       		.uleb128 0x49
 7659 0043 13       		.uleb128 0x13
 7660 0044 00       		.byte	0
 7661 0045 00       		.byte	0
 7662 0046 07       		.uleb128 0x7
 7663 0047 15       		.uleb128 0x15
 7664 0048 00       		.byte	0
 7665 0049 27       		.uleb128 0x27
 7666 004a 19       		.uleb128 0x19
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 191


 7667 004b 00       		.byte	0
 7668 004c 00       		.byte	0
 7669 004d 08       		.uleb128 0x8
 7670 004e 16       		.uleb128 0x16
 7671 004f 00       		.byte	0
 7672 0050 03       		.uleb128 0x3
 7673 0051 0E       		.uleb128 0xe
 7674 0052 3A       		.uleb128 0x3a
 7675 0053 0B       		.uleb128 0xb
 7676 0054 3B       		.uleb128 0x3b
 7677 0055 0B       		.uleb128 0xb
 7678 0056 49       		.uleb128 0x49
 7679 0057 13       		.uleb128 0x13
 7680 0058 00       		.byte	0
 7681 0059 00       		.byte	0
 7682 005a 09       		.uleb128 0x9
 7683 005b 13       		.uleb128 0x13
 7684 005c 01       		.byte	0x1
 7685 005d 0B       		.uleb128 0xb
 7686 005e 0B       		.uleb128 0xb
 7687 005f 3A       		.uleb128 0x3a
 7688 0060 0B       		.uleb128 0xb
 7689 0061 3B       		.uleb128 0x3b
 7690 0062 05       		.uleb128 0x5
 7691 0063 01       		.uleb128 0x1
 7692 0064 13       		.uleb128 0x13
 7693 0065 00       		.byte	0
 7694 0066 00       		.byte	0
 7695 0067 0A       		.uleb128 0xa
 7696 0068 0D       		.uleb128 0xd
 7697 0069 00       		.byte	0
 7698 006a 03       		.uleb128 0x3
 7699 006b 0E       		.uleb128 0xe
 7700 006c 3A       		.uleb128 0x3a
 7701 006d 0B       		.uleb128 0xb
 7702 006e 3B       		.uleb128 0x3b
 7703 006f 05       		.uleb128 0x5
 7704 0070 49       		.uleb128 0x49
 7705 0071 13       		.uleb128 0x13
 7706 0072 38       		.uleb128 0x38
 7707 0073 0B       		.uleb128 0xb
 7708 0074 00       		.byte	0
 7709 0075 00       		.byte	0
 7710 0076 0B       		.uleb128 0xb
 7711 0077 0D       		.uleb128 0xd
 7712 0078 00       		.byte	0
 7713 0079 03       		.uleb128 0x3
 7714 007a 08       		.uleb128 0x8
 7715 007b 3A       		.uleb128 0x3a
 7716 007c 0B       		.uleb128 0xb
 7717 007d 3B       		.uleb128 0x3b
 7718 007e 05       		.uleb128 0x5
 7719 007f 49       		.uleb128 0x49
 7720 0080 13       		.uleb128 0x13
 7721 0081 38       		.uleb128 0x38
 7722 0082 0B       		.uleb128 0xb
 7723 0083 00       		.byte	0
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 192


 7724 0084 00       		.byte	0
 7725 0085 0C       		.uleb128 0xc
 7726 0086 01       		.uleb128 0x1
 7727 0087 01       		.byte	0x1
 7728 0088 49       		.uleb128 0x49
 7729 0089 13       		.uleb128 0x13
 7730 008a 01       		.uleb128 0x1
 7731 008b 13       		.uleb128 0x13
 7732 008c 00       		.byte	0
 7733 008d 00       		.byte	0
 7734 008e 0D       		.uleb128 0xd
 7735 008f 21       		.uleb128 0x21
 7736 0090 00       		.byte	0
 7737 0091 49       		.uleb128 0x49
 7738 0092 13       		.uleb128 0x13
 7739 0093 2F       		.uleb128 0x2f
 7740 0094 0B       		.uleb128 0xb
 7741 0095 00       		.byte	0
 7742 0096 00       		.byte	0
 7743 0097 0E       		.uleb128 0xe
 7744 0098 2E       		.uleb128 0x2e
 7745 0099 00       		.byte	0
 7746 009a 3F       		.uleb128 0x3f
 7747 009b 19       		.uleb128 0x19
 7748 009c 03       		.uleb128 0x3
 7749 009d 0E       		.uleb128 0xe
 7750 009e 3A       		.uleb128 0x3a
 7751 009f 0B       		.uleb128 0xb
 7752 00a0 3B       		.uleb128 0x3b
 7753 00a1 0B       		.uleb128 0xb
 7754 00a2 27       		.uleb128 0x27
 7755 00a3 19       		.uleb128 0x19
 7756 00a4 11       		.uleb128 0x11
 7757 00a5 01       		.uleb128 0x1
 7758 00a6 12       		.uleb128 0x12
 7759 00a7 06       		.uleb128 0x6
 7760 00a8 40       		.uleb128 0x40
 7761 00a9 18       		.uleb128 0x18
 7762 00aa 9642     		.uleb128 0x2116
 7763 00ac 19       		.uleb128 0x19
 7764 00ad 00       		.byte	0
 7765 00ae 00       		.byte	0
 7766 00af 0F       		.uleb128 0xf
 7767 00b0 2E       		.uleb128 0x2e
 7768 00b1 01       		.byte	0x1
 7769 00b2 3F       		.uleb128 0x3f
 7770 00b3 19       		.uleb128 0x19
 7771 00b4 03       		.uleb128 0x3
 7772 00b5 0E       		.uleb128 0xe
 7773 00b6 3A       		.uleb128 0x3a
 7774 00b7 0B       		.uleb128 0xb
 7775 00b8 3B       		.uleb128 0x3b
 7776 00b9 0B       		.uleb128 0xb
 7777 00ba 27       		.uleb128 0x27
 7778 00bb 19       		.uleb128 0x19
 7779 00bc 11       		.uleb128 0x11
 7780 00bd 01       		.uleb128 0x1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 193


 7781 00be 12       		.uleb128 0x12
 7782 00bf 06       		.uleb128 0x6
 7783 00c0 40       		.uleb128 0x40
 7784 00c1 18       		.uleb128 0x18
 7785 00c2 9642     		.uleb128 0x2116
 7786 00c4 19       		.uleb128 0x19
 7787 00c5 01       		.uleb128 0x1
 7788 00c6 13       		.uleb128 0x13
 7789 00c7 00       		.byte	0
 7790 00c8 00       		.byte	0
 7791 00c9 10       		.uleb128 0x10
 7792 00ca 34       		.uleb128 0x34
 7793 00cb 00       		.byte	0
 7794 00cc 03       		.uleb128 0x3
 7795 00cd 08       		.uleb128 0x8
 7796 00ce 3A       		.uleb128 0x3a
 7797 00cf 0B       		.uleb128 0xb
 7798 00d0 3B       		.uleb128 0x3b
 7799 00d1 0B       		.uleb128 0xb
 7800 00d2 49       		.uleb128 0x49
 7801 00d3 13       		.uleb128 0x13
 7802 00d4 02       		.uleb128 0x2
 7803 00d5 18       		.uleb128 0x18
 7804 00d6 00       		.byte	0
 7805 00d7 00       		.byte	0
 7806 00d8 11       		.uleb128 0x11
 7807 00d9 34       		.uleb128 0x34
 7808 00da 00       		.byte	0
 7809 00db 03       		.uleb128 0x3
 7810 00dc 0E       		.uleb128 0xe
 7811 00dd 3A       		.uleb128 0x3a
 7812 00de 0B       		.uleb128 0xb
 7813 00df 3B       		.uleb128 0x3b
 7814 00e0 0B       		.uleb128 0xb
 7815 00e1 49       		.uleb128 0x49
 7816 00e2 13       		.uleb128 0x13
 7817 00e3 02       		.uleb128 0x2
 7818 00e4 18       		.uleb128 0x18
 7819 00e5 00       		.byte	0
 7820 00e6 00       		.byte	0
 7821 00e7 12       		.uleb128 0x12
 7822 00e8 2E       		.uleb128 0x2e
 7823 00e9 00       		.byte	0
 7824 00ea 3F       		.uleb128 0x3f
 7825 00eb 19       		.uleb128 0x19
 7826 00ec 03       		.uleb128 0x3
 7827 00ed 0E       		.uleb128 0xe
 7828 00ee 3A       		.uleb128 0x3a
 7829 00ef 0B       		.uleb128 0xb
 7830 00f0 3B       		.uleb128 0x3b
 7831 00f1 05       		.uleb128 0x5
 7832 00f2 27       		.uleb128 0x27
 7833 00f3 19       		.uleb128 0x19
 7834 00f4 11       		.uleb128 0x11
 7835 00f5 01       		.uleb128 0x1
 7836 00f6 12       		.uleb128 0x12
 7837 00f7 06       		.uleb128 0x6
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 194


 7838 00f8 40       		.uleb128 0x40
 7839 00f9 18       		.uleb128 0x18
 7840 00fa 9742     		.uleb128 0x2117
 7841 00fc 19       		.uleb128 0x19
 7842 00fd 00       		.byte	0
 7843 00fe 00       		.byte	0
 7844 00ff 13       		.uleb128 0x13
 7845 0100 2E       		.uleb128 0x2e
 7846 0101 00       		.byte	0
 7847 0102 3F       		.uleb128 0x3f
 7848 0103 19       		.uleb128 0x19
 7849 0104 03       		.uleb128 0x3
 7850 0105 0E       		.uleb128 0xe
 7851 0106 3A       		.uleb128 0x3a
 7852 0107 0B       		.uleb128 0xb
 7853 0108 3B       		.uleb128 0x3b
 7854 0109 05       		.uleb128 0x5
 7855 010a 27       		.uleb128 0x27
 7856 010b 19       		.uleb128 0x19
 7857 010c 49       		.uleb128 0x49
 7858 010d 13       		.uleb128 0x13
 7859 010e 11       		.uleb128 0x11
 7860 010f 01       		.uleb128 0x1
 7861 0110 12       		.uleb128 0x12
 7862 0111 06       		.uleb128 0x6
 7863 0112 40       		.uleb128 0x40
 7864 0113 18       		.uleb128 0x18
 7865 0114 9742     		.uleb128 0x2117
 7866 0116 19       		.uleb128 0x19
 7867 0117 00       		.byte	0
 7868 0118 00       		.byte	0
 7869 0119 14       		.uleb128 0x14
 7870 011a 2E       		.uleb128 0x2e
 7871 011b 01       		.byte	0x1
 7872 011c 3F       		.uleb128 0x3f
 7873 011d 19       		.uleb128 0x19
 7874 011e 03       		.uleb128 0x3
 7875 011f 0E       		.uleb128 0xe
 7876 0120 3A       		.uleb128 0x3a
 7877 0121 0B       		.uleb128 0xb
 7878 0122 3B       		.uleb128 0x3b
 7879 0123 05       		.uleb128 0x5
 7880 0124 27       		.uleb128 0x27
 7881 0125 19       		.uleb128 0x19
 7882 0126 11       		.uleb128 0x11
 7883 0127 01       		.uleb128 0x1
 7884 0128 12       		.uleb128 0x12
 7885 0129 06       		.uleb128 0x6
 7886 012a 40       		.uleb128 0x40
 7887 012b 18       		.uleb128 0x18
 7888 012c 9642     		.uleb128 0x2116
 7889 012e 19       		.uleb128 0x19
 7890 012f 01       		.uleb128 0x1
 7891 0130 13       		.uleb128 0x13
 7892 0131 00       		.byte	0
 7893 0132 00       		.byte	0
 7894 0133 15       		.uleb128 0x15
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 195


 7895 0134 05       		.uleb128 0x5
 7896 0135 00       		.byte	0
 7897 0136 03       		.uleb128 0x3
 7898 0137 0E       		.uleb128 0xe
 7899 0138 3A       		.uleb128 0x3a
 7900 0139 0B       		.uleb128 0xb
 7901 013a 3B       		.uleb128 0x3b
 7902 013b 05       		.uleb128 0x5
 7903 013c 49       		.uleb128 0x49
 7904 013d 13       		.uleb128 0x13
 7905 013e 02       		.uleb128 0x2
 7906 013f 18       		.uleb128 0x18
 7907 0140 00       		.byte	0
 7908 0141 00       		.byte	0
 7909 0142 16       		.uleb128 0x16
 7910 0143 34       		.uleb128 0x34
 7911 0144 00       		.byte	0
 7912 0145 03       		.uleb128 0x3
 7913 0146 0E       		.uleb128 0xe
 7914 0147 3A       		.uleb128 0x3a
 7915 0148 0B       		.uleb128 0xb
 7916 0149 3B       		.uleb128 0x3b
 7917 014a 05       		.uleb128 0x5
 7918 014b 49       		.uleb128 0x49
 7919 014c 13       		.uleb128 0x13
 7920 014d 02       		.uleb128 0x2
 7921 014e 18       		.uleb128 0x18
 7922 014f 00       		.byte	0
 7923 0150 00       		.byte	0
 7924 0151 17       		.uleb128 0x17
 7925 0152 2E       		.uleb128 0x2e
 7926 0153 01       		.byte	0x1
 7927 0154 3F       		.uleb128 0x3f
 7928 0155 19       		.uleb128 0x19
 7929 0156 03       		.uleb128 0x3
 7930 0157 0E       		.uleb128 0xe
 7931 0158 3A       		.uleb128 0x3a
 7932 0159 0B       		.uleb128 0xb
 7933 015a 3B       		.uleb128 0x3b
 7934 015b 05       		.uleb128 0x5
 7935 015c 27       		.uleb128 0x27
 7936 015d 19       		.uleb128 0x19
 7937 015e 11       		.uleb128 0x11
 7938 015f 01       		.uleb128 0x1
 7939 0160 12       		.uleb128 0x12
 7940 0161 06       		.uleb128 0x6
 7941 0162 40       		.uleb128 0x40
 7942 0163 18       		.uleb128 0x18
 7943 0164 9742     		.uleb128 0x2117
 7944 0166 19       		.uleb128 0x19
 7945 0167 01       		.uleb128 0x1
 7946 0168 13       		.uleb128 0x13
 7947 0169 00       		.byte	0
 7948 016a 00       		.byte	0
 7949 016b 18       		.uleb128 0x18
 7950 016c 2E       		.uleb128 0x2e
 7951 016d 01       		.byte	0x1
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 196


 7952 016e 3F       		.uleb128 0x3f
 7953 016f 19       		.uleb128 0x19
 7954 0170 03       		.uleb128 0x3
 7955 0171 0E       		.uleb128 0xe
 7956 0172 3A       		.uleb128 0x3a
 7957 0173 0B       		.uleb128 0xb
 7958 0174 3B       		.uleb128 0x3b
 7959 0175 05       		.uleb128 0x5
 7960 0176 27       		.uleb128 0x27
 7961 0177 19       		.uleb128 0x19
 7962 0178 49       		.uleb128 0x49
 7963 0179 13       		.uleb128 0x13
 7964 017a 11       		.uleb128 0x11
 7965 017b 01       		.uleb128 0x1
 7966 017c 12       		.uleb128 0x12
 7967 017d 06       		.uleb128 0x6
 7968 017e 40       		.uleb128 0x40
 7969 017f 18       		.uleb128 0x18
 7970 0180 9642     		.uleb128 0x2116
 7971 0182 19       		.uleb128 0x19
 7972 0183 01       		.uleb128 0x1
 7973 0184 13       		.uleb128 0x13
 7974 0185 00       		.byte	0
 7975 0186 00       		.byte	0
 7976 0187 19       		.uleb128 0x19
 7977 0188 2E       		.uleb128 0x2e
 7978 0189 01       		.byte	0x1
 7979 018a 3F       		.uleb128 0x3f
 7980 018b 19       		.uleb128 0x19
 7981 018c 03       		.uleb128 0x3
 7982 018d 0E       		.uleb128 0xe
 7983 018e 3A       		.uleb128 0x3a
 7984 018f 0B       		.uleb128 0xb
 7985 0190 3B       		.uleb128 0x3b
 7986 0191 05       		.uleb128 0x5
 7987 0192 27       		.uleb128 0x27
 7988 0193 19       		.uleb128 0x19
 7989 0194 49       		.uleb128 0x49
 7990 0195 13       		.uleb128 0x13
 7991 0196 11       		.uleb128 0x11
 7992 0197 01       		.uleb128 0x1
 7993 0198 12       		.uleb128 0x12
 7994 0199 06       		.uleb128 0x6
 7995 019a 40       		.uleb128 0x40
 7996 019b 18       		.uleb128 0x18
 7997 019c 9742     		.uleb128 0x2117
 7998 019e 19       		.uleb128 0x19
 7999 019f 01       		.uleb128 0x1
 8000 01a0 13       		.uleb128 0x13
 8001 01a1 00       		.byte	0
 8002 01a2 00       		.byte	0
 8003 01a3 1A       		.uleb128 0x1a
 8004 01a4 05       		.uleb128 0x5
 8005 01a5 00       		.byte	0
 8006 01a6 03       		.uleb128 0x3
 8007 01a7 08       		.uleb128 0x8
 8008 01a8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 197


 8009 01a9 0B       		.uleb128 0xb
 8010 01aa 3B       		.uleb128 0x3b
 8011 01ab 05       		.uleb128 0x5
 8012 01ac 49       		.uleb128 0x49
 8013 01ad 13       		.uleb128 0x13
 8014 01ae 02       		.uleb128 0x2
 8015 01af 18       		.uleb128 0x18
 8016 01b0 00       		.byte	0
 8017 01b1 00       		.byte	0
 8018 01b2 1B       		.uleb128 0x1b
 8019 01b3 34       		.uleb128 0x34
 8020 01b4 00       		.byte	0
 8021 01b5 03       		.uleb128 0x3
 8022 01b6 08       		.uleb128 0x8
 8023 01b7 3A       		.uleb128 0x3a
 8024 01b8 0B       		.uleb128 0xb
 8025 01b9 3B       		.uleb128 0x3b
 8026 01ba 05       		.uleb128 0x5
 8027 01bb 49       		.uleb128 0x49
 8028 01bc 13       		.uleb128 0x13
 8029 01bd 02       		.uleb128 0x2
 8030 01be 18       		.uleb128 0x18
 8031 01bf 00       		.byte	0
 8032 01c0 00       		.byte	0
 8033 01c1 1C       		.uleb128 0x1c
 8034 01c2 2E       		.uleb128 0x2e
 8035 01c3 01       		.byte	0x1
 8036 01c4 03       		.uleb128 0x3
 8037 01c5 0E       		.uleb128 0xe
 8038 01c6 3A       		.uleb128 0x3a
 8039 01c7 0B       		.uleb128 0xb
 8040 01c8 3B       		.uleb128 0x3b
 8041 01c9 05       		.uleb128 0x5
 8042 01ca 27       		.uleb128 0x27
 8043 01cb 19       		.uleb128 0x19
 8044 01cc 49       		.uleb128 0x49
 8045 01cd 13       		.uleb128 0x13
 8046 01ce 11       		.uleb128 0x11
 8047 01cf 01       		.uleb128 0x1
 8048 01d0 12       		.uleb128 0x12
 8049 01d1 06       		.uleb128 0x6
 8050 01d2 40       		.uleb128 0x40
 8051 01d3 18       		.uleb128 0x18
 8052 01d4 9642     		.uleb128 0x2116
 8053 01d6 19       		.uleb128 0x19
 8054 01d7 01       		.uleb128 0x1
 8055 01d8 13       		.uleb128 0x13
 8056 01d9 00       		.byte	0
 8057 01da 00       		.byte	0
 8058 01db 1D       		.uleb128 0x1d
 8059 01dc 2E       		.uleb128 0x2e
 8060 01dd 00       		.byte	0
 8061 01de 3F       		.uleb128 0x3f
 8062 01df 19       		.uleb128 0x19
 8063 01e0 03       		.uleb128 0x3
 8064 01e1 0E       		.uleb128 0xe
 8065 01e2 3A       		.uleb128 0x3a
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 198


 8066 01e3 0B       		.uleb128 0xb
 8067 01e4 3B       		.uleb128 0x3b
 8068 01e5 05       		.uleb128 0x5
 8069 01e6 27       		.uleb128 0x27
 8070 01e7 19       		.uleb128 0x19
 8071 01e8 11       		.uleb128 0x11
 8072 01e9 01       		.uleb128 0x1
 8073 01ea 12       		.uleb128 0x12
 8074 01eb 06       		.uleb128 0x6
 8075 01ec 40       		.uleb128 0x40
 8076 01ed 18       		.uleb128 0x18
 8077 01ee 9642     		.uleb128 0x2116
 8078 01f0 19       		.uleb128 0x19
 8079 01f1 00       		.byte	0
 8080 01f2 00       		.byte	0
 8081 01f3 1E       		.uleb128 0x1e
 8082 01f4 2E       		.uleb128 0x2e
 8083 01f5 01       		.byte	0x1
 8084 01f6 03       		.uleb128 0x3
 8085 01f7 0E       		.uleb128 0xe
 8086 01f8 3A       		.uleb128 0x3a
 8087 01f9 0B       		.uleb128 0xb
 8088 01fa 3B       		.uleb128 0x3b
 8089 01fb 05       		.uleb128 0x5
 8090 01fc 27       		.uleb128 0x27
 8091 01fd 19       		.uleb128 0x19
 8092 01fe 11       		.uleb128 0x11
 8093 01ff 01       		.uleb128 0x1
 8094 0200 12       		.uleb128 0x12
 8095 0201 06       		.uleb128 0x6
 8096 0202 40       		.uleb128 0x40
 8097 0203 18       		.uleb128 0x18
 8098 0204 9642     		.uleb128 0x2116
 8099 0206 19       		.uleb128 0x19
 8100 0207 01       		.uleb128 0x1
 8101 0208 13       		.uleb128 0x13
 8102 0209 00       		.byte	0
 8103 020a 00       		.byte	0
 8104 020b 1F       		.uleb128 0x1f
 8105 020c 34       		.uleb128 0x34
 8106 020d 00       		.byte	0
 8107 020e 03       		.uleb128 0x3
 8108 020f 0E       		.uleb128 0xe
 8109 0210 3A       		.uleb128 0x3a
 8110 0211 0B       		.uleb128 0xb
 8111 0212 3B       		.uleb128 0x3b
 8112 0213 0B       		.uleb128 0xb
 8113 0214 49       		.uleb128 0x49
 8114 0215 13       		.uleb128 0x13
 8115 0216 3F       		.uleb128 0x3f
 8116 0217 19       		.uleb128 0x19
 8117 0218 02       		.uleb128 0x2
 8118 0219 18       		.uleb128 0x18
 8119 021a 00       		.byte	0
 8120 021b 00       		.byte	0
 8121 021c 20       		.uleb128 0x20
 8122 021d 26       		.uleb128 0x26
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 199


 8123 021e 00       		.byte	0
 8124 021f 49       		.uleb128 0x49
 8125 0220 13       		.uleb128 0x13
 8126 0221 00       		.byte	0
 8127 0222 00       		.byte	0
 8128 0223 00       		.byte	0
 8129              		.section	.debug_aranges,"",%progbits
 8130 0000 5C020000 		.4byte	0x25c
 8131 0004 0200     		.2byte	0x2
 8132 0006 00000000 		.4byte	.Ldebug_info0
 8133 000a 04       		.byte	0x4
 8134 000b 00       		.byte	0
 8135 000c 0000     		.2byte	0
 8136 000e 0000     		.2byte	0
 8137 0010 00000000 		.4byte	.LFB1
 8138 0014 20000000 		.4byte	.LFE1-.LFB1
 8139 0018 00000000 		.4byte	.LFB2
 8140 001c 20000000 		.4byte	.LFE2-.LFB2
 8141 0020 00000000 		.4byte	.LFB3
 8142 0024 54010000 		.4byte	.LFE3-.LFB3
 8143 0028 00000000 		.4byte	.LFB4
 8144 002c 1C000000 		.4byte	.LFE4-.LFB4
 8145 0030 00000000 		.4byte	.LFB5
 8146 0034 20000000 		.4byte	.LFE5-.LFB5
 8147 0038 00000000 		.4byte	.LFB6
 8148 003c 50000000 		.4byte	.LFE6-.LFB6
 8149 0040 00000000 		.4byte	.LFB7
 8150 0044 34000000 		.4byte	.LFE7-.LFB7
 8151 0048 00000000 		.4byte	.LFB8
 8152 004c 20000000 		.4byte	.LFE8-.LFB8
 8153 0050 00000000 		.4byte	.LFB9
 8154 0054 70000000 		.4byte	.LFE9-.LFB9
 8155 0058 00000000 		.4byte	.LFB10
 8156 005c 50000000 		.4byte	.LFE10-.LFB10
 8157 0060 00000000 		.4byte	.LFB11
 8158 0064 4C000000 		.4byte	.LFE11-.LFB11
 8159 0068 00000000 		.4byte	.LFB12
 8160 006c 44000000 		.4byte	.LFE12-.LFB12
 8161 0070 00000000 		.4byte	.LFB13
 8162 0074 64020000 		.4byte	.LFE13-.LFB13
 8163 0078 00000000 		.4byte	.LFB14
 8164 007c 68000000 		.4byte	.LFE14-.LFB14
 8165 0080 00000000 		.4byte	.LFB15
 8166 0084 1C000000 		.4byte	.LFE15-.LFB15
 8167 0088 00000000 		.4byte	.LFB16
 8168 008c 24000000 		.4byte	.LFE16-.LFB16
 8169 0090 00000000 		.4byte	.LFB17
 8170 0094 98000000 		.4byte	.LFE17-.LFB17
 8171 0098 00000000 		.4byte	.LFB18
 8172 009c E4010000 		.4byte	.LFE18-.LFB18
 8173 00a0 00000000 		.4byte	.LFB19
 8174 00a4 10010000 		.4byte	.LFE19-.LFB19
 8175 00a8 00000000 		.4byte	.LFB20
 8176 00ac 6C000000 		.4byte	.LFE20-.LFB20
 8177 00b0 00000000 		.4byte	.LFB21
 8178 00b4 50000000 		.4byte	.LFE21-.LFB21
 8179 00b8 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 200


 8180 00bc D4000000 		.4byte	.LFE22-.LFB22
 8181 00c0 00000000 		.4byte	.LFB23
 8182 00c4 6C000000 		.4byte	.LFE23-.LFB23
 8183 00c8 00000000 		.4byte	.LFB24
 8184 00cc 58000000 		.4byte	.LFE24-.LFB24
 8185 00d0 00000000 		.4byte	.LFB25
 8186 00d4 54000000 		.4byte	.LFE25-.LFB25
 8187 00d8 00000000 		.4byte	.LFB26
 8188 00dc 74000000 		.4byte	.LFE26-.LFB26
 8189 00e0 00000000 		.4byte	.LFB27
 8190 00e4 70010000 		.4byte	.LFE27-.LFB27
 8191 00e8 00000000 		.4byte	.LFB28
 8192 00ec 7C000000 		.4byte	.LFE28-.LFB28
 8193 00f0 00000000 		.4byte	.LFB29
 8194 00f4 8C000000 		.4byte	.LFE29-.LFB29
 8195 00f8 00000000 		.4byte	.LFB30
 8196 00fc 60000000 		.4byte	.LFE30-.LFB30
 8197 0100 00000000 		.4byte	.LFB31
 8198 0104 28000000 		.4byte	.LFE31-.LFB31
 8199 0108 00000000 		.4byte	.LFB32
 8200 010c 18000000 		.4byte	.LFE32-.LFB32
 8201 0110 00000000 		.4byte	.LFB33
 8202 0114 14000000 		.4byte	.LFE33-.LFB33
 8203 0118 00000000 		.4byte	.LFB34
 8204 011c 30000000 		.4byte	.LFE34-.LFB34
 8205 0120 00000000 		.4byte	.LFB35
 8206 0124 24000000 		.4byte	.LFE35-.LFB35
 8207 0128 00000000 		.4byte	.LFB36
 8208 012c 18000000 		.4byte	.LFE36-.LFB36
 8209 0130 00000000 		.4byte	.LFB37
 8210 0134 48000000 		.4byte	.LFE37-.LFB37
 8211 0138 00000000 		.4byte	.LFB38
 8212 013c 34000000 		.4byte	.LFE38-.LFB38
 8213 0140 00000000 		.4byte	.LFB39
 8214 0144 4C000000 		.4byte	.LFE39-.LFB39
 8215 0148 00000000 		.4byte	.LFB40
 8216 014c 36000000 		.4byte	.LFE40-.LFB40
 8217 0150 00000000 		.4byte	.LFB41
 8218 0154 A8000000 		.4byte	.LFE41-.LFB41
 8219 0158 00000000 		.4byte	.LFB42
 8220 015c 5C000000 		.4byte	.LFE42-.LFB42
 8221 0160 00000000 		.4byte	.LFB43
 8222 0164 28000000 		.4byte	.LFE43-.LFB43
 8223 0168 00000000 		.4byte	.LFB44
 8224 016c 30000000 		.4byte	.LFE44-.LFB44
 8225 0170 00000000 		.4byte	.LFB45
 8226 0174 28000000 		.4byte	.LFE45-.LFB45
 8227 0178 00000000 		.4byte	.LFB46
 8228 017c 28000000 		.4byte	.LFE46-.LFB46
 8229 0180 00000000 		.4byte	.LFB47
 8230 0184 28000000 		.4byte	.LFE47-.LFB47
 8231 0188 00000000 		.4byte	.LFB48
 8232 018c 14000000 		.4byte	.LFE48-.LFB48
 8233 0190 00000000 		.4byte	.LFB49
 8234 0194 20000000 		.4byte	.LFE49-.LFB49
 8235 0198 00000000 		.4byte	.LFB50
 8236 019c 48000000 		.4byte	.LFE50-.LFB50
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 201


 8237 01a0 00000000 		.4byte	.LFB51
 8238 01a4 28000000 		.4byte	.LFE51-.LFB51
 8239 01a8 00000000 		.4byte	.LFB52
 8240 01ac 84000000 		.4byte	.LFE52-.LFB52
 8241 01b0 00000000 		.4byte	.LFB53
 8242 01b4 24000000 		.4byte	.LFE53-.LFB53
 8243 01b8 00000000 		.4byte	.LFB54
 8244 01bc 64000000 		.4byte	.LFE54-.LFB54
 8245 01c0 00000000 		.4byte	.LFB55
 8246 01c4 1C000000 		.4byte	.LFE55-.LFB55
 8247 01c8 00000000 		.4byte	.LFB56
 8248 01cc 18000000 		.4byte	.LFE56-.LFB56
 8249 01d0 00000000 		.4byte	.LFB57
 8250 01d4 18000000 		.4byte	.LFE57-.LFB57
 8251 01d8 00000000 		.4byte	.LFB58
 8252 01dc 18000000 		.4byte	.LFE58-.LFB58
 8253 01e0 00000000 		.4byte	.LFB59
 8254 01e4 1C000000 		.4byte	.LFE59-.LFB59
 8255 01e8 00000000 		.4byte	.LFB60
 8256 01ec 18000000 		.4byte	.LFE60-.LFB60
 8257 01f0 00000000 		.4byte	.LFB61
 8258 01f4 18000000 		.4byte	.LFE61-.LFB61
 8259 01f8 00000000 		.4byte	.LFB62
 8260 01fc 34000000 		.4byte	.LFE62-.LFB62
 8261 0200 00000000 		.4byte	.LFB63
 8262 0204 18000000 		.4byte	.LFE63-.LFB63
 8263 0208 00000000 		.4byte	.LFB64
 8264 020c 18000000 		.4byte	.LFE64-.LFB64
 8265 0210 00000000 		.4byte	.LFB65
 8266 0214 14000000 		.4byte	.LFE65-.LFB65
 8267 0218 00000000 		.4byte	.LFB66
 8268 021c 2C000000 		.4byte	.LFE66-.LFB66
 8269 0220 00000000 		.4byte	.LFB67
 8270 0224 1C000000 		.4byte	.LFE67-.LFB67
 8271 0228 00000000 		.4byte	.LFB68
 8272 022c 44000000 		.4byte	.LFE68-.LFB68
 8273 0230 00000000 		.4byte	.LFB69
 8274 0234 C0000000 		.4byte	.LFE69-.LFB69
 8275 0238 00000000 		.4byte	.LFB70
 8276 023c 38000000 		.4byte	.LFE70-.LFB70
 8277 0240 00000000 		.4byte	.LFB71
 8278 0244 38000000 		.4byte	.LFE71-.LFB71
 8279 0248 00000000 		.4byte	.LFB72
 8280 024c 38000000 		.4byte	.LFE72-.LFB72
 8281 0250 00000000 		.4byte	.LFB73
 8282 0254 A0000000 		.4byte	.LFE73-.LFB73
 8283 0258 00000000 		.4byte	0
 8284 025c 00000000 		.4byte	0
 8285              		.section	.debug_ranges,"",%progbits
 8286              	.Ldebug_ranges0:
 8287 0000 00000000 		.4byte	.LFB1
 8288 0004 20000000 		.4byte	.LFE1
 8289 0008 00000000 		.4byte	.LFB2
 8290 000c 20000000 		.4byte	.LFE2
 8291 0010 00000000 		.4byte	.LFB3
 8292 0014 54010000 		.4byte	.LFE3
 8293 0018 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 202


 8294 001c 1C000000 		.4byte	.LFE4
 8295 0020 00000000 		.4byte	.LFB5
 8296 0024 20000000 		.4byte	.LFE5
 8297 0028 00000000 		.4byte	.LFB6
 8298 002c 50000000 		.4byte	.LFE6
 8299 0030 00000000 		.4byte	.LFB7
 8300 0034 34000000 		.4byte	.LFE7
 8301 0038 00000000 		.4byte	.LFB8
 8302 003c 20000000 		.4byte	.LFE8
 8303 0040 00000000 		.4byte	.LFB9
 8304 0044 70000000 		.4byte	.LFE9
 8305 0048 00000000 		.4byte	.LFB10
 8306 004c 50000000 		.4byte	.LFE10
 8307 0050 00000000 		.4byte	.LFB11
 8308 0054 4C000000 		.4byte	.LFE11
 8309 0058 00000000 		.4byte	.LFB12
 8310 005c 44000000 		.4byte	.LFE12
 8311 0060 00000000 		.4byte	.LFB13
 8312 0064 64020000 		.4byte	.LFE13
 8313 0068 00000000 		.4byte	.LFB14
 8314 006c 68000000 		.4byte	.LFE14
 8315 0070 00000000 		.4byte	.LFB15
 8316 0074 1C000000 		.4byte	.LFE15
 8317 0078 00000000 		.4byte	.LFB16
 8318 007c 24000000 		.4byte	.LFE16
 8319 0080 00000000 		.4byte	.LFB17
 8320 0084 98000000 		.4byte	.LFE17
 8321 0088 00000000 		.4byte	.LFB18
 8322 008c E4010000 		.4byte	.LFE18
 8323 0090 00000000 		.4byte	.LFB19
 8324 0094 10010000 		.4byte	.LFE19
 8325 0098 00000000 		.4byte	.LFB20
 8326 009c 6C000000 		.4byte	.LFE20
 8327 00a0 00000000 		.4byte	.LFB21
 8328 00a4 50000000 		.4byte	.LFE21
 8329 00a8 00000000 		.4byte	.LFB22
 8330 00ac D4000000 		.4byte	.LFE22
 8331 00b0 00000000 		.4byte	.LFB23
 8332 00b4 6C000000 		.4byte	.LFE23
 8333 00b8 00000000 		.4byte	.LFB24
 8334 00bc 58000000 		.4byte	.LFE24
 8335 00c0 00000000 		.4byte	.LFB25
 8336 00c4 54000000 		.4byte	.LFE25
 8337 00c8 00000000 		.4byte	.LFB26
 8338 00cc 74000000 		.4byte	.LFE26
 8339 00d0 00000000 		.4byte	.LFB27
 8340 00d4 70010000 		.4byte	.LFE27
 8341 00d8 00000000 		.4byte	.LFB28
 8342 00dc 7C000000 		.4byte	.LFE28
 8343 00e0 00000000 		.4byte	.LFB29
 8344 00e4 8C000000 		.4byte	.LFE29
 8345 00e8 00000000 		.4byte	.LFB30
 8346 00ec 60000000 		.4byte	.LFE30
 8347 00f0 00000000 		.4byte	.LFB31
 8348 00f4 28000000 		.4byte	.LFE31
 8349 00f8 00000000 		.4byte	.LFB32
 8350 00fc 18000000 		.4byte	.LFE32
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 203


 8351 0100 00000000 		.4byte	.LFB33
 8352 0104 14000000 		.4byte	.LFE33
 8353 0108 00000000 		.4byte	.LFB34
 8354 010c 30000000 		.4byte	.LFE34
 8355 0110 00000000 		.4byte	.LFB35
 8356 0114 24000000 		.4byte	.LFE35
 8357 0118 00000000 		.4byte	.LFB36
 8358 011c 18000000 		.4byte	.LFE36
 8359 0120 00000000 		.4byte	.LFB37
 8360 0124 48000000 		.4byte	.LFE37
 8361 0128 00000000 		.4byte	.LFB38
 8362 012c 34000000 		.4byte	.LFE38
 8363 0130 00000000 		.4byte	.LFB39
 8364 0134 4C000000 		.4byte	.LFE39
 8365 0138 00000000 		.4byte	.LFB40
 8366 013c 36000000 		.4byte	.LFE40
 8367 0140 00000000 		.4byte	.LFB41
 8368 0144 A8000000 		.4byte	.LFE41
 8369 0148 00000000 		.4byte	.LFB42
 8370 014c 5C000000 		.4byte	.LFE42
 8371 0150 00000000 		.4byte	.LFB43
 8372 0154 28000000 		.4byte	.LFE43
 8373 0158 00000000 		.4byte	.LFB44
 8374 015c 30000000 		.4byte	.LFE44
 8375 0160 00000000 		.4byte	.LFB45
 8376 0164 28000000 		.4byte	.LFE45
 8377 0168 00000000 		.4byte	.LFB46
 8378 016c 28000000 		.4byte	.LFE46
 8379 0170 00000000 		.4byte	.LFB47
 8380 0174 28000000 		.4byte	.LFE47
 8381 0178 00000000 		.4byte	.LFB48
 8382 017c 14000000 		.4byte	.LFE48
 8383 0180 00000000 		.4byte	.LFB49
 8384 0184 20000000 		.4byte	.LFE49
 8385 0188 00000000 		.4byte	.LFB50
 8386 018c 48000000 		.4byte	.LFE50
 8387 0190 00000000 		.4byte	.LFB51
 8388 0194 28000000 		.4byte	.LFE51
 8389 0198 00000000 		.4byte	.LFB52
 8390 019c 84000000 		.4byte	.LFE52
 8391 01a0 00000000 		.4byte	.LFB53
 8392 01a4 24000000 		.4byte	.LFE53
 8393 01a8 00000000 		.4byte	.LFB54
 8394 01ac 64000000 		.4byte	.LFE54
 8395 01b0 00000000 		.4byte	.LFB55
 8396 01b4 1C000000 		.4byte	.LFE55
 8397 01b8 00000000 		.4byte	.LFB56
 8398 01bc 18000000 		.4byte	.LFE56
 8399 01c0 00000000 		.4byte	.LFB57
 8400 01c4 18000000 		.4byte	.LFE57
 8401 01c8 00000000 		.4byte	.LFB58
 8402 01cc 18000000 		.4byte	.LFE58
 8403 01d0 00000000 		.4byte	.LFB59
 8404 01d4 1C000000 		.4byte	.LFE59
 8405 01d8 00000000 		.4byte	.LFB60
 8406 01dc 18000000 		.4byte	.LFE60
 8407 01e0 00000000 		.4byte	.LFB61
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 204


 8408 01e4 18000000 		.4byte	.LFE61
 8409 01e8 00000000 		.4byte	.LFB62
 8410 01ec 34000000 		.4byte	.LFE62
 8411 01f0 00000000 		.4byte	.LFB63
 8412 01f4 18000000 		.4byte	.LFE63
 8413 01f8 00000000 		.4byte	.LFB64
 8414 01fc 18000000 		.4byte	.LFE64
 8415 0200 00000000 		.4byte	.LFB65
 8416 0204 14000000 		.4byte	.LFE65
 8417 0208 00000000 		.4byte	.LFB66
 8418 020c 2C000000 		.4byte	.LFE66
 8419 0210 00000000 		.4byte	.LFB67
 8420 0214 1C000000 		.4byte	.LFE67
 8421 0218 00000000 		.4byte	.LFB68
 8422 021c 44000000 		.4byte	.LFE68
 8423 0220 00000000 		.4byte	.LFB69
 8424 0224 C0000000 		.4byte	.LFE69
 8425 0228 00000000 		.4byte	.LFB70
 8426 022c 38000000 		.4byte	.LFE70
 8427 0230 00000000 		.4byte	.LFB71
 8428 0234 38000000 		.4byte	.LFE71
 8429 0238 00000000 		.4byte	.LFB72
 8430 023c 38000000 		.4byte	.LFE72
 8431 0240 00000000 		.4byte	.LFB73
 8432 0244 A0000000 		.4byte	.LFE73
 8433 0248 00000000 		.4byte	0
 8434 024c 00000000 		.4byte	0
 8435              		.section	.debug_line,"",%progbits
 8436              	.Ldebug_line0:
 8437 0000 97080000 		.section	.debug_str,"MS",%progbits,1
 8437      02004D00 
 8437      00000201 
 8437      FB0E0D00 
 8437      01010101 
 8438              	.LASF116:
 8439 0000 72616D56 		.ascii	"ramVectorTable\000"
 8439      6563746F 
 8439      72546162 
 8439      6C6500
 8440              	.LASF49:
 8441 000f 62675472 		.ascii	"bgTrim4\000"
 8441      696D3400 
 8442              	.LASF10:
 8443 0017 75696E74 		.ascii	"uint16\000"
 8443      313600
 8444              	.LASF109:
 8445 001e 696E7453 		.ascii	"intState\000"
 8445      74617465 
 8445      00
 8446              	.LASF123:
 8447 0027 76616C75 		.ascii	"value\000"
 8447      6500
 8448              	.LASF40:
 8449 002d 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 8449      73436C6B 
 8449      57726974 
 8449      65486663 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 205


 8449      6C6B4469 
 8450              	.LASF75:
 8451 0046 636F756E 		.ascii	"counts\000"
 8451      747300
 8452              	.LASF98:
 8453 004d 43795379 		.ascii	"CySysClkPllSetSource\000"
 8453      73436C6B 
 8453      506C6C53 
 8453      6574536F 
 8453      75726365 
 8454              	.LASF171:
 8455 0062 43795379 		.ascii	"CySysClkPumpConfig\000"
 8455      73436C6B 
 8455      50756D70 
 8455      436F6E66 
 8455      696700
 8456              	.LASF42:
 8457 0075 43795379 		.ascii	"CySysEnablePumpClock\000"
 8457      73456E61 
 8457      626C6550 
 8457      756D7043 
 8457      6C6F636B 
 8458              	.LASF69:
 8459 008a 43795379 		.ascii	"CySysClkConfigureEcoDrive\000"
 8459      73436C6B 
 8459      436F6E66 
 8459      69677572 
 8459      6545636F 
 8460              	.LASF153:
 8461 00a4 72657456 		.ascii	"retVal\000"
 8461      616C00
 8462              	.LASF108:
 8463 00ab 43794469 		.ascii	"CyDisableInts\000"
 8463      7361626C 
 8463      65496E74 
 8463      7300
 8464              	.LASF25:
 8465 00b9 63795F73 		.ascii	"cy_sys_clk_pll_regs_struct\000"
 8465      79735F63 
 8465      6C6B5F70 
 8465      6C6C5F72 
 8465      6567735F 
 8466              	.LASF52:
 8467 00d4 63757272 		.ascii	"currentImoTrim2Value\000"
 8467      656E7449 
 8467      6D6F5472 
 8467      696D3256 
 8467      616C7565 
 8468              	.LASF7:
 8469 00e9 6C6F6E67 		.ascii	"long long unsigned int\000"
 8469      206C6F6E 
 8469      6720756E 
 8469      7369676E 
 8469      65642069 
 8470              	.LASF90:
 8471 0100 706C6C46 		.ascii	"pllFreq\000"
 8471      72657100 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 206


 8472              	.LASF167:
 8473 0108 43795379 		.ascii	"CySysTickInitVar\000"
 8473      73546963 
 8473      6B496E69 
 8473      74566172 
 8473      00
 8474              	.LASF24:
 8475 0119 74657374 		.ascii	"test\000"
 8475      00
 8476              	.LASF161:
 8477 011e 696E7465 		.ascii	"interfaceNumber\000"
 8477      72666163 
 8477      654E756D 
 8477      62657200 
 8478              	.LASF93:
 8479 012e 714D6178 		.ascii	"qMax\000"
 8479      00
 8480              	.LASF100:
 8481 0133 43795379 		.ascii	"CySysClkPllSetOutputDivider\000"
 8481      73436C6B 
 8481      506C6C53 
 8481      65744F75 
 8481      74707574 
 8482              	.LASF131:
 8483 014f 4379536F 		.ascii	"CySoftwareReset\000"
 8483      66747761 
 8483      72655265 
 8483      73657400 
 8484              	.LASF141:
 8485 015f 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 8485      73546963 
 8485      6B456E61 
 8485      626C6549 
 8485      6E746572 
 8486              	.LASF6:
 8487 0178 6C6F6E67 		.ascii	"long long int\000"
 8487      206C6F6E 
 8487      6720696E 
 8487      7400
 8488              	.LASF0:
 8489 0186 7369676E 		.ascii	"signed char\000"
 8489      65642063 
 8489      68617200 
 8490              	.LASF29:
 8491 0192 66726571 		.ascii	"freq\000"
 8491      00
 8492              	.LASF96:
 8493 0197 6676636F 		.ascii	"fvco\000"
 8493      00
 8494              	.LASF136:
 8495 019c 43794465 		.ascii	"CyDelayFreq\000"
 8495      6C617946 
 8495      72657100 
 8496              	.LASF30:
 8497 01a8 696E7465 		.ascii	"interruptState\000"
 8497      72727570 
 8497      74537461 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 207


 8497      746500
 8498              	.LASF12:
 8499 01b7 696E7433 		.ascii	"int32\000"
 8499      3200
 8500              	.LASF134:
 8501 01bd 43794465 		.ascii	"CyDelayUs\000"
 8501      6C617955 
 8501      7300
 8502              	.LASF144:
 8503 01c7 43795379 		.ascii	"CySysTickGetReload\000"
 8503      73546963 
 8503      6B476574 
 8503      52656C6F 
 8503      616400
 8504              	.LASF37:
 8505 01da 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 8505      73436C6B 
 8505      496D6F47 
 8505      65745763 
 8505      6F4C6F63 
 8506              	.LASF54:
 8507 01f0 77636F4C 		.ascii	"wcoLock\000"
 8507      6F636B00 
 8508              	.LASF4:
 8509 01f8 6C6F6E67 		.ascii	"long int\000"
 8509      20696E74 
 8509      00
 8510              	.LASF70:
 8511 0201 634C6F61 		.ascii	"cLoad\000"
 8511      6400
 8512              	.LASF154:
 8513 0207 43795379 		.ascii	"CySysTickGetCallback\000"
 8513      73546963 
 8513      6B476574 
 8513      43616C6C 
 8513      6261636B 
 8514              	.LASF9:
 8515 021c 75696E74 		.ascii	"uint8\000"
 8515      3800
 8516              	.LASF164:
 8517 0222 63796465 		.ascii	"cydelayFreqKhz\000"
 8517      6C617946 
 8517      7265714B 
 8517      687A00
 8518              	.LASF92:
 8519 0231 714D696E 		.ascii	"qMin\000"
 8519      00
 8520              	.LASF44:
 8521 0236 656E6162 		.ascii	"enable\000"
 8521      6C6500
 8522              	.LASF14:
 8523 023d 646F7562 		.ascii	"double\000"
 8523      6C6500
 8524              	.LASF35:
 8525 0244 43795379 		.ascii	"CySysClkImoEnableUsbLock\000"
 8525      73436C6B 
 8525      496D6F45 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 208


 8525      6E61626C 
 8525      65557362 
 8526              	.LASF122:
 8527 025d 73686966 		.ascii	"shift\000"
 8527      7400
 8528              	.LASF105:
 8529 0263 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 8529      734C7664 
 8529      436C6561 
 8529      72496E74 
 8529      65727275 
 8530              	.LASF11:
 8531 027a 75696E74 		.ascii	"uint32\000"
 8531      333200
 8532              	.LASF118:
 8533 0281 4379496E 		.ascii	"CyIntSetVector\000"
 8533      74536574 
 8533      56656374 
 8533      6F7200
 8534              	.LASF61:
 8535 0290 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 8535      73436C6B 
 8535      45636F52 
 8535      65616453 
 8535      74617475 
 8536              	.LASF113:
 8537 02a6 6E756D62 		.ascii	"number\000"
 8537      657200
 8538              	.LASF111:
 8539 02ad 6D61736B 		.ascii	"mask\000"
 8539      00
 8540              	.LASF56:
 8541 02b2 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 8541      73436C6B 
 8541      47657453 
 8541      7973636C 
 8541      6B536F75 
 8542              	.LASF39:
 8543 02ca 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 8543      73436C6B 
 8543      496D6F45 
 8543      6E61626C 
 8543      6557636F 
 8544              	.LASF124:
 8545 02e3 4379496E 		.ascii	"CyIntGetPriority\000"
 8545      74476574 
 8545      5072696F 
 8545      72697479 
 8545      00
 8546              	.LASF166:
 8547 02f4 63796465 		.ascii	"cydelay32kMs\000"
 8547      6C617933 
 8547      326B4D73 
 8547      00
 8548              	.LASF72:
 8549 0301 676D4D69 		.ascii	"gmMin\000"
 8549      6E00
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 209


 8550              	.LASF138:
 8551 0307 43795379 		.ascii	"CySysTickInit\000"
 8551      73546963 
 8551      6B496E69 
 8551      7400
 8552              	.LASF78:
 8553 0315 43795379 		.ascii	"CySysClkPllSetPQ\000"
 8553      73436C6B 
 8553      506C6C53 
 8553      65745051 
 8553      00
 8554              	.LASF147:
 8555 0326 636C6F63 		.ascii	"clockSource\000"
 8555      6B536F75 
 8555      72636500 
 8556              	.LASF155:
 8557 0332 43794765 		.ascii	"CyGetUniqueId\000"
 8557      74556E69 
 8557      71756549 
 8557      6400
 8558              	.LASF130:
 8559 0340 43794861 		.ascii	"CyHalt\000"
 8559      6C7400
 8560              	.LASF8:
 8561 0347 756E7369 		.ascii	"unsigned int\000"
 8561      676E6564 
 8561      20696E74 
 8561      00
 8562              	.LASF150:
 8563 0354 43795379 		.ascii	"CySysTickClear\000"
 8563      73546963 
 8563      6B436C65 
 8563      617200
 8564              	.LASF5:
 8565 0363 6C6F6E67 		.ascii	"long unsigned int\000"
 8565      20756E73 
 8565      69676E65 
 8565      6420696E 
 8565      7400
 8566              	.LASF104:
 8567 0375 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 8567      734C7664 
 8567      47657449 
 8567      6E746572 
 8567      72757074 
 8568              	.LASF68:
 8569 0390 67547269 		.ascii	"gTrim\000"
 8569      6D00
 8570              	.LASF28:
 8571 0396 43795379 		.ascii	"CySysClkImoStop\000"
 8571      73436C6B 
 8571      496D6F53 
 8571      746F7000 
 8572              	.LASF128:
 8573 03a6 4379496E 		.ascii	"CyIntSetPending\000"
 8573      74536574 
 8573      50656E64 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 210


 8573      696E6700 
 8574              	.LASF143:
 8575 03b6 43795379 		.ascii	"CySysTickSetReload\000"
 8575      73546963 
 8575      6B536574 
 8575      52656C6F 
 8575      616400
 8576              	.LASF88:
 8577 03c9 43795379 		.ascii	"CySysClkPllSetFrequency\000"
 8577      73436C6B 
 8577      506C6C53 
 8577      65744672 
 8577      65717565 
 8578              	.LASF32:
 8579 03e1 6C664C69 		.ascii	"lfLimit\000"
 8579      6D697400 
 8580              	.LASF71:
 8581 03e9 6D617841 		.ascii	"maxAmplitude\000"
 8581      6D706C69 
 8581      74756465 
 8581      00
 8582              	.LASF106:
 8583 03f6 43795379 		.ascii	"CySysGetResetReason\000"
 8583      73476574 
 8583      52657365 
 8583      74526561 
 8583      736F6E00 
 8584              	.LASF3:
 8585 040a 73686F72 		.ascii	"short unsigned int\000"
 8585      7420756E 
 8585      7369676E 
 8585      65642069 
 8585      6E7400
 8586              	.LASF31:
 8587 041d 72656754 		.ascii	"regTmp\000"
 8587      6D7000
 8588              	.LASF174:
 8589 0424 5C5C766D 		.ascii	"\\\\vmware-host\\Shared Folders\\Documents\\PSoC Cr"
 8589      77617265 
 8589      2D686F73 
 8589      745C5368 
 8589      61726564 
 8590 0452 6561746F 		.ascii	"eator\\TestThingSoc\\USBFS_UART01.cydsn\000"
 8590      725C5465 
 8590      73745468 
 8590      696E6753 
 8590      6F635C55 
 8591              	.LASF146:
 8592 0478 43795379 		.ascii	"CySysTickSetClockSource\000"
 8592      73546963 
 8592      6B536574 
 8592      436C6F63 
 8592      6B536F75 
 8593              	.LASF74:
 8594 0490 77616974 		.ascii	"wait\000"
 8594      00
 8595              	.LASF36:
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 211


 8596 0495 43795379 		.ascii	"CySysClkImoDisableUsbLock\000"
 8596      73436C6B 
 8596      496D6F44 
 8596      69736162 
 8596      6C655573 
 8597              	.LASF121:
 8598 04af 7072696F 		.ascii	"priority\000"
 8598      72697479 
 8598      00
 8599              	.LASF110:
 8600 04b8 4379456E 		.ascii	"CyEnableInts\000"
 8600      61626C65 
 8600      496E7473 
 8600      00
 8601              	.LASF48:
 8602 04c5 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 8602      73436C6B 
 8602      57726974 
 8602      65496D6F 
 8602      46726571 
 8603              	.LASF120:
 8604 04da 4379496E 		.ascii	"CyIntSetPriority\000"
 8604      74536574 
 8604      5072696F 
 8604      72697479 
 8604      00
 8605              	.LASF38:
 8606 04eb 43795379 		.ascii	"CySysClkImoGetUsbLock\000"
 8606      73436C6B 
 8606      496D6F47 
 8606      65745573 
 8606      624C6F63 
 8607              	.LASF55:
 8608 0501 7573624C 		.ascii	"usbLock\000"
 8608      6F636B00 
 8609              	.LASF158:
 8610 0509 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 8610      73536574 
 8610      466C6173 
 8610      68416363 
 8610      65737341 
 8611              	.LASF129:
 8612 0528 4379496E 		.ascii	"CyIntClearPending\000"
 8612      74436C65 
 8612      61725065 
 8612      6E64696E 
 8612      6700
 8613              	.LASF86:
 8614 053a 706C6C42 		.ascii	"pllBypassMode\000"
 8614      79706173 
 8614      734D6F64 
 8614      6500
 8615              	.LASF112:
 8616 0548 4379496E 		.ascii	"CyIntSetSysVector\000"
 8616      74536574 
 8616      53797356 
 8616      6563746F 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 212


 8616      7200
 8617              	.LASF94:
 8618 055a 7156616C 		.ascii	"qVal\000"
 8618      00
 8619              	.LASF34:
 8620 055f 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 8620      73436C6B 
 8620      496D6F44 
 8620      69736162 
 8620      6C655763 
 8621              	.LASF77:
 8622 0579 43795379 		.ascii	"CySysClkPllStop\000"
 8622      73436C6B 
 8622      506C6C53 
 8622      746F7000 
 8623              	.LASF18:
 8624 0589 72656733 		.ascii	"reg32\000"
 8624      3200
 8625              	.LASF137:
 8626 058f 43795379 		.ascii	"CySysTickStart\000"
 8626      73546963 
 8626      6B537461 
 8626      727400
 8627              	.LASF59:
 8628 059e 72657475 		.ascii	"returnStatus\000"
 8628      726E5374 
 8628      61747573 
 8628      00
 8629              	.LASF99:
 8630 05ab 736F7572 		.ascii	"source\000"
 8630      636500
 8631              	.LASF20:
 8632 05b2 73697A65 		.ascii	"sizetype\000"
 8632      74797065 
 8632      00
 8633              	.LASF160:
 8634 05bb 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 8634      73536574 
 8634      50657269 
 8634      70686572 
 8634      616C4163 
 8635              	.LASF80:
 8636 05df 72656665 		.ascii	"reference\000"
 8636      72656E63 
 8636      6500
 8637              	.LASF114:
 8638 05e9 61646472 		.ascii	"address\000"
 8638      65737300 
 8639              	.LASF125:
 8640 05f1 4379496E 		.ascii	"CyIntEnable\000"
 8640      74456E61 
 8640      626C6500 
 8641              	.LASF50:
 8642 05fd 62675472 		.ascii	"bgTrim5\000"
 8642      696D3500 
 8643              	.LASF45:
 8644 0605 73797363 		.ascii	"sysclkSource\000"
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 213


 8644      6C6B536F 
 8644      75726365 
 8644      00
 8645              	.LASF152:
 8646 0612 66756E63 		.ascii	"function\000"
 8646      74696F6E 
 8646      00
 8647              	.LASF89:
 8648 061b 696E7075 		.ascii	"inputFreq\000"
 8648      74467265 
 8648      7100
 8649              	.LASF168:
 8650 0625 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 8650      6F467265 
 8650      714D687A 
 8650      32526567 
 8650      00
 8651              	.LASF97:
 8652 0636 66657272 		.ascii	"ferr\000"
 8652      00
 8653              	.LASF170:
 8654 063b 43795379 		.ascii	"CySysClkImoTrim4\000"
 8654      73436C6B 
 8654      496D6F54 
 8654      72696D34 
 8654      00
 8655              	.LASF145:
 8656 064c 43795379 		.ascii	"CySysTickGetValue\000"
 8656      73546963 
 8656      6B476574 
 8656      56616C75 
 8656      6500
 8657              	.LASF163:
 8658 065e 63796465 		.ascii	"cydelayFreqHz\000"
 8658      6C617946 
 8658      72657148 
 8658      7A00
 8659              	.LASF95:
 8660 066c 7056616C 		.ascii	"pVal\000"
 8660      00
 8661              	.LASF67:
 8662 0671 72547269 		.ascii	"rTrim\000"
 8662      6D00
 8663              	.LASF81:
 8664 0677 63757272 		.ascii	"current\000"
 8664      656E7400 
 8665              	.LASF91:
 8666 067f 66726571 		.ascii	"freqTol\000"
 8666      546F6C00 
 8667              	.LASF65:
 8668 0687 61547269 		.ascii	"aTrim\000"
 8668      6D00
 8669              	.LASF13:
 8670 068d 666C6F61 		.ascii	"float\000"
 8670      7400
 8671              	.LASF101:
 8672 0693 43795379 		.ascii	"CySysLvdEnable\000"
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 214


 8672      734C7664 
 8672      456E6162 
 8672      6C6500
 8673              	.LASF21:
 8674 06a2 63795379 		.ascii	"cySysTickCallback\000"
 8674      73546963 
 8674      6B43616C 
 8674      6C626163 
 8674      6B00
 8675              	.LASF149:
 8676 06b4 43795379 		.ascii	"CySysTickGetCountFlag\000"
 8676      73546963 
 8676      6B476574 
 8676      436F756E 
 8676      74466C61 
 8677              	.LASF119:
 8678 06ca 4379496E 		.ascii	"CyIntGetVector\000"
 8678      74476574 
 8678      56656374 
 8678      6F7200
 8679              	.LASF133:
 8680 06d9 6D696C6C 		.ascii	"milliseconds\000"
 8680      69736563 
 8680      6F6E6473 
 8680      00
 8681              	.LASF76:
 8682 06e6 43795379 		.ascii	"CySysClkPllGetLockStatus\000"
 8682      73436C6B 
 8682      506C6C47 
 8682      65744C6F 
 8682      636B5374 
 8683              	.LASF17:
 8684 06ff 72656738 		.ascii	"reg8\000"
 8684      00
 8685              	.LASF102:
 8686 0704 74687265 		.ascii	"threshold\000"
 8686      73686F6C 
 8686      6400
 8687              	.LASF73:
 8688 070e 43795379 		.ascii	"CySysClkPllStart\000"
 8688      73436C6B 
 8688      506C6C53 
 8688      74617274 
 8688      00
 8689              	.LASF157:
 8690 071f 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 8690      73536574 
 8690      52616D41 
 8690      63636573 
 8690      73417262 
 8691              	.LASF1:
 8692 073c 756E7369 		.ascii	"unsigned char\000"
 8692      676E6564 
 8692      20636861 
 8692      7200
 8693              	.LASF2:
 8694 074a 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 215


 8694      7420696E 
 8694      7400
 8695              	.LASF85:
 8696 0754 43795379 		.ascii	"CySysClkPllConfigChangeAllowed\000"
 8696      73436C6B 
 8696      506C6C43 
 8696      6F6E6669 
 8696      67436861 
 8697              	.LASF117:
 8698 0773 4379496E 		.ascii	"CyIntGetSysVector\000"
 8698      74476574 
 8698      53797356 
 8698      6563746F 
 8698      7200
 8699              	.LASF43:
 8700 0785 636C6B53 		.ascii	"clkSelect\000"
 8700      656C6563 
 8700      7400
 8701              	.LASF64:
 8702 078f 77445472 		.ascii	"wDTrim\000"
 8702      696D00
 8703              	.LASF57:
 8704 0796 43795379 		.ascii	"CySysClkEcoStart\000"
 8704      73436C6B 
 8704      45636F53 
 8704      74617274 
 8704      00
 8705              	.LASF127:
 8706 07a7 4379496E 		.ascii	"CyIntDisable\000"
 8706      74446973 
 8706      61626C65 
 8706      00
 8707              	.LASF107:
 8708 07b4 72656173 		.ascii	"reason\000"
 8708      6F6E00
 8709              	.LASF66:
 8710 07bb 66547269 		.ascii	"fTrim\000"
 8710      6D00
 8711              	.LASF84:
 8712 07c1 43795379 		.ascii	"CySysClkPllGetBypassMode\000"
 8712      73436C6B 
 8712      506C6C47 
 8712      65744279 
 8712      70617373 
 8713              	.LASF63:
 8714 07da 43795379 		.ascii	"CySysClkConfigureEcoTrim\000"
 8714      73436C6B 
 8714      436F6E66 
 8714      69677572 
 8714      6545636F 
 8715              	.LASF82:
 8716 07f3 43795379 		.ascii	"CySysClkPllSetBypassMode\000"
 8716      73436C6B 
 8716      506C6C53 
 8716      65744279 
 8716      70617373 
 8717              	.LASF15:
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 216


 8718 080c 63686172 		.ascii	"char\000"
 8718      00
 8719              	.LASF169:
 8720 0811 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 8720      6F467265 
 8720      714D687A 
 8720      3244706C 
 8720      6C4F6666 
 8721              	.LASF19:
 8722 0829 63796973 		.ascii	"cyisraddress\000"
 8722      72616464 
 8722      72657373 
 8722      00
 8723              	.LASF139:
 8724 0836 43795379 		.ascii	"CySysTickEnable\000"
 8724      73546963 
 8724      6B456E61 
 8724      626C6500 
 8725              	.LASF22:
 8726 0846 636F6E66 		.ascii	"config\000"
 8726      696700
 8727              	.LASF46:
 8728 084d 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 8728      73436C6B 
 8728      57726974 
 8728      65537973 
 8728      636C6B44 
 8729              	.LASF60:
 8730 0864 43795379 		.ascii	"CySysClkEcoStop\000"
 8730      73436C6B 
 8730      45636F53 
 8730      746F7000 
 8731              	.LASF162:
 8732 0874 43795379 		.ascii	"CySysTickCallbacks\000"
 8732      73546963 
 8732      6B43616C 
 8732      6C626163 
 8732      6B7300
 8733              	.LASF53:
 8734 0887 696D6F54 		.ascii	"imoTrim1Value\000"
 8734      72696D31 
 8734      56616C75 
 8734      6500
 8735              	.LASF156:
 8736 0895 756E6971 		.ascii	"uniqueId\000"
 8736      75654964 
 8736      00
 8737              	.LASF33:
 8738 089e 666C6173 		.ascii	"flashCtlReg\000"
 8738      6843746C 
 8738      52656700 
 8739              	.LASF126:
 8740 08aa 4379496E 		.ascii	"CyIntGetState\000"
 8740      74476574 
 8740      53746174 
 8740      6500
 8741              	.LASF132:
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 217


 8742 08b8 43794465 		.ascii	"CyDelay\000"
 8742      6C617900 
 8743              	.LASF148:
 8744 08c0 43795379 		.ascii	"CySysTickGetClockSource\000"
 8744      73546963 
 8744      6B476574 
 8744      436C6F63 
 8744      6B536F75 
 8745              	.LASF142:
 8746 08d8 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 8746      73546963 
 8746      6B446973 
 8746      61626C65 
 8746      496E7465 
 8747              	.LASF103:
 8748 08f2 43795379 		.ascii	"CySysLvdDisable\000"
 8748      734C7664 
 8748      44697361 
 8748      626C6500 
 8749              	.LASF115:
 8750 0902 6F6C6449 		.ascii	"oldIsr\000"
 8750      737200
 8751              	.LASF165:
 8752 0909 63796465 		.ascii	"cydelayFreqMhz\000"
 8752      6C617946 
 8752      7265714D 
 8752      687A00
 8753              	.LASF23:
 8754 0918 73746174 		.ascii	"status\000"
 8754      757300
 8755              	.LASF135:
 8756 091f 6D696372 		.ascii	"microseconds\000"
 8756      6F736563 
 8756      6F6E6473 
 8756      00
 8757              	.LASF159:
 8758 092c 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 8758      73536574 
 8758      446D6163 
 8758      41636365 
 8758      73734172 
 8759              	.LASF140:
 8760 094a 43795379 		.ascii	"CySysTickStop\000"
 8760      73546963 
 8760      6B53746F 
 8760      7000
 8761              	.LASF58:
 8762 0958 74696D65 		.ascii	"timeoutUs\000"
 8762      6F757455 
 8762      7300
 8763              	.LASF47:
 8764 0962 64697669 		.ascii	"divider\000"
 8764      64657200 
 8765              	.LASF16:
 8766 096a 63797374 		.ascii	"cystatus\000"
 8766      61747573 
 8766      00
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 218


 8767              	.LASF172:
 8768 0973 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8768      4320342E 
 8768      392E3320 
 8768      32303135 
 8768      30333033 
 8769 09a6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 8769      20726576 
 8769      6973696F 
 8769      6E203232 
 8769      31323230 
 8770 09d9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8770      66756E63 
 8770      74696F6E 
 8770      2D736563 
 8770      74696F6E 
 8771              	.LASF151:
 8772 0a01 43795379 		.ascii	"CySysTickSetCallback\000"
 8772      73546963 
 8772      6B536574 
 8772      43616C6C 
 8772      6261636B 
 8773              	.LASF27:
 8774 0a16 43795379 		.ascii	"CySysClkImoStart\000"
 8774      73436C6B 
 8774      496D6F53 
 8774      74617274 
 8774      00
 8775              	.LASF51:
 8776 0a27 6E657749 		.ascii	"newImoTrim2Value\000"
 8776      6D6F5472 
 8776      696D3256 
 8776      616C7565 
 8776      00
 8777              	.LASF83:
 8778 0a38 62797061 		.ascii	"bypass\000"
 8778      737300
 8779              	.LASF173:
 8780 0a3f 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 8780      72617465 
 8780      645F536F 
 8780      75726365 
 8780      5C50536F 
 8781              	.LASF41:
 8782 0a5e 746D7052 		.ascii	"tmpReg\000"
 8782      656700
 8783              	.LASF87:
 8784 0a65 43795379 		.ascii	"CySysClkPllGetUnlockStatus\000"
 8784      73436C6B 
 8784      506C6C47 
 8784      6574556E 
 8784      6C6F636B 
 8785              	.LASF175:
 8786 0a80 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 8786      73546963 
 8786      6B536572 
 8786      76696365 
ARM GAS  C:\Users\arh\AppData\Local\Temp\ccExPfKs.s 			page 219


 8786      43616C6C 
 8787              	.LASF62:
 8788 0a9a 72657475 		.ascii	"returnValue\000"
 8788      726E5661 
 8788      6C756500 
 8789              	.LASF79:
 8790 0aa6 66656564 		.ascii	"feedback\000"
 8790      6261636B 
 8790      00
 8791              	.LASF26:
 8792 0aaf 63795F73 		.ascii	"cy_sys_clk_pll_struct\000"
 8792      79735F63 
 8792      6C6B5F70 
 8792      6C6C5F73 
 8792      74727563 
 8793              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
